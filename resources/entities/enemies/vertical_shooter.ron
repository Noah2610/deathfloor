#![enable(implicit_some)]
(
    types: {
        "VerticalShooter": (
            spritesheet_filename: "enemy_verticalshooter_test.png",

            entity: (
                inherits: ["Enemy"],

                size: (
                    w: 30.0,
                    h: 24.0,
                ),

                components: [
                    MaxMovementVelocity((
                        y: 100.0,
                    )),
                    Animations({
                        Custom("Default"): Once([
                            (3, 500),
                        ]),
                        Custom("Charge"): Once([
                            (8, 100),
                            (9, 100),
                            (10, 100),
                            (11, 100),
                            (15, 50),
                        ]),
                        Custom("Reset"): Once([
                            (12, 40),
                            (13, 40),
                            (14, 40),
                            (2, 120),
                            (1, 120),
                            (0, 120),
                        ]),
                    }),
                    Hitbox(Custom([
                        (
                            top:    12.0,
                            bottom: -12.0,
                            left:   -14.0,
                            right:  14.0,
                        ),
                    ])),
                    Health((
                        health: 5,
                        max_health: 5,
                    )),
                    DealsDamage((
                        damage: 1,
                    )),
                    MovementAcceleration((
                        y: 400.0,
                    )),
                    Gravity(None),
                ],

                events: {
                    Init: AnimationAction(Push(Custom("Default"))),
                    OnAnimationEnd(Custom("Default")): AnimationAction(Push(Custom("Charge"))),
                    OnAnimationEnd(Custom("Charge")): Group([
                        AnimationAction(Push(Custom("Reset"))),
                        Random((
                            chance: 0.5,
                            on_success: Group([
                                InsertComponents([
                                    Facing(Left), // spritesheet faces left
                                ]),
                                SpawnAction(SpawnRelative((
                                    object: (
                                        type: Custom("ShooterBullet"),
                                        pos: (x: 24.0, y: -4.0),
                                        size: (w: 16.0, h: 16.0),
                                        props: {
                                            "variant": "Right",
                                        },
                                    ),
                                ))),
                            ]),
                            on_failure: Group([
                                InsertComponents([
                                    Facing(Right), // spritesheet faces left
                                ]),
                                SpawnAction(SpawnRelative((
                                    object: (
                                        type: Custom("ShooterBullet"),
                                        pos: (x: -24.0, y: -4.0),
                                        size: (w: 16.0, h: 16.0),
                                        props: {
                                            "variant": "Left",
                                        },
                                    ),
                                ))),
                            ]),
                        )),
                    ]),
                    OnAnimationEnd(Custom("Reset")): AnimationAction(Push(Custom("Default"))),
                },

                variants: {
                    "Up": (
                        components: [
                            Walker((
                                y: Up,
                            )),
                        ],
                        events: {
                            OnCollision(And([
                                    IsTag("Solid"),
                                    IsState(Enter),
                                    IsSide(Top),
                                ])): EntityAction(SwitchVariant("Down")),
                        },
                    ),
                    "Down": (
                        components: [
                            Walker((
                                y: Down,
                            )),
                        ],
                        events: {
                            OnCollision(And([
                                    IsTag("Solid"),
                                    IsState(Enter),
                                    IsSide(Bottom),
                                ])): EntityAction(SwitchVariant("Up")),
                        },
                    ),
                },
            ),
        ),
    }
)
