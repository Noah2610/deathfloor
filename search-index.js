var searchIndex={};
searchIndex["deathfloor"] = {"doc":"","i":[[5,"main","deathfloor","",null,[[]]],[0,"animation_key","","",null,null],[4,"AnimationKey","deathfloor::animation_key","",null,null],[13,"Idle","","",0,null],[13,"Walk","","",0,null],[17,"_IMPL_DESERIALIZE_FOR_AnimationKey","","",null,null],[0,"collision_tag","deathfloor","",null,null],[0,"prelude","deathfloor::collision_tag","",null,null],[0,"collision_label","","",null,null],[4,"CollisionLabel","deathfloor::collision_tag::collision_label","",null,null],[13,"Player","","",1,null],[13,"Tile","","",1,null],[13,"Solid","","",1,null],[13,"Jumppad","","",1,null],[13,"Bullet","","",1,null],[13,"Enemy","","",1,null],[17,"_IMPL_DESERIALIZE_FOR_CollisionLabel","","",null,null],[0,"collision_tag","deathfloor::collision_tag","",null,null],[3,"CollisionTag","deathfloor::collision_tag::collision_tag","",null,null],[12,"labels","","",2,null],[12,"collides_with","","",2,null],[3,"CollisionTagBuilder","","Builder for `CollisionTag`.",null,null],[12,"labels","","",3,null],[12,"collides_with","","",3,null],[3,"CollisionTagWrapper","","",null,null],[12,"labels","","",4,null],[12,"collides_with","","",4,null],[17,"_IMPL_DESERIALIZE_FOR_CollisionTag","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_CollisionTagWrapper","","",null,null],[11,"labels","","",3,[[["vec",["collisionlabel"]],["collisionlabel"]],["self"]]],[11,"collides_with","","",3,[[["vec",["collisionlabel"]],["collisionlabel"]],["self"]]],[11,"build","","Builds a new `CollisionTag`.",3,[[],[["collisiontag"],["result",["collisiontag","string"]],["string"]]]],[11,"builder","","",2,[[],["collisiontagbuilder"]]],[11,"label","","",3,[[["collisionlabel"]],["self"]]],[6,"SolidTag","deathfloor::collision_tag","",null,null],[0,"components","deathfloor","",null,null],[0,"bullet","deathfloor::components","",null,null],[3,"Bullet","deathfloor::components::bullet","",null,null],[12,"despawn_timer","","",5,null],[0,"enemy","deathfloor::components","",null,null],[3,"Enemy","deathfloor::components::enemy","",null,null],[12,"enemy_type","","",6,null],[0,"prelude","","",null,null],[0,"enemy_type","","",null,null],[3,"EnemyType","deathfloor::components::enemy::enemy_type","",null,null],[12,"0","","",7,null],[17,"_IMPL_DESERIALIZE_FOR_EnemyType","","",null,null],[11,"new","deathfloor::components::enemy","",6,[[["enemytype"]],["self"]]],[0,"event_listener","deathfloor::components","",null,null],[0,"prelude","deathfloor::components::event_listener","",null,null],[0,"actions","","",null,null],[3,"ActionTriggerStorages","deathfloor::components::event_listener::actions","",null,null],[12,"echo","","",8,null],[12,"group","","",8,null],[12,"move_action","","",8,null],[12,"random","","",8,null],[12,"delay","","",8,null],[12,"repeat_delay","","",8,null],[12,"insert_components","","",8,null],[4,"ActionType","","",null,null],[13,"Echo","","",9,null],[13,"Group","","",9,null],[13,"MoveAction","","",9,null],[13,"Random","","",9,null],[13,"Delay","","",9,null],[13,"RepeatDelay","","",9,null],[13,"InsertComponents","","",9,null],[0,"delay","","",null,null],[3,"Delay","deathfloor::components::event_listener::actions::delay","When triggered, waits the given delay milliseconds, then…",null,null],[12,"delay_ms","","Milliseconds to wait, before triggering action.",10,null],[12,"action","","The action to trigger, once the delay is done.",10,null],[17,"_IMPL_DESERIALIZE_FOR_Delay","","",null,null],[0,"echo","deathfloor::components::event_listener::actions","",null,null],[3,"Echo","deathfloor::components::event_listener::actions::echo","Prints the given string to stdout.",null,null],[12,"0","","",11,null],[17,"_IMPL_DESERIALIZE_FOR_Echo","","",null,null],[0,"group","deathfloor::components::event_listener::actions","",null,null],[3,"Group","deathfloor::components::event_listener::actions::group","Groups a list of `ActionType`s together. When this action…",null,null],[12,"0","","",12,null],[17,"_IMPL_DESERIALIZE_FOR_Group","","",null,null],[0,"insert_components","deathfloor::components::event_listener::actions","",null,null],[3,"InsertComponents","deathfloor::components::event_listener::actions::insert_components","Insert (add or overwrite existing) components. Can be…",null,null],[12,"0","","",13,null],[17,"_IMPL_DESERIALIZE_FOR_InsertComponents","","",null,null],[0,"move_action","deathfloor::components::event_listener::actions","",null,null],[3,"MoveAction","deathfloor::components::event_listener::actions::move_action","When triggers, queueus the given `MoveAction`.",null,null],[12,"0","","",14,null],[17,"_IMPL_DESERIALIZE_FOR_MoveAction","","",null,null],[0,"random","deathfloor::components::event_listener::actions","",null,null],[3,"Random","deathfloor::components::event_listener::actions::random","Action that randomly triggers one or another action.",null,null],[12,"chance","","The chance of this action succeeding. A number between…",15,null],[12,"on_success","","Action to trigger if the random chance succeeded.",15,null],[12,"on_failure","","Action to trigger if the random chance failed. Optional.",15,null],[17,"_IMPL_DESERIALIZE_FOR_Random","","",null,null],[0,"repeat_delay","deathfloor::components::event_listener::actions","",null,null],[3,"RepeatDelay","deathfloor::components::event_listener::actions::repeat_delay","Repeats the given `action` `loops` amount of times, with…",null,null],[12,"loops","","Amount of times the action should be triggered.",16,null],[12,"delay_ms","","Delay in milliseconds between each action.",16,null],[12,"action","","The action to trigger each iteration.",16,null],[17,"_IMPL_DESERIALIZE_FOR_RepeatDelay","","",null,null],[0,"prelude","deathfloor::components::event_listener::actions","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ActionType","","",null,null],[0,"action_trigger","deathfloor::components::event_listener","",null,null],[3,"ActionTrigger","deathfloor::components::event_listener::action_trigger","",null,null],[12,"actions","","",17,null],[17,"_IMPL_DESERIALIZE_FOR_ActionTrigger","","",null,null],[11,"trigger","","Trigger an action.",17,[[["a"],["self"]]]],[11,"drain","","Drain all triggered actions.",17,[[["self"]],["drain"]]],[0,"action_type_trigger","deathfloor::components::event_listener","",null,null],[3,"ActionTypeTrigger","deathfloor::components::event_listener::action_type_trigger","",null,null],[12,"action_types","","",18,null],[11,"trigger","","Trigger an `ActionType`-wrapped `Action`.",18,[[["self"],["actiontype"]]]],[11,"drain","","Drain all triggered `ActionType`s.",18,[[["self"]],[["actiontype"],["drain",["actiontype"]]]]],[0,"event_type","deathfloor::components::event_listener","",null,null],[4,"EventType","deathfloor::components::event_listener::event_type","Events, which trigger Actions.",null,null],[13,"OnSpawn","","Triggeres action once, as soon as possible (after entity…",19,null],[13,"OnDeath","","UNIMPLEMENTED Triggers action before entity is removed.",19,null],[13,"OnCollision","","Triggers action when a collision happens (with entity with…",19,null],[13,"Interval","","Triggers an action in regular intervals. Pass an interval…",19,null],[17,"_IMPL_DESERIALIZE_FOR_EventType","","",null,null],[0,"events_register","deathfloor::components::event_listener","",null,null],[3,"EventsRegister","deathfloor::components::event_listener::events_register","",null,null],[12,"events","","",20,null],[17,"_IMPL_DESERIALIZE_FOR_EventsRegister","","",null,null],[11,"events","","Returns all registered `EventType`s.",20,[[["self"]],["hashmap"]]],[11,"get_action","","Returns the `ActionType` for the given `EventType`.",20,[[["self"],["eventtype"]],[["actiontype"],["option",["actiontype"]]]]],[0,"jumper","deathfloor::components","",null,null],[3,"Jumper","deathfloor::components::jumper","",null,null],[12,"strength","","",21,null],[12,"kill_strength","","",21,null],[12,"gravity","","",21,null],[12,"min_velocity","","",21,null],[12,"is_jumping","","",21,null],[17,"_IMPL_DESERIALIZE_FOR_Jumper","","",null,null],[0,"jumppad","deathfloor::components","",null,null],[3,"Jumppad","deathfloor::components::jumppad","",null,null],[12,"strength","","",22,null],[17,"_IMPL_DESERIALIZE_FOR_Jumppad","","",null,null],[0,"jumppad_affected","deathfloor::components","",null,null],[3,"JumppadAffected","deathfloor::components::jumppad_affected","",null,null],[0,"max_movement_velocity","deathfloor::components","",null,null],[3,"MaxMovementVelocity","deathfloor::components::max_movement_velocity","The maximum velocity a `Movable` entity can have, when…",null,null],[12,"x","","",23,null],[12,"y","","",23,null],[3,"MaxMovementVelocityBuilder","","Builder for `MaxMovementVelocity`.",null,null],[12,"x","","",24,null],[12,"y","","",24,null],[17,"_IMPL_DESERIALIZE_FOR_MaxMovementVelocity","","",null,null],[11,"x","","",24,[[["f32"]],["self"]]],[11,"y","","",24,[[["f32"]],["self"]]],[11,"build","","Builds a new `MaxMovementVelocity`.",24,[[],[["string"],["result",["maxmovementvelocity","string"]],["maxmovementvelocity"]]]],[11,"builder","","",23,[[],["maxmovementvelocitybuilder"]]],[11,"get","","",23,[[["self"],["axis"]],[["f32"],["option",["f32"]]]]],[11,"set","","",23,[[["f32"],["self"],["axis"]]]],[11,"set_opt","","",23,[[["f32"],["axis"],["self"],["option",["f32"]]]]],[11,"with","","",24,[[["f32"],["axis"]],["self"]]],[11,"with_opt","","",24,[[["f32"],["option",["f32"]],["axis"]],["self"]]],[0,"movable","deathfloor::components","",null,null],[3,"Movable","deathfloor::components::movable","A `Movable` entity is moved by the `MovementSystem`.",null,null],[12,"actions","","",25,null],[0,"prelude","","",null,null],[0,"move_action","","",null,null],[4,"MoveAction","deathfloor::components::movable::move_action","",null,null],[13,"Walk","","",26,null],[12,"axis","deathfloor::components::movable::move_action::MoveAction","",26,null],[12,"speed","","",26,null],[13,"Jump","deathfloor::components::movable::move_action","",26,null],[12,"strength","deathfloor::components::movable::move_action::MoveAction","",26,null],[13,"KillJump","deathfloor::components::movable::move_action","",26,null],[12,"strength","deathfloor::components::movable::move_action::MoveAction","",26,null],[12,"min_velocity","","",26,null],[13,"WallJump","deathfloor::components::movable::move_action","",26,null],[12,"strength","deathfloor::components::movable::move_action::MoveAction","",26,null],[13,"WallSlide","deathfloor::components::movable::move_action","",26,null],[12,"velocity","deathfloor::components::movable::move_action::MoveAction","",26,null],[13,"AddVelocity","deathfloor::components::movable::move_action","",26,null],[12,"x","deathfloor::components::movable::move_action::MoveAction","",26,null],[12,"y","","",26,null],[13,"SetVelocity","deathfloor::components::movable::move_action","",26,null],[12,"x","deathfloor::components::movable::move_action::MoveAction","",26,null],[12,"y","","",26,null],[17,"_IMPL_DESERIALIZE_FOR_MoveAction","deathfloor::components::movable::move_action","",null,null],[11,"add_action","deathfloor::components::movable","",25,[[["self"],["moveaction"]]]],[11,"drain_actions","","Iterates over all actions, removing them from the…",25,[[["self"]],[["drain",["moveaction"]],["moveaction"]]]],[0,"physics_data","deathfloor::components","",null,null],[3,"PhysicsData","deathfloor::components::physics_data","",null,null],[12,"acceleration","","",27,null],[12,"max_velocity","","",27,null],[12,"base_friction","","",27,null],[12,"gravity","","",27,null],[17,"_IMPL_DESERIALIZE_FOR_PhysicsData","","",null,null],[0,"player","deathfloor::components","",null,null],[3,"Player","deathfloor::components::player","",null,null],[0,"shooter","deathfloor::components","",null,null],[3,"Shooter","deathfloor::components::shooter","",null,null],[12,"cooldown_timer","","",28,null],[12,"bullet_data","","",28,null],[0,"walker","deathfloor::components","",null,null],[3,"Walker","deathfloor::components::walker","",null,null],[12,"x","","",29,null],[12,"y","","",29,null],[17,"_IMPL_DESERIALIZE_FOR_Walker","","",null,null],[0,"wall_jumper","deathfloor::components","",null,null],[3,"WallJumper","deathfloor::components::wall_jumper","Entities that can wall jump. Requires `Jumper` component.",null,null],[12,"strength","","",30,null],[17,"_IMPL_DESERIALIZE_FOR_WallJumper","","",null,null],[0,"wall_slider","deathfloor::components","",null,null],[3,"WallSlider","deathfloor::components::wall_slider","",null,null],[12,"slide_velocity","","",31,null],[17,"_IMPL_DESERIALIZE_FOR_WallSlider","","",null,null],[0,"prelude","deathfloor::components","",null,null],[3,"SpriteRender","deathfloor::components::prelude","Information for rendering a sprite.",null,null],[12,"sprite_sheet","","Handle to the sprite sheet of the sprite",32,null],[12,"sprite_number","","Index of the sprite on the sprite sheet",32,null],[3,"Animation","","Animates an entity with `SpriteRender` frame-by-frame.…",null,null],[12,"frames","","",33,null],[12,"frames_iter","","",33,null],[12,"current_frame","","",33,null],[12,"timer","","",33,null],[3,"AnimationsContainer","","A component, which can hold multiple `Animation`s. It…",null,null],[12,"animations","","",34,null],[12,"current_animation","","",34,null],[3,"Transform","","Local position, rotation, and scale (from parent if it…",null,null],[12,"isometry","","Translation + rotation value",35,null],[12,"scale","","Scale vector",35,null],[12,"global_matrix","","The global transformation matrix.",35,null],[3,"Hidden","","Hidden mesh component Useful for entities, that should not…",null,null],[3,"Transparent","","Transparent mesh component",null,null],[3,"Confined","","Entities that have `Confined` and at least a `Transform`,…",null,null],[12,"rect","","",36,null],[3,"Follow","","The `Follow` component makes an entity with a `Transform`…",null,null],[12,"to_follow","","",37,null],[12,"priority","","",37,null],[3,"Loadable","","Entities which have `Loadable` may be loaded or unloaded…",null,null],[12,"padding","","",38,null],[3,"Loaded","","Entities which have `Loadable` and `Loaded` will be…",null,null],[3,"Loader","","`Loader` entities can load `Loadable` entities, whose…",null,null],[12,"loading_distance","","",39,null],[3,"ScaleOnce","","For entities which have `Transform`, `Size`,…",null,null],[3,"Size","","`Size` is used in multiple places, including collision and…",null,null],[12,"w","","",40,null],[12,"h","","",40,null],[3,"BaseFriction","","Friction that is applied constantly. You can disable it…",null,null],[12,"friction_x","","",41,null],[12,"friction_y","","",41,null],[12,"enabled","","",41,null],[3,"Collidable","","",null,null],[12,"tag","","",42,null],[3,"Collider","","",null,null],[12,"tag","","",43,null],[12,"collisions","","",43,null],[3,"Gravity","","Entities with the `Gravity` component are affected by…",null,null],[12,"x","","",44,null],[12,"y","","",44,null],[3,"Hitbox","","A `Hitbox` has one or more `Rect` rects, which are…",null,null],[12,"rects","","",45,null],[3,"Solid","","",null,null],[12,"tag","","",46,null],[3,"Velocity","","",null,null],[12,"x","","",47,null],[12,"y","","",47,null],[0,"component_prelude","deathfloor::components","",null,null],[8,"Component","deathfloor::components::component_prelude","Abstract component type. Doesn't have to be Copy or even…",null,null],[16,"Storage","","Associated storage type for this component.",48,null],[24,"Component","","Custom derive macro for the `Component` trait.",null,null],[3,"DenseVecStorage","","Dense vector storage. Has a redirection 2-way table…",null,null],[12,"data","","",49,null],[12,"entity_id","","",49,null],[12,"data_id","","",49,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[3,"HashMapStorage","","`HashMap`-based storage. Best suited for rare components.",null,null],[12,"0","","",51,null],[3,"NullStorage","","A null storage type, used for cases where the component…",null,null],[12,"0","","",52,null],[3,"Storage","","A wrapper around the masked storage and the generations…",null,null],[12,"data","","",53,null],[12,"entities","","",53,null],[12,"phantom","","",53,null],[3,"VecStorage","","Vector storage. Uses a simple `Vec`. Supposed to have…",null,null],[12,"0","","",54,null],[8,"ByAxis","","Anything implementing the `ByAxis` trait, returns an item…",null,null],[16,"Item","","",55,null],[10,"by_axis","","",55,[[["axis"]]]],[6,"Point","","",null,null],[6,"Vector","","",null,null],[4,"Axis","","Just a plain `Axis` enum with `X` and `Y` variants.",null,null],[13,"X","","",56,null],[13,"Y","","",56,null],[3,"AxisIter","","An iterator over both axes.",null,null],[12,"0","","",57,null],[3,"Rect","","A `Rect` is simply an area. It has positions bounding…",null,null],[12,"top","","",58,null],[12,"bottom","","",58,null],[12,"left","","",58,null],[12,"right","","",58,null],[3,"RectBuilder","","Builder for `Rect`.",null,null],[12,"top","","",59,null],[12,"bottom","","",59,null],[12,"left","","",59,null],[12,"right","","",59,null],[0,"dispatcher_id","deathfloor","",null,null],[4,"DispatcherId","deathfloor::dispatcher_id","",null,null],[13,"Ingame","","",60,null],[13,"Paused","","",60,null],[0,"helpers","deathfloor","",null,null],[5,"resource","deathfloor::helpers","",null,[[["p"]],["pathbuf"]]],[0,"init","deathfloor","",null,null],[5,"init_game","deathfloor::init","",null,[[],["result"]]],[5,"start_logger","","",null,[[]]],[5,"frame_rate_limit_config","","",null,[[],[["result",["frameratelimitconfig"]],["frameratelimitconfig"]]]],[5,"build_game_data","","",null,[[["settings"]],[["result",["customgamedatabuilder"]],["customgamedatabuilder",["dispatcherid","customdata"]]]]],[0,"input","deathfloor","",null,null],[5,"ingame_input_bundle","deathfloor::input","",null,[[],[["inputbundle",["ingamebindings"]],["result",["inputbundle"]]]]],[5,"paused_input_bundle","","",null,[[],[["result",["inputbundle"]],["inputbundle",["pausedbindings"]]]]],[0,"ingame_bindings","","",null,null],[3,"IngameBindings","deathfloor::input::ingame_bindings","",null,null],[4,"IngameAxisBinding","","",null,null],[13,"PlayerX","","",61,null],[13,"PlayerY","","",61,null],[4,"IngameActionBinding","","",null,null],[13,"PlayerJump","","",62,null],[13,"PlayerShoot","","",62,null],[13,"TogglePause","","",62,null],[13,"ReloadLevel","","",62,null],[17,"_IMPL_SERIALIZE_FOR_IngameAxisBinding","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_IngameAxisBinding","","",null,null],[17,"_IMPL_SERIALIZE_FOR_IngameActionBinding","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_IngameActionBinding","","",null,null],[0,"paused_bindings","deathfloor::input","",null,null],[3,"PausedBindings","deathfloor::input::paused_bindings","",null,null],[4,"PausedAxisBinding","","",null,null],[13,"None","","",63,null],[4,"PausedActionBinding","","",null,null],[13,"TogglePause","","",64,null],[17,"_IMPL_SERIALIZE_FOR_PausedAxisBinding","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_PausedAxisBinding","","",null,null],[17,"_IMPL_SERIALIZE_FOR_PausedActionBinding","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_PausedActionBinding","","",null,null],[0,"prelude","deathfloor::input","",null,null],[0,"map_loader","deathfloor","",null,null],[5,"load_map","deathfloor::map_loader","",null,[[["world"],["t"]],["result"]]],[5,"get_map_data","","",null,[[["t"]],[["result",["mapdata"]],["mapdata"]]]],[0,"map_data","","",null,null],[3,"Pos","deathfloor::map_loader::map_data","",null,null],[12,"x","","",65,null],[12,"y","","",65,null],[3,"Size","","",null,null],[12,"w","","",66,null],[12,"h","","",66,null],[3,"Map","","",null,null],[12,"level","","",67,null],[12,"tiles","","",67,null],[12,"objects","","",67,null],[3,"Level","","",null,null],[12,"size","","",68,null],[12,"tile_size","","",68,null],[3,"Tile","","",null,null],[12,"tile_type","","",69,null],[12,"id","","",69,null],[12,"ts","","",69,null],[12,"pos","","",69,null],[12,"hitbox","","",69,null],[12,"props","","",69,null],[3,"Object","","",null,null],[12,"object_type","","",70,null],[12,"pos","","",70,null],[12,"size","","",70,null],[12,"props","","",70,null],[0,"propful","","",null,null],[8,"Propful","deathfloor::map_loader::map_data::propful","",null,null],[10,"props","","",71,[[["self"]],["hashmap"]]],[11,"z","","",71,[[["self"]],["f32"]]],[11,"z_or","","",71,[[["f32"],["self"]],["f32"]]],[11,"is_solid","","",71,[[["self"]],["bool"]]],[0,"prelude","deathfloor::map_loader::map_data","",null,null],[6,"Props","","",null,null],[6,"Tiles","","",null,null],[6,"Objects","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Pos","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Size","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Map","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Level","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Tile","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Object","","",null,null],[0,"types","deathfloor::map_loader","",null,null],[0,"helpers","","",null,null],[5,"get_sprite_render","deathfloor::map_loader::helpers","",null,[[["world"],["usize"],["p"]],[["result",["spriterender"]],["spriterender"]]]],[0,"prelude","","",null,null],[3,"Entity","deathfloor::map_loader::helpers::prelude","`Entity` type, as seen by the user.",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[3,"EntityBuilder","","The entity builder, allowing to build an entity together…",null,null],[12,"entity","","The (already created) entity for which components will be…",72,null],[12,"world","","A reference to the `World` for component insertions.",72,null],[12,"built","","",72,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[12,"resources","","",73,null],[8,"WorldExt","","This trait provides some extension methods to make working…",null,null],[10,"new","","Constructs a new World instance.",74,[[],["self"]]],[10,"register","","Registers a new component, adding the component storage.",74,[[["self"]]]],[10,"register_with_storage","","Registers a new component with a given storage.",74,[[["self"],["f"]]]],[10,"add_resource","","Adds a resource to the world.",74,[[["self"],["t"]]]],[10,"read_component","","Fetches a component storage for reading.",74,[[["self"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[10,"write_component","","Fetches a component storage for writing.",74,[[["self"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[11,"read_storage","","Fetches a component storage for reading.",74,[[["self"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[11,"write_storage","","Fetches a component storage for writing.",74,[[["self"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[10,"read_resource","","Fetches a resource for reading.",74,[[["self"]],["fetch"]]],[10,"write_resource","","Fetches a resource for writing.",74,[[["self"]],["fetchmut"]]],[10,"entities","","Convenience method for fetching entities.",74,[[["self"]],[["entitiesres"],["defaultprovider"],["read",["entitiesres","defaultprovider"]]]]],[10,"entities_mut","","Convenience method for fetching entities.",74,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[10,"create_entity","","Allows building an entity with its components.",74,[[["self"]],["entitybuilder"]]],[10,"create_entity_unchecked","","Allows building an entity with its components.",74,[[["self"]],["entitybuilder"]]],[10,"create_iter","","Returns an iterator for entity creation. This makes it…",74,[[["self"]],["createiter"]]],[10,"delete_entity","","Deletes an entity and its components.",74,[[["self"],["entity"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_entities","","Deletes the specified entities and their components.",74,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_all","","Deletes all entities and their components.",74,[[["self"]]]],[10,"is_alive","","Checks if an entity is alive. Please note that atomically…",74,[[["self"],["entity"]],["bool"]]],[10,"maintain","","Merges in the appendix, recording all the dynamically…",74,[[["self"]]]],[8,"Builder","","A common trait for `EntityBuilder` and `LazyBuilder`,…",null,null],[10,"with","","Appends a component and associates it with the entity.",75,[[["c"]],["self"]]],[10,"build","","Finishes the building and returns the entity.",75,[[],["entity"]]],[3,"Rect","","A `Rect` is simply an area. It has positions bounding…",null,null],[12,"top","","",58,null],[12,"bottom","","",58,null],[12,"left","","",58,null],[12,"right","","",58,null],[3,"RectBuilder","","Builder for `Rect`.",null,null],[12,"top","","",59,null],[12,"bottom","","",59,null],[12,"left","","",59,null],[12,"right","","",59,null],[6,"Point","","",null,null],[6,"Vector","","",null,null],[8,"ByAxis","","Anything implementing the `ByAxis` trait, returns an item…",null,null],[16,"Item","","",55,null],[10,"by_axis","","",55,[[["axis"]]]],[4,"Axis","","Just a plain `Axis` enum with `X` and `Y` variants.",null,null],[13,"X","","",56,null],[13,"Y","","",56,null],[3,"AxisIter","","An iterator over both axes.",null,null],[12,"0","","",57,null],[3,"SpriteSheetHandles","","This is a resource wrapper for amethyst's `SpriteSheet`s.…",null,null],[12,"handles","","",76,null],[0,"objects","deathfloor::map_loader","",null,null],[5,"load_objects","deathfloor::map_loader::objects","",null,[[["vec",["object"]],["world"],["object"],["leveldata"]],["result"]]],[0,"object_type","","",null,null],[4,"ObjectType","deathfloor::map_loader::objects::object_type","",null,null],[13,"None","","",77,null],[13,"Player","","",77,null],[13,"Enemy","","",77,null],[17,"_IMPL_DESERIALIZE_FOR_ObjectType","","",null,null],[0,"build_camera","deathfloor::map_loader::objects","",null,null],[5,"build","deathfloor::map_loader::objects::build_camera","",null,[[["world"],["leveldata"],["entity"],["option",["entity"]]],[["entity"],["result",["entity"]]]]],[0,"build_enemy","deathfloor::map_loader::objects","",null,null],[5,"build","deathfloor::map_loader::objects::build_enemy","Builds the enemy entity.",null,[[["world"],["enemytype"],["objectdata"]],[["entity"],["result",["entity"]]]]],[0,"build_player","deathfloor::map_loader::objects","",null,null],[5,"build","deathfloor::map_loader::objects::build_player","Builds the player entity.",null,[[["world"],["objectdata"]],[["entity"],["result",["entity"]]]]],[0,"helpers","deathfloor::map_loader::objects","",null,null],[5,"base_object_entity","deathfloor::map_loader::objects::helpers","Adds base components to object entity. Components include:…",null,[[["objectdata"],["world"]],[["result",["entitybuilder"]],["entitybuilder"]]]],[0,"prelude","","",null,null],[0,"tiles","deathfloor::map_loader","",null,null],[5,"load_tiles","deathfloor::map_loader::tiles","",null,[[["sizedata"],["world"],["tile"],["vec",["tile"]]],["result"]]],[0,"tile_type","","",null,null],[4,"TileType","deathfloor::map_loader::tiles::tile_type","",null,null],[13,"None","","",78,null],[13,"Ground","","",78,null],[13,"Jumppad","","",78,null],[17,"_IMPL_DESERIALIZE_FOR_TileType","","",null,null],[0,"helpers","deathfloor::map_loader::tiles","",null,null],[5,"edit_entity_with_tile_settings","deathfloor::map_loader::tiles::helpers","Adds components depending on given `TileSettings` to…",null,[[["size"],["entitybuilder"],["tilesettings"]],["entitybuilder"]]],[5,"base_tile_entity","","Adds base components to tile entity. Components include: -…",null,[[["sizedata"],["tiledata"],["world"]],[["result",["entitybuilder"]],["entitybuilder"]]]],[0,"prelude","","",null,null],[7,"TILE_LOADABLE_PADDING","","",null,null],[0,"resources","deathfloor","",null,null],[0,"prelude","deathfloor::resources","",null,null],[3,"EntityComponentInserter","deathfloor::resources::prelude","This struct accumulates `InsertionAction`s for entities,…",null,null],[12,"prioritize_action","","",79,null],[12,"actions","","",79,null],[12,"prev_actions","","",79,null],[3,"InputManager","","Manages input actions. Stores data about which actions are…",null,null],[12,"actions","","",80,null],[12,"axes","","",80,null],[3,"SpriteSheetHandles","","This is a resource wrapper for amethyst's `SpriteSheet`s.…",null,null],[12,"handles","","",76,null],[0,"bullet_creator","deathfloor::resources","",null,null],[3,"BulletCreator","deathfloor::resources::bullet_creator","",null,null],[12,"to_create","","",81,null],[3,"BulletComponents","","",null,null],[12,"bullet","","",82,null],[12,"transform","","",82,null],[12,"size","","",82,null],[12,"velocity","","",82,null],[12,"sprite_render","","",82,null],[12,"animation","","",82,null],[11,"add","","",81,[[["self"],["bulletcomponents"]]]],[11,"drain","","",81,[[["self"]],[["drain",["bulletcomponents"]],["bulletcomponents"]]]],[0,"settings","deathfloor","",null,null],[3,"Settings","deathfloor::settings","",null,null],[12,"general","","",83,null],[12,"camera","","",83,null],[12,"player","","",83,null],[12,"tiles","","",83,null],[12,"enemies","","",83,null],[3,"SizeSettings","","",null,null],[12,"width","","",84,null],[12,"height","","",84,null],[0,"prelude","","",null,null],[0,"camera_settings","","",null,null],[3,"CameraSettings","deathfloor::settings::camera_settings","",null,null],[12,"size","","",85,null],[12,"z","","",85,null],[17,"_IMPL_DESERIALIZE_FOR_CameraSettings","","",null,null],[0,"enemies_settings","deathfloor::settings","",null,null],[3,"EnemiesSettings","deathfloor::settings::enemies_settings","",null,null],[12,"types","","",86,null],[3,"EnemySettings","","",null,null],[12,"spritesheet_filename","","",87,null],[12,"components","","",87,null],[12,"events","","",87,null],[12,"collision_tag","","",87,null],[12,"solid_tag","","",87,null],[3,"EnemyComponentsData","","List of posible components for an Enemy. All can…",null,null],[12,"size","","",88,null],[12,"gravity","","",88,null],[12,"max_movement_velocity","","",88,null],[12,"base_friction","","",88,null],[12,"animations","","",88,null],[12,"hitbox","","",88,null],[12,"walker","","",88,null],[12,"jumppad","","",88,null],[3,"EnemyComponentsStorages","","",null,null],[12,"size","","",89,null],[12,"gravity","","",89,null],[12,"max_movement_velocity","","",89,null],[12,"base_friction","","",89,null],[12,"animations","","",89,null],[12,"hitbox","","",89,null],[12,"walker","","",89,null],[12,"jumppad","","",89,null],[12,"jumppad_affected","","",89,null],[0,"prelude","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_EnemiesSettings","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_EnemySettings","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_EnemyComponentsData","","",null,null],[0,"general_settings","deathfloor::settings","",null,null],[3,"GeneralSettings","deathfloor::settings::general_settings","",null,null],[12,"loader_system","","",90,null],[12,"debug","","",90,null],[3,"LoaderSystemSettings","","",null,null],[12,"use_cache","","",91,null],[3,"DebugSettings","","",null,null],[12,"fps_sample_size","","",92,null],[17,"_IMPL_DESERIALIZE_FOR_GeneralSettings","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_LoaderSystemSettings","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_DebugSettings","","",null,null],[0,"hitbox_config","deathfloor::settings","",null,null],[4,"HitboxConfig","deathfloor::settings::hitbox_config","",null,null],[13,"Size","","Uses it's Size as the hitbox.",93,null],[13,"Custom","","Use a custom collection of `Rect`s as the hitbox' rects.",93,null],[17,"_IMPL_DESERIALIZE_FOR_HitboxConfig","","",null,null],[0,"player_settings","deathfloor::settings","",null,null],[3,"PlayerSettings","deathfloor::settings::player_settings","",null,null],[12,"size","","",94,null],[12,"physics","","",94,null],[12,"hitbox","","",94,null],[12,"collision_tag","","",94,null],[12,"solid_tag","","",94,null],[12,"jumper","","",94,null],[12,"wall_jumper","","",94,null],[12,"wall_slider","","",94,null],[12,"shooter","","",94,null],[12,"animations","","",94,null],[3,"ShooterData","","",null,null],[12,"cooldown_ms","","",95,null],[12,"bullet","","",95,null],[3,"ShooterBulletData","","",null,null],[12,"size","","",96,null],[12,"velocity","","",96,null],[12,"despawn_after_ms","","",96,null],[12,"animation","","",96,null],[0,"prelude","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_PlayerSettings","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ShooterData","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ShooterBulletData","","",null,null],[0,"tiles_settings","deathfloor::settings","",null,null],[3,"TilesSettings","deathfloor::settings::tiles_settings","",null,null],[12,"types","","",97,null],[3,"TileSettings","","",null,null],[12,"hitbox","","",98,null],[12,"jumppad","","",98,null],[12,"collision_tag","","",98,null],[12,"solid_tag","","",98,null],[12,"is_solid","","",98,null],[12,"jumppad_strength_x","","",98,null],[12,"jumppad_strength_y","","",98,null],[0,"prelude","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_TilesSettings","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_TileSettings","","",null,null],[11,"merge","","Merges the field values from `other` into `self`. `self`…",98,[[],["self"]]],[17,"_IMPL_DESERIALIZE_FOR_Settings","deathfloor::settings","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SizeSettings","","",null,null],[11,"load","","",83,[[],["result"]]],[11,"load_file","","",83,[[["s"]],["result"]]],[11,"load_enemies_config","","",83,[[],[["result",["enemiessettings"]],["enemiessettings"]]]],[11,"load_enemies_configs_from","","",83,[[["pathbuf"]],[["result",["vec"]],["vec",["enemiessettings"]]]]],[11,"merge_enemies_settings","","",83,[[["enemiessettings"],["vec",["enemiessettings"]]],["enemiessettings"]]],[0,"states","deathfloor","",null,null],[3,"CustomData","deathfloor::states","",null,null],[0,"ingame","","",null,null],[3,"Ingame","deathfloor::states::ingame","",null,null],[0,"load_ingame","deathfloor::states","",null,null],[3,"LoadIngame","deathfloor::states::load_ingame","",null,null],[0,"paused","deathfloor::states","",null,null],[3,"Paused","deathfloor::states::paused","",null,null],[0,"startup","deathfloor::states","",null,null],[3,"Startup","deathfloor::states::startup","",null,null],[5,"register_components","","",null,[[["world"]]]],[0,"prelude","deathfloor::states","",null,null],[0,"state_prelude","","",null,null],[3,"Entity","deathfloor::states::state_prelude","`Entity` type, as seen by the user.",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[12,"resources","","",73,null],[8,"WorldExt","","This trait provides some extension methods to make working…",null,null],[10,"new","","Constructs a new World instance.",74,[[],["self"]]],[10,"register","","Registers a new component, adding the component storage.",74,[[["self"]]]],[10,"register_with_storage","","Registers a new component with a given storage.",74,[[["self"],["f"]]]],[10,"add_resource","","Adds a resource to the world.",74,[[["self"],["t"]]]],[10,"read_component","","Fetches a component storage for reading.",74,[[["self"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[10,"write_component","","Fetches a component storage for writing.",74,[[["self"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[11,"read_storage","","Fetches a component storage for reading.",74,[[["self"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[11,"write_storage","","Fetches a component storage for writing.",74,[[["self"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[10,"read_resource","","Fetches a resource for reading.",74,[[["self"]],["fetch"]]],[10,"write_resource","","Fetches a resource for writing.",74,[[["self"]],["fetchmut"]]],[10,"entities","","Convenience method for fetching entities.",74,[[["self"]],[["entitiesres"],["defaultprovider"],["read",["entitiesres","defaultprovider"]]]]],[10,"entities_mut","","Convenience method for fetching entities.",74,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[10,"create_entity","","Allows building an entity with its components.",74,[[["self"]],["entitybuilder"]]],[10,"create_entity_unchecked","","Allows building an entity with its components.",74,[[["self"]],["entitybuilder"]]],[10,"create_iter","","Returns an iterator for entity creation. This makes it…",74,[[["self"]],["createiter"]]],[10,"delete_entity","","Deletes an entity and its components.",74,[[["self"],["entity"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_entities","","Deletes the specified entities and their components.",74,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_all","","Deletes all entities and their components.",74,[[["self"]]]],[10,"is_alive","","Checks if an entity is alive. Please note that atomically…",74,[[["self"],["entity"]],["bool"]]],[10,"maintain","","Merges in the appendix, recording all the dynamically…",74,[[["self"]]]],[8,"Builder","","A common trait for `EntityBuilder` and `LazyBuilder`,…",null,null],[10,"with","","Appends a component and associates it with the entity.",75,[[["c"]],["self"]]],[10,"build","","Finishes the building and returns the entity.",75,[[],["entity"]]],[3,"Camera","","Camera struct.",null,null],[12,"inner","","Graphical projection of the camera.",99,null],[8,"State","","A trait which defines game states that can be used by the…",null,null],[11,"on_start","","Executed when the game state begins.",100,[[["self"],["statedata"]]]],[11,"on_stop","","Executed when the game state exits.",100,[[["self"],["statedata"]]]],[11,"on_pause","","Executed when a different game state is pushed onto the…",100,[[["self"],["statedata"]]]],[11,"on_resume","","Executed when the application returns to this game state…",100,[[["self"],["statedata"]]]],[11,"handle_event","","Executed on every frame before updating, for use in…",100,[[["e"],["self"],["statedata"]],["trans"]]],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals…",100,[[["self"],["statedata"]],["trans"]]],[11,"update","","Executed on every frame immediately, as fast as the engine…",100,[[["self"],["statedata"]],["trans"]]],[11,"shadow_fixed_update","","Executed repeatedly at stable, predictable intervals…",100,[[["self"],["statedata"]]]],[11,"shadow_update","","Executed on every frame immediately, as fast as the engine…",100,[[["self"],["statedata"]]]],[3,"StateData","","State data encapsulates the data sent to all state…",null,null],[12,"world","","Main `World`",101,null],[12,"data","","User defined game data",101,null],[4,"StateEvent","","The enum holding the different types of event that can be…",null,null],[13,"Window","","Events sent by the winit window.",102,null],[13,"Ui","","Events sent by the ui system.",102,null],[13,"Input","","Events sent by the input system.",102,null],[4,"Trans","","Types of state transitions. T is the type of shared data…",null,null],[13,"None","","Continue as normal.",103,null],[13,"Pop","","Remove the active state and resume the next state on the…",103,null],[13,"Push","","Pause the active state and push a new state onto the stack.",103,null],[13,"Switch","","Remove the current state on the stack and insert a…",103,null],[13,"Replace","","Remove all states on the stack and insert a different one.",103,null],[13,"NewStack","","Remove all states on the stack and insert new stack.",103,null],[13,"Sequence","","Execute a series of Trans's.",103,null],[13,"Quit","","Stop and remove all states and shut down the engine.",103,null],[3,"CustomGameData","","",null,null],[12,"core_dispatcher","","",104,null],[12,"dispatchers","","",104,null],[12,"custom","","",104,null],[3,"CustomGameDataBuilder","","Builder struct for `CustomGameData`.",null,null],[12,"core_dispatcher","","",105,null],[12,"dispatchers","","",105,null],[12,"core_dispatcher_operations","","",105,null],[12,"dispatcher_operations","","",105,null],[12,"custom","","",105,null],[0,"aliases","deathfloor::states","",null,null],[6,"GameData","deathfloor::states::aliases","",null,null],[6,"GameDataBuilder","","",null,null],[0,"systems","deathfloor","",null,null],[0,"bullet_hit","deathfloor::systems","",null,null],[3,"BulletHitSystem","deathfloor::systems::bullet_hit","",null,null],[0,"control_player","deathfloor::systems","",null,null],[3,"ControlPlayerSystem","deathfloor::systems::control_player","",null,null],[5,"handle_move_on_axis","","",null,[[["f32"],["axis"],["movable"],["inputmanager"],["option"],["physicsdata"]]]],[0,"control_player_jump","deathfloor::systems","",null,null],[3,"QueryMatches","deathfloor::systems::control_player_jump","",null,null],[12,"bottom","","",106,null],[12,"left","","",106,null],[12,"right","","",106,null],[3,"ControlPlayerJumpSystem","","",null,null],[12,"player_gravities","","",107,null],[4,"TargetGravity","","",null,null],[13,"Normal","","",108,null],[13,"Jump","","",108,null],[5,"get_query_matches_from","","",null,[[["collider"]],["querymatches"]]],[5,"maybe_set_gravity","","",null,[[["option"]]]],[17,"NORMAL_GRAVITY_BELOW_Y_VEL","","",null,null],[0,"control_player_shoot","deathfloor::systems","",null,null],[3,"ControlPlayerShootSystem","deathfloor::systems::control_player_shoot","",null,null],[4,"Facing","","",null,null],[13,"Left","","",109,null],[13,"Right","","",109,null],[11,"mult","","",109,[[["self"]],["f32"]]],[0,"create_bullets","deathfloor::systems","",null,null],[3,"CreateBulletsSystem","deathfloor::systems::create_bullets","",null,null],[3,"BulletCreatorStorages","","",null,null],[12,"entities","","",110,null],[12,"bullet_store","","",110,null],[12,"transform_store","","",110,null],[12,"size_store","","",110,null],[12,"velocity_store","","",110,null],[12,"scale_once_store","","",110,null],[12,"sprite_render_store","","",110,null],[12,"animation_store","","",110,null],[12,"collider_store","","",110,null],[12,"collidable_store","","",110,null],[12,"hitbox_store","","",110,null],[0,"delete_bullets","deathfloor::systems","",null,null],[3,"DeleteBulletsSystem","deathfloor::systems::delete_bullets","",null,null],[0,"event_handlers","deathfloor::systems","",null,null],[0,"actions","deathfloor::systems::event_handlers","",null,null],[0,"delay","deathfloor::systems::event_handlers::actions","",null,null],[3,"TimedAction","deathfloor::systems::event_handlers::actions::delay","",null,null],[12,"timer","","",111,null],[12,"action","","",111,null],[3,"HandleActionDelay","","",null,null],[12,"registered","","",112,null],[0,"echo","deathfloor::systems::event_handlers::actions","",null,null],[3,"HandleActionEcho","deathfloor::systems::event_handlers::actions::echo","",null,null],[0,"group","deathfloor::systems::event_handlers::actions","",null,null],[3,"HandleActionGroup","deathfloor::systems::event_handlers::actions::group","",null,null],[0,"insert_components","deathfloor::systems::event_handlers::actions","",null,null],[3,"HandleActionInsertComponents","deathfloor::systems::event_handlers::actions::insert_components","",null,null],[0,"move_action","deathfloor::systems::event_handlers::actions","",null,null],[3,"HandleActionMoveAction","deathfloor::systems::event_handlers::actions::move_action","",null,null],[0,"random","deathfloor::systems::event_handlers::actions","",null,null],[3,"HandleActionRandom","deathfloor::systems::event_handlers::actions::random","",null,null],[0,"repeat_delay","deathfloor::systems::event_handlers::actions","",null,null],[3,"TimedAction","deathfloor::systems::event_handlers::actions::repeat_delay","",null,null],[12,"timer","","",113,null],[12,"action","","",113,null],[3,"HandleActionRepeatDelay","","",null,null],[12,"registered","","",114,null],[0,"bundle","deathfloor::systems::event_handlers","",null,null],[3,"EventHandlersBundle","deathfloor::systems::event_handlers::bundle","",null,null],[12,"deps","","",115,null],[11,"with_deps","","",115,[[],["self"]]],[0,"events","deathfloor::systems::event_handlers","",null,null],[0,"interval","deathfloor::systems::event_handlers::events","",null,null],[3,"HandleEventInterval","deathfloor::systems::event_handlers::events::interval","",null,null],[12,"registered","","",116,null],[12,"ignored_entities","","",116,null],[0,"on_collision","deathfloor::systems::event_handlers::events","",null,null],[3,"HandleEventOnCollision","deathfloor::systems::event_handlers::events::on_collision","",null,null],[0,"on_spawn","deathfloor::systems::event_handlers::events","",null,null],[3,"HandleEventOnSpawn","deathfloor::systems::event_handlers::events::on_spawn","",null,null],[12,"triggered_entities","","",117,null],[0,"trigger_actions_from_action_types","deathfloor::systems::event_handlers","",null,null],[3,"TriggerActionsFromActionTypesSystem","deathfloor::systems::event_handlers::trigger_actions_from_action_types","",null,null],[0,"handle_animations","deathfloor::systems","",null,null],[3,"HandleAnimationsSystem","deathfloor::systems::handle_animations","",null,null],[17,"PADDING","","",null,null],[0,"handle_jumppad_affected","deathfloor::systems","",null,null],[3,"HandleJumppadAffectedSystem","deathfloor::systems::handle_jumppad_affected","",null,null],[0,"handle_movables","deathfloor::systems","",null,null],[3,"HandleMovablesSystem","deathfloor::systems::handle_movables","",null,null],[0,"handle_scales","deathfloor::systems","",null,null],[3,"HandleScalesSystem","deathfloor::systems::handle_scales","",null,null],[17,"PADDING","","",null,null],[0,"handle_walkers","deathfloor::systems","",null,null],[3,"HandleWalkersSystem","deathfloor::systems::handle_walkers","",null,null],[0,"prelude","deathfloor::systems","",null,null],[3,"CameraOrthoSystem","deathfloor::systems::prelude","System that automatically changes the camera matrix…",null,null],[3,"PlayAnimationsSystem","","Handles the playing of animations for entities with…",null,null],[3,"SwitchAnimationsSystem","","The `SwitchAnimationsSystem` handles entities'…",null,null],[12,"entity_animations","","",118,null],[3,"ConfineEntitiesSystem","","This system confines all entities with `Transform` and…",null,null],[3,"EntityLoaderSystem","","The `EntityLoaderSystem` handles the loading and unloading…",null,null],[12,"entity_loader","","",119,null],[12,"entity_loader_hidden","","",119,null],[3,"FollowSystem","","",null,null],[3,"InputManagerSystem","","Handles all the logic for `InputManager`.",null,null],[12,"0","","",120,null],[3,"ScaleSpritesSystem","","This system gets all entities with `Transform`, `Size`,…",null,null],[3,"ApplyBaseFrictionSystem","","Constantly applies friction to entities with…",null,null],[3,"ApplyGravitySystem","","",null,null],[3,"MoveEntitiesSystem","","This system is responsible for moving all entities with…",null,null],[12,"0","","",121,null],[3,"UpdateCollisionsSystem","","The `UpdateCollisionsSystem` is in charge of setting…",null,null],[12,"0","","",122,null],[0,"system_prelude","deathfloor::systems","",null,null],[8,"Query","deathfloor::systems::system_prelude","",null,null],[16,"Matches","","The type that is returned from `run`.",123,null],[10,"run","","Run the query.",123,[[]]],[3,"FilterQuery","","The `FilterQuery` runs a given `QueryExpression` on all…",null,null],[12,"collider","","",124,null],[12,"expression","","",124,null],[12,"filter_ids","","",124,null],[3,"FindQuery","","The `FindQuery` runs a given `QueryExpression` on all…",null,null],[12,"collider","","",125,null],[12,"expression","","",125,null],[12,"filter_ids","","",125,null],[4,"QueryExpression","","",null,null],[13,"IsSide","","Checks the collision side.",126,null],[13,"IsState","","Checks the collision state.",126,null],[13,"IsTag","","Checks the given tag for equality with this collider's tag.",126,null],[13,"And","","All given expressions must be true.",126,null],[13,"Or","","Any of the given expressions must be true.",126,null],[4,"QueryValueSide","","",null,null],[13,"Left","","",127,null],[13,"Right","","",127,null],[13,"Top","","",127,null],[13,"Bottom","","",127,null],[13,"Inner","","",127,null],[4,"QueryValueState","","",null,null],[13,"Enter","","",128,null],[13,"Steady","","",128,null],[13,"Leave","","",128,null],[6,"TextureHandle","","",null,null],[3,"AssetStorage","","An asset storage, storing the actual assets and allocating…",null,null],[12,"assets","","",129,null],[12,"bitset","","",129,null],[12,"handles","","",129,null],[12,"handle_alloc","","",129,null],[12,"processed","","",129,null],[12,"reloads","","",129,null],[12,"unused_handles","","",129,null],[3,"Handle","","A handle to an asset. This is usually what the user deals…",null,null],[12,"id","","",130,null],[12,"marker","","",130,null],[3,"Time","","Frame timing values.",null,null],[12,"delta_seconds","","Time elapsed since the last frame in seconds.",131,null],[12,"delta_time","","Time elapsed since the last frame.",131,null],[12,"delta_real_seconds","","Time elapsed since the last frame in seconds ignoring the…",131,null],[12,"delta_real_time","","Time elapsed since the last frame ignoring the time speed…",131,null],[12,"fixed_seconds","","Rate at which `State::fixed_update` is called in seconds.",131,null],[12,"fixed_time","","Rate at which `State::fixed_update` is called.",131,null],[12,"frame_number","","The total number of frames that have been played in this…",131,null],[12,"absolute_real_time","","Time elapsed since game start, ignoring the speed multipler.",131,null],[12,"absolute_time","","Time elapsed since game start, taking the speed multiplier…",131,null],[12,"time_scale","","Time multiplier. Affects returned delta_seconds,…",131,null],[12,"fixed_time_accumulator","","Fixed timestep accumulator.",131,null],[12,"interpolation_alpha","","Fixed update interpolation alpha",131,null],[3,"ResourceId","","The id of a [`Resource`], which simply wraps a type id and…",null,null],[12,"type_id","","",132,null],[12,"dynamic_id","","",132,null],[6,"Index","","An index is basically the id of an `Entity`.",null,null],[6,"Entities","","A wrapper for a read `Entities` resource. Note that this…",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[8,"Join","","The purpose of the `Join` trait is to provide a way to…",null,null],[16,"Type","","Type of joined components.",133,null],[16,"Value","","Type of joined storages.",133,null],[16,"Mask","","Type of joined bit mask.",133,null],[11,"join","","Create a joined iterator over the contents.",133,[[],["joiniter"]]],[11,"maybe","","Returns a `Join`-able structure that yields all indices,…",133,[[],["maybejoin"]]],[10,"open","","Open this join by returning the mask and the storages.",133,[[]]],[10,"get","","Get a joined component value by a given index.",133,[[["u32"]]]],[11,"is_unconstrained","","If this `Join` typically returns all indices in the mask,…",133,[[],["bool"]]],[3,"Read","","Allows to fetch a resource in a system immutably.",null,null],[12,"inner","","",134,null],[12,"phantom","","",134,null],[6,"ReadExpect","","Allows to fetch a resource in a system immutably. This…",null,null],[6,"ReadStorage","","A storage with read access.",null,null],[3,"Storage","","A wrapper around the masked storage and the generations…",null,null],[12,"data","","",53,null],[12,"entities","","",53,null],[12,"phantom","","",53,null],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",135,null],[10,"run","","Executes the system with the required system data.",135,[[["self"]]]],[11,"running_time","","Returns a hint how long the system needs for running. This…",135,[[["self"]],["runningtime"]]],[11,"accessor","","Return the accessor from the [`SystemData`].",135,[[["self"]],["accessorcow"]]],[11,"setup","","Sets up the `World` using `Self::SystemData::setup`.",135,[[["self"],["world"]]]],[11,"dispose","","Performs clean up that requires resources from the…",135,[[["world"]]]],[3,"Write","","Allows to fetch a resource in a system mutably.",null,null],[12,"inner","","",136,null],[12,"phantom","","",136,null],[6,"WriteExpect","","Allows to fetch a resource in a system mutably. This will…",null,null],[6,"WriteStorage","","A storage with read and write access.",null,null],[8,"SystemData","","A static system data that can specify its dependencies at…",null,null],[10,"setup","","Sets up the system data for fetching it from the `World`.",137,[[["world"]]]],[10,"fetch","","Fetches the system data from `World`. Note that this is…",137,[[["world"]],["self"]]],[10,"reads","","Returns all read dependencies as fetched from `Self::fetch`.",137,[[],[["resourceid"],["vec",["resourceid"]]]]],[10,"writes","","Returns all write dependencies as fetched from…",137,[[],[["resourceid"],["vec",["resourceid"]]]]],[24,"SystemData","","Used to `#[derive]` the trait `SystemData`.",null,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[12,"resources","","",73,null],[3,"InputHandler","","This struct holds state information about input devices.",null,null],[12,"bindings","","Maps inputs to actions and axes.",138,null],[12,"pressed_keys","","Encodes the VirtualKeyCode and corresponding scancode.",138,null],[12,"pressed_mouse_buttons","","",138,null],[12,"pressed_controller_buttons","","",138,null],[12,"controller_axes","","Holds current state of all connected controller axes",138,null],[12,"connected_controllers","","A list of raw and mapped ids for currently connected…",138,null],[12,"mouse_last_position","","",138,null],[12,"mouse_position","","",138,null],[12,"mouse_wheel_vertical","","",138,null],[12,"mouse_wheel_horizontal","","",138,null],[3,"SpriteSheet","","Meta data for a sprite sheet texture.",null,null],[12,"texture","","`Texture` handle of the spritesheet texture",139,null],[12,"sprites","","A list of sprites in this sprite sheet.",139,null],[6,"SpriteSheetHandle","","An asset handle to sprite sheet metadata.",null,null],[3,"AmethystCamera","","Camera struct.",null,null],[12,"inner","","Graphical projection of the camera.",99,null],[3,"SpriteRender","","Information for rendering a sprite.",null,null],[12,"sprite_sheet","","Handle to the sprite sheet of the sprite",32,null],[12,"sprite_number","","Index of the sprite on the sprite sheet",32,null],[4,"Texture","","Texture wrapper.",null,null],[13,"Vulkan","","Texture Variant",140,null],[3,"Transform","","Local position, rotation, and scale (from parent if it…",null,null],[12,"isometry","","Translation + rotation value",35,null],[12,"scale","","Scale vector",35,null],[12,"global_matrix","","The global transformation matrix.",35,null],[3,"Hidden","","Hidden mesh component Useful for entities, that should not…",null,null],[3,"Transparent","","Transparent mesh component",null,null],[5,"is_entity_loaded","","",null,[[["storage"],["entity"],["storage"]],["bool"]]],[8,"ByAxis","","Anything implementing the `ByAxis` trait, returns an item…",null,null],[16,"Item","","",55,null],[10,"by_axis","","",55,[[["axis"]]]],[6,"Point","","",null,null],[6,"Vector","","",null,null],[3,"Confined","","Entities that have `Confined` and at least a `Transform`,…",null,null],[12,"rect","","",36,null],[3,"Follow","","The `Follow` component makes an entity with a `Transform`…",null,null],[12,"to_follow","","",37,null],[12,"priority","","",37,null],[3,"Loadable","","Entities which have `Loadable` may be loaded or unloaded…",null,null],[12,"padding","","",38,null],[3,"Loaded","","Entities which have `Loadable` and `Loaded` will be…",null,null],[3,"Loader","","`Loader` entities can load `Loadable` entities, whose…",null,null],[12,"loading_distance","","",39,null],[3,"ScaleOnce","","For entities which have `Transform`, `Size`,…",null,null],[3,"Size","","`Size` is used in multiple places, including collision and…",null,null],[12,"w","","",40,null],[12,"h","","",40,null],[4,"Axis","","Just a plain `Axis` enum with `X` and `Y` variants.",null,null],[13,"X","","",56,null],[13,"Y","","",56,null],[3,"AxisIter","","An iterator over both axes.",null,null],[12,"0","","",57,null],[3,"Rect","","A `Rect` is simply an area. It has positions bounding…",null,null],[12,"top","","",58,null],[12,"bottom","","",58,null],[12,"left","","",58,null],[12,"right","","",58,null],[3,"RectBuilder","","Builder for `Rect`.",null,null],[12,"top","","",59,null],[12,"bottom","","",59,null],[12,"left","","",59,null],[12,"right","","",59,null],[3,"EntityComponentInserter","","This struct accumulates `InsertionAction`s for entities,…",null,null],[12,"prioritize_action","","",79,null],[12,"actions","","",79,null],[12,"prev_actions","","",79,null],[3,"InputManager","","Manages input actions. Stores data about which actions are…",null,null],[12,"actions","","",80,null],[12,"axes","","",80,null],[3,"SpriteSheetHandles","","This is a resource wrapper for amethyst's `SpriteSheet`s.…",null,null],[12,"handles","","",76,null],[0,"system_helpers","deathfloor::systems","",null,null],[5,"insert_components","deathfloor::systems::system_helpers","",null,[[["enemycomponentsstorages"],["entity"],["enemycomponentsdata"]],[["result",["error"]],["error"]]]],[11,"from","deathfloor::animation_key","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"try_default","","",0,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clone_box","","",0,[[["self"]]]],[11,"from","deathfloor::collision_tag::collision_label","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",1,[[["m"]],["d"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clone_box","","",1,[[["self"]]]],[11,"from","deathfloor::collision_tag::collision_tag","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",2,[[["m"]],["d"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone_box","","",2,[[["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_subset","","",3,[[["self"]],["option"]]],[11,"is_in_subset","","",3,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",3,[[["self"]],["ss"]]],[11,"from_subset","","",3,[[["ss"]],["sp"]]],[11,"try_default","","",3,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",3,[[["m"]],["d"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",4,[[["m"]],["d"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clone_box","","",4,[[["self"]]]],[11,"from","deathfloor::components::bullet","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"try_default","","",5,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",5,[[["m"]],["d"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","deathfloor::components::enemy","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",6,[[["m"]],["d"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","deathfloor::components::enemy::enemy_type","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",7,[[["m"]],["d"]]],[11,"vzip","","",7,[[],["v"]]],[11,"clone_box","","",7,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"setup","","",8,[[["world"],["staticaccessor"]]]],[11,"fetch","","",8,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",8,[[["m"]],["d"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",9,[[["m"]],["d"]]],[11,"vzip","","",9,[[],["v"]]],[11,"clone_box","","",9,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::delay","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",10,[[["m"]],["d"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clone_box","","",10,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::echo","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_subset","","",11,[[["self"]],["option"]]],[11,"is_in_subset","","",11,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",11,[[["self"]],["ss"]]],[11,"from_subset","","",11,[[["ss"]],["sp"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",11,[[["m"]],["d"]]],[11,"vzip","","",11,[[],["v"]]],[11,"clone_box","","",11,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::group","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_subset","","",12,[[["self"]],["option"]]],[11,"is_in_subset","","",12,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",12,[[["self"]],["ss"]]],[11,"from_subset","","",12,[[["ss"]],["sp"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",12,[[["m"]],["d"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clone_box","","",12,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::insert_components","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_subset","","",13,[[["self"]],["option"]]],[11,"is_in_subset","","",13,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",13,[[["self"]],["ss"]]],[11,"from_subset","","",13,[[["ss"]],["sp"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",13,[[["m"]],["d"]]],[11,"vzip","","",13,[[],["v"]]],[11,"clone_box","","",13,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::move_action","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",14,[[["m"]],["d"]]],[11,"vzip","","",14,[[],["v"]]],[11,"clone_box","","",14,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::random","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",15,[[["m"]],["d"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clone_box","","",15,[[["self"]]]],[11,"from","deathfloor::components::event_listener::actions::repeat_delay","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",16,[[["m"]],["d"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clone_box","","",16,[[["self"]]]],[11,"from","deathfloor::components::event_listener::action_trigger","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"try_default","","",17,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",17,[[["m"]],["d"]]],[11,"vzip","","",17,[[],["v"]]],[11,"clone_box","","",17,[[["self"]]]],[11,"from","deathfloor::components::event_listener::action_type_trigger","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"try_default","","",18,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",18,[[["m"]],["d"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","deathfloor::components::event_listener::event_type","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",19,[[["m"]],["d"]]],[11,"vzip","","",19,[[],["v"]]],[11,"clone_box","","",19,[[["self"]]]],[11,"from","deathfloor::components::event_listener::events_register","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",20,[[["m"]],["d"]]],[11,"vzip","","",20,[[],["v"]]],[11,"clone_box","","",20,[[["self"]]]],[11,"from","deathfloor::components::jumper","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",21,[[["m"]],["d"]]],[11,"vzip","","",21,[[],["v"]]],[11,"clone_box","","",21,[[["self"]]]],[11,"from","deathfloor::components::jumppad","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"try_default","","",22,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",22,[[["m"]],["d"]]],[11,"vzip","","",22,[[],["v"]]],[11,"clone_box","","",22,[[["self"]]]],[11,"from","deathfloor::components::jumppad_affected","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"to_subset","","",141,[[["self"]],["option"]]],[11,"is_in_subset","","",141,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",141,[[["self"]],["ss"]]],[11,"from_subset","","",141,[[["ss"]],["sp"]]],[11,"try_default","","",141,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",141,[[["m"]],["d"]]],[11,"vzip","","",141,[[],["v"]]],[11,"from","deathfloor::components::max_movement_velocity","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"try_default","","",23,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",23,[[["m"]],["d"]]],[11,"vzip","","",23,[[],["v"]]],[11,"clone_box","","",23,[[["self"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_subset","","",24,[[["self"]],["option"]]],[11,"is_in_subset","","",24,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",24,[[["self"]],["ss"]]],[11,"from_subset","","",24,[[["ss"]],["sp"]]],[11,"try_default","","",24,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",24,[[["m"]],["d"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","deathfloor::components::movable","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_subset","","",25,[[["self"]],["option"]]],[11,"is_in_subset","","",25,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",25,[[["self"]],["ss"]]],[11,"from_subset","","",25,[[["ss"]],["sp"]]],[11,"try_default","","",25,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",25,[[["m"]],["d"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","deathfloor::components::movable::move_action","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_subset","","",26,[[["self"]],["option"]]],[11,"is_in_subset","","",26,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",26,[[["self"]],["ss"]]],[11,"from_subset","","",26,[[["ss"]],["sp"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",26,[[["m"]],["d"]]],[11,"vzip","","",26,[[],["v"]]],[11,"clone_box","","",26,[[["self"]]]],[11,"from","deathfloor::components::physics_data","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",27,[[["m"]],["d"]]],[11,"vzip","","",27,[[],["v"]]],[11,"clone_box","","",27,[[["self"]]]],[11,"from","deathfloor::components::player","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"to_subset","","",142,[[["self"]],["option"]]],[11,"is_in_subset","","",142,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",142,[[["self"]],["ss"]]],[11,"from_subset","","",142,[[["ss"]],["sp"]]],[11,"try_default","","",142,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",142,[[["m"]],["d"]]],[11,"vzip","","",142,[[],["v"]]],[11,"from","deathfloor::components::shooter","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",28,[[["m"]],["d"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","deathfloor::components::walker","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",29,[[["m"]],["d"]]],[11,"vzip","","",29,[[],["v"]]],[11,"clone_box","","",29,[[["self"]]]],[11,"from","deathfloor::components::wall_jumper","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",30,[[["m"]],["d"]]],[11,"vzip","","",30,[[],["v"]]],[11,"clone_box","","",30,[[["self"]]]],[11,"from","deathfloor::components::wall_slider","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_subset","","",31,[[["self"]],["option"]]],[11,"is_in_subset","","",31,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",31,[[["self"]],["ss"]]],[11,"from_subset","","",31,[[["ss"]],["sp"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",31,[[["m"]],["d"]]],[11,"vzip","","",31,[[],["v"]]],[11,"clone_box","","",31,[[["self"]]]],[11,"from","deathfloor::systems::system_prelude","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_subset","","",32,[[["self"]],["option"]]],[11,"is_in_subset","","",32,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",32,[[["self"]],["ss"]]],[11,"from_subset","","",32,[[["ss"]],["sp"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",32,[[["m"]],["d"]]],[11,"vzip","","",32,[[],["v"]]],[11,"clone_box","","",32,[[["self"]]]],[11,"from","deathfloor::components::prelude","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",33,[[["m"]],["d"]]],[11,"vzip","","",33,[[],["v"]]],[11,"clone_box","","",33,[[["self"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"try_default","","",34,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",34,[[["m"]],["d"]]],[11,"vzip","","",34,[[],["v"]]],[11,"clone_box","","",34,[[["self"]]]],[11,"from","deathfloor::systems::system_prelude","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"load","","",35,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",35,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",35,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"erased_serialize","","",35,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"try_default","","",35,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",35,[[["m"]],["d"]]],[11,"vzip","","",35,[[],["v"]]],[11,"clone_box","","",35,[[["self"]]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"to_subset","","",143,[[["self"]],["option"]]],[11,"is_in_subset","","",143,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",143,[[["self"]],["ss"]]],[11,"from_subset","","",143,[[["ss"]],["sp"]]],[11,"try_default","","",143,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",143,[[["m"]],["d"]]],[11,"vzip","","",143,[[],["v"]]],[11,"clone_box","","",143,[[["self"]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"load","","",144,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",144,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",144,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",144,[[["self"]],["option"]]],[11,"is_in_subset","","",144,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",144,[[["self"]],["ss"]]],[11,"from_subset","","",144,[[["ss"]],["sp"]]],[11,"erased_serialize","","",144,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"try_default","","",144,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",144,[[["m"]],["d"]]],[11,"vzip","","",144,[[],["v"]]],[11,"clone_box","","",144,[[["self"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",36,[[["m"]],["d"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",37,[[["m"]],["d"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_subset","","",38,[[["self"]],["option"]]],[11,"is_in_subset","","",38,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",38,[[["self"]],["ss"]]],[11,"from_subset","","",38,[[["ss"]],["sp"]]],[11,"try_default","","",38,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",38,[[["m"]],["d"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"to_subset","","",145,[[["self"]],["option"]]],[11,"is_in_subset","","",145,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",145,[[["self"]],["ss"]]],[11,"from_subset","","",145,[[["ss"]],["sp"]]],[11,"try_default","","",145,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",145,[[["m"]],["d"]]],[11,"vzip","","",145,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_subset","","",39,[[["self"]],["option"]]],[11,"is_in_subset","","",39,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",39,[[["self"]],["ss"]]],[11,"from_subset","","",39,[[["ss"]],["sp"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",39,[[["m"]],["d"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"to_subset","","",146,[[["self"]],["option"]]],[11,"is_in_subset","","",146,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",146,[[["self"]],["ss"]]],[11,"from_subset","","",146,[[["ss"]],["sp"]]],[11,"try_default","","",146,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",146,[[["m"]],["d"]]],[11,"vzip","","",146,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_subset","","",40,[[["self"]],["option"]]],[11,"is_in_subset","","",40,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",40,[[["self"]],["ss"]]],[11,"from_subset","","",40,[[["ss"]],["sp"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",40,[[["m"]],["d"]]],[11,"vzip","","",40,[[],["v"]]],[11,"clone_box","","",40,[[["self"]]]],[11,"from","deathfloor::components::prelude","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_subset","","",41,[[["self"]],["option"]]],[11,"is_in_subset","","",41,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",41,[[["self"]],["ss"]]],[11,"from_subset","","",41,[[["ss"]],["sp"]]],[11,"try_default","","",41,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",41,[[["m"]],["d"]]],[11,"vzip","","",41,[[],["v"]]],[11,"clone_box","","",41,[[["self"]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_subset","","",42,[[["self"]],["option"]]],[11,"is_in_subset","","",42,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",42,[[["self"]],["ss"]]],[11,"from_subset","","",42,[[["ss"]],["sp"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",42,[[["m"]],["d"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_subset","","",43,[[["self"]],["option"]]],[11,"is_in_subset","","",43,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",43,[[["self"]],["ss"]]],[11,"from_subset","","",43,[[["ss"]],["sp"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",43,[[["m"]],["d"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"to_subset","","",44,[[["self"]],["option"]]],[11,"is_in_subset","","",44,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",44,[[["self"]],["ss"]]],[11,"from_subset","","",44,[[["ss"]],["sp"]]],[11,"try_default","","",44,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",44,[[["m"]],["d"]]],[11,"vzip","","",44,[[],["v"]]],[11,"clone_box","","",44,[[["self"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_subset","","",45,[[["self"]],["option"]]],[11,"is_in_subset","","",45,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",45,[[["self"]],["ss"]]],[11,"from_subset","","",45,[[["ss"]],["sp"]]],[11,"try_default","","",45,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",45,[[["m"]],["d"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_subset","","",46,[[["self"]],["option"]]],[11,"is_in_subset","","",46,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",46,[[["self"]],["ss"]]],[11,"from_subset","","",46,[[["ss"]],["sp"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",46,[[["m"]],["d"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_subset","","",47,[[["self"]],["option"]]],[11,"is_in_subset","","",47,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",47,[[["self"]],["ss"]]],[11,"from_subset","","",47,[[["ss"]],["sp"]]],[11,"try_default","","",47,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",47,[[["m"]],["d"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","deathfloor::components::component_prelude","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_subset","","",49,[[["self"]],["option"]]],[11,"is_in_subset","","",49,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",49,[[["self"]],["ss"]]],[11,"from_subset","","",49,[[["ss"]],["sp"]]],[11,"try_default","","",49,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",49,[[["m"]],["d"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","deathfloor::systems::system_prelude","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_subset","","",50,[[["self"]],["option"]]],[11,"is_in_subset","","",50,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",50,[[["self"]],["ss"]]],[11,"from_subset","","",50,[[["ss"]],["sp"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",50,[[["m"]],["d"]]],[11,"vzip","","",50,[[],["v"]]],[11,"clone_box","","",50,[[["self"]]]],[11,"from","deathfloor::components::component_prelude","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_subset","","",51,[[["self"]],["option"]]],[11,"is_in_subset","","",51,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",51,[[["self"]],["ss"]]],[11,"from_subset","","",51,[[["ss"]],["sp"]]],[11,"try_default","","",51,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",51,[[["m"]],["d"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_subset","","",52,[[["self"]],["option"]]],[11,"is_in_subset","","",52,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",52,[[["self"]],["ss"]]],[11,"from_subset","","",52,[[["ss"]],["sp"]]],[11,"try_default","","",52,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",52,[[["m"]],["d"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","deathfloor::systems::system_prelude","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"to_subset","","",53,[[["self"]],["option"]]],[11,"is_in_subset","","",53,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",53,[[["self"]],["ss"]]],[11,"from_subset","","",53,[[["ss"]],["sp"]]],[11,"setup","","",53,[[["world"],["staticaccessor"]]]],[11,"fetch","","",53,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",53,[[["m"]],["d"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","deathfloor::components::component_prelude","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"to_subset","","",54,[[["self"]],["option"]]],[11,"is_in_subset","","",54,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",54,[[["self"]],["ss"]]],[11,"from_subset","","",54,[[["ss"]],["sp"]]],[11,"try_default","","",54,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",54,[[["m"]],["d"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","deathfloor::systems::system_prelude","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_subset","","",56,[[["self"]],["option"]]],[11,"is_in_subset","","",56,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",56,[[["self"]],["ss"]]],[11,"from_subset","","",56,[[["ss"]],["sp"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",56,[[["m"]],["d"]]],[11,"vzip","","",56,[[],["v"]]],[11,"clone_box","","",56,[[["self"]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_subset","","",57,[[["self"]],["option"]]],[11,"is_in_subset","","",57,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",57,[[["self"]],["ss"]]],[11,"from_subset","","",57,[[["ss"]],["sp"]]],[11,"try_default","","",57,[[],[["result",["string"]],["string"]]]],[11,"par_bridge","","",57,[[],["iterbridge"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"tap_count","","",57,[[["t"]],["tapcountiterator"]]],[11,"adapt_into_using","","",57,[[["m"]],["d"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_subset","","",58,[[["self"]],["option"]]],[11,"is_in_subset","","",58,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",58,[[["self"]],["ss"]]],[11,"from_subset","","",58,[[["ss"]],["sp"]]],[11,"try_default","","",58,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",58,[[["m"]],["d"]]],[11,"vzip","","",58,[[],["v"]]],[11,"clone_box","","",58,[[["self"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_subset","","",59,[[["self"]],["option"]]],[11,"is_in_subset","","",59,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",59,[[["self"]],["ss"]]],[11,"from_subset","","",59,[[["ss"]],["sp"]]],[11,"try_default","","",59,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",59,[[["m"]],["d"]]],[11,"vzip","","",59,[[],["v"]]],[11,"clone_box","","",59,[[["self"]]]],[11,"from","deathfloor::dispatcher_id","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"to_subset","","",60,[[["self"]],["option"]]],[11,"is_in_subset","","",60,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",60,[[["self"]],["ss"]]],[11,"from_subset","","",60,[[["ss"]],["sp"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",60,[[["m"]],["d"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","deathfloor::input::ingame_bindings","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"to_subset","","",147,[[["self"]],["option"]]],[11,"is_in_subset","","",147,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",147,[[["self"]],["ss"]]],[11,"from_subset","","",147,[[["ss"]],["sp"]]],[11,"try_default","","",147,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",147,[[["m"]],["d"]]],[11,"vzip","","",147,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"load","","",61,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",61,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",61,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",61,[[["self"]],["option"]]],[11,"is_in_subset","","",61,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",61,[[["self"]],["ss"]]],[11,"from_subset","","",61,[[["ss"]],["sp"]]],[11,"erased_serialize","","",61,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"try_default","","",61,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",61,[[["m"]],["d"]]],[11,"vzip","","",61,[[],["v"]]],[11,"clone_box","","",61,[[["self"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"load","","",62,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",62,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",62,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",62,[[["self"]],["option"]]],[11,"is_in_subset","","",62,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",62,[[["self"]],["ss"]]],[11,"from_subset","","",62,[[["ss"]],["sp"]]],[11,"erased_serialize","","",62,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"try_default","","",62,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",62,[[["m"]],["d"]]],[11,"vzip","","",62,[[],["v"]]],[11,"clone_box","","",62,[[["self"]]]],[11,"from","deathfloor::input::paused_bindings","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"to_subset","","",148,[[["self"]],["option"]]],[11,"is_in_subset","","",148,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",148,[[["self"]],["ss"]]],[11,"from_subset","","",148,[[["ss"]],["sp"]]],[11,"try_default","","",148,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",148,[[["m"]],["d"]]],[11,"vzip","","",148,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"load","","",63,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",63,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",63,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",63,[[["self"]],["option"]]],[11,"is_in_subset","","",63,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",63,[[["self"]],["ss"]]],[11,"from_subset","","",63,[[["ss"]],["sp"]]],[11,"erased_serialize","","",63,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"try_default","","",63,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",63,[[["m"]],["d"]]],[11,"vzip","","",63,[[],["v"]]],[11,"clone_box","","",63,[[["self"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"load","","",64,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",64,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",64,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",64,[[["self"]],["option"]]],[11,"is_in_subset","","",64,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",64,[[["self"]],["ss"]]],[11,"from_subset","","",64,[[["ss"]],["sp"]]],[11,"erased_serialize","","",64,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"try_default","","",64,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",64,[[["m"]],["d"]]],[11,"vzip","","",64,[[],["v"]]],[11,"clone_box","","",64,[[["self"]]]],[11,"from","deathfloor::map_loader::map_data","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"to_subset","","",65,[[["self"]],["option"]]],[11,"is_in_subset","","",65,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",65,[[["self"]],["ss"]]],[11,"from_subset","","",65,[[["ss"]],["sp"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",65,[[["m"]],["d"]]],[11,"vzip","","",65,[[],["v"]]],[11,"clone_box","","",65,[[["self"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"to_subset","","",66,[[["self"]],["option"]]],[11,"is_in_subset","","",66,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",66,[[["self"]],["ss"]]],[11,"from_subset","","",66,[[["ss"]],["sp"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",66,[[["m"]],["d"]]],[11,"vzip","","",66,[[],["v"]]],[11,"clone_box","","",66,[[["self"]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"to_subset","","",67,[[["self"]],["option"]]],[11,"is_in_subset","","",67,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",67,[[["self"]],["ss"]]],[11,"from_subset","","",67,[[["ss"]],["sp"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",67,[[["m"]],["d"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_subset","","",68,[[["self"]],["option"]]],[11,"is_in_subset","","",68,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",68,[[["self"]],["ss"]]],[11,"from_subset","","",68,[[["ss"]],["sp"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",68,[[["m"]],["d"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"to_subset","","",69,[[["self"]],["option"]]],[11,"is_in_subset","","",69,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",69,[[["self"]],["ss"]]],[11,"from_subset","","",69,[[["ss"]],["sp"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",69,[[["m"]],["d"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"to_subset","","",70,[[["self"]],["option"]]],[11,"is_in_subset","","",70,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",70,[[["self"]],["ss"]]],[11,"from_subset","","",70,[[["ss"]],["sp"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",70,[[["m"]],["d"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","deathfloor::map_loader::helpers::prelude","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_subset","","",72,[[["self"]],["option"]]],[11,"is_in_subset","","",72,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",72,[[["self"]],["ss"]]],[11,"from_subset","","",72,[[["ss"]],["sp"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",72,[[["m"]],["d"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","deathfloor::systems::system_prelude","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_subset","","",73,[[["self"]],["option"]]],[11,"is_in_subset","","",73,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",73,[[["self"]],["ss"]]],[11,"from_subset","","",73,[[["ss"]],["sp"]]],[11,"try_default","","",73,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",73,[[["m"]],["d"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_subset","","",76,[[["self"]],["option"]]],[11,"is_in_subset","","",76,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",76,[[["self"]],["ss"]]],[11,"from_subset","","",76,[[["ss"]],["sp"]]],[11,"try_default","","",76,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",76,[[["m"]],["d"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","deathfloor::map_loader::objects::object_type","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"to_subset","","",77,[[["self"]],["option"]]],[11,"is_in_subset","","",77,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",77,[[["self"]],["ss"]]],[11,"from_subset","","",77,[[["ss"]],["sp"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",77,[[["m"]],["d"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","deathfloor::map_loader::tiles::tile_type","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"to_subset","","",78,[[["self"]],["option"]]],[11,"is_in_subset","","",78,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",78,[[["self"]],["ss"]]],[11,"from_subset","","",78,[[["ss"]],["sp"]]],[11,"try_default","","",78,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",78,[[["m"]],["d"]]],[11,"vzip","","",78,[[],["v"]]],[11,"clone_box","","",78,[[["self"]]]],[11,"from","deathfloor::systems::system_prelude","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"to_subset","","",79,[[["self"]],["option"]]],[11,"is_in_subset","","",79,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",79,[[["self"]],["ss"]]],[11,"from_subset","","",79,[[["ss"]],["sp"]]],[11,"try_default","","",79,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",79,[[["m"]],["d"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"to_subset","","",80,[[["self"]],["option"]]],[11,"is_in_subset","","",80,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",80,[[["self"]],["ss"]]],[11,"from_subset","","",80,[[["ss"]],["sp"]]],[11,"try_default","","",80,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",80,[[["m"]],["d"]]],[11,"vzip","","",80,[[],["v"]]],[11,"from","deathfloor::resources::bullet_creator","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"to_subset","","",81,[[["self"]],["option"]]],[11,"is_in_subset","","",81,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",81,[[["self"]],["ss"]]],[11,"from_subset","","",81,[[["ss"]],["sp"]]],[11,"try_default","","",81,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",81,[[["m"]],["d"]]],[11,"vzip","","",81,[[],["v"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"to_subset","","",82,[[["self"]],["option"]]],[11,"is_in_subset","","",82,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",82,[[["self"]],["ss"]]],[11,"from_subset","","",82,[[["ss"]],["sp"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",82,[[["m"]],["d"]]],[11,"vzip","","",82,[[],["v"]]],[11,"from","deathfloor::settings","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"to_subset","","",83,[[["self"]],["option"]]],[11,"is_in_subset","","",83,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",83,[[["self"]],["ss"]]],[11,"from_subset","","",83,[[["ss"]],["sp"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",83,[[["m"]],["d"]]],[11,"vzip","","",83,[[],["v"]]],[11,"clone_box","","",83,[[["self"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"to_subset","","",84,[[["self"]],["option"]]],[11,"is_in_subset","","",84,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",84,[[["self"]],["ss"]]],[11,"from_subset","","",84,[[["ss"]],["sp"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",84,[[["m"]],["d"]]],[11,"vzip","","",84,[[],["v"]]],[11,"clone_box","","",84,[[["self"]]]],[11,"from","deathfloor::settings::camera_settings","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"to_subset","","",85,[[["self"]],["option"]]],[11,"is_in_subset","","",85,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",85,[[["self"]],["ss"]]],[11,"from_subset","","",85,[[["ss"]],["sp"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",85,[[["m"]],["d"]]],[11,"vzip","","",85,[[],["v"]]],[11,"clone_box","","",85,[[["self"]]]],[11,"from","deathfloor::settings::enemies_settings","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"to_subset","","",86,[[["self"]],["option"]]],[11,"is_in_subset","","",86,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",86,[[["self"]],["ss"]]],[11,"from_subset","","",86,[[["ss"]],["sp"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",86,[[["m"]],["d"]]],[11,"vzip","","",86,[[],["v"]]],[11,"clone_box","","",86,[[["self"]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"to_subset","","",87,[[["self"]],["option"]]],[11,"is_in_subset","","",87,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",87,[[["self"]],["ss"]]],[11,"from_subset","","",87,[[["ss"]],["sp"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",87,[[["m"]],["d"]]],[11,"vzip","","",87,[[],["v"]]],[11,"clone_box","","",87,[[["self"]]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"to_subset","","",88,[[["self"]],["option"]]],[11,"is_in_subset","","",88,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",88,[[["self"]],["ss"]]],[11,"from_subset","","",88,[[["ss"]],["sp"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",88,[[["m"]],["d"]]],[11,"vzip","","",88,[[],["v"]]],[11,"clone_box","","",88,[[["self"]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"to_subset","","",89,[[["self"]],["option"]]],[11,"is_in_subset","","",89,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",89,[[["self"]],["ss"]]],[11,"from_subset","","",89,[[["ss"]],["sp"]]],[11,"setup","","",89,[[["world"],["staticaccessor"]]]],[11,"fetch","","",89,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",89,[[["m"]],["d"]]],[11,"vzip","","",89,[[],["v"]]],[11,"from","deathfloor::settings::general_settings","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"to_subset","","",90,[[["self"]],["option"]]],[11,"is_in_subset","","",90,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",90,[[["self"]],["ss"]]],[11,"from_subset","","",90,[[["ss"]],["sp"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",90,[[["m"]],["d"]]],[11,"vzip","","",90,[[],["v"]]],[11,"clone_box","","",90,[[["self"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"to_subset","","",91,[[["self"]],["option"]]],[11,"is_in_subset","","",91,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",91,[[["self"]],["ss"]]],[11,"from_subset","","",91,[[["ss"]],["sp"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",91,[[["m"]],["d"]]],[11,"vzip","","",91,[[],["v"]]],[11,"clone_box","","",91,[[["self"]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"to_subset","","",92,[[["self"]],["option"]]],[11,"is_in_subset","","",92,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",92,[[["self"]],["ss"]]],[11,"from_subset","","",92,[[["ss"]],["sp"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",92,[[["m"]],["d"]]],[11,"vzip","","",92,[[],["v"]]],[11,"clone_box","","",92,[[["self"]]]],[11,"from","deathfloor::settings::hitbox_config","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"to_subset","","",93,[[["self"]],["option"]]],[11,"is_in_subset","","",93,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",93,[[["self"]],["ss"]]],[11,"from_subset","","",93,[[["ss"]],["sp"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",93,[[["m"]],["d"]]],[11,"vzip","","",93,[[],["v"]]],[11,"clone_box","","",93,[[["self"]]]],[11,"from","deathfloor::settings::player_settings","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"to_subset","","",94,[[["self"]],["option"]]],[11,"is_in_subset","","",94,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",94,[[["self"]],["ss"]]],[11,"from_subset","","",94,[[["ss"]],["sp"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",94,[[["m"]],["d"]]],[11,"vzip","","",94,[[],["v"]]],[11,"clone_box","","",94,[[["self"]]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"to_subset","","",95,[[["self"]],["option"]]],[11,"is_in_subset","","",95,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",95,[[["self"]],["ss"]]],[11,"from_subset","","",95,[[["ss"]],["sp"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",95,[[["m"]],["d"]]],[11,"vzip","","",95,[[],["v"]]],[11,"clone_box","","",95,[[["self"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"to_subset","","",96,[[["self"]],["option"]]],[11,"is_in_subset","","",96,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",96,[[["self"]],["ss"]]],[11,"from_subset","","",96,[[["ss"]],["sp"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",96,[[["m"]],["d"]]],[11,"vzip","","",96,[[],["v"]]],[11,"clone_box","","",96,[[["self"]]]],[11,"from","deathfloor::settings::tiles_settings","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_subset","","",97,[[["self"]],["option"]]],[11,"is_in_subset","","",97,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",97,[[["self"]],["ss"]]],[11,"from_subset","","",97,[[["ss"]],["sp"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",97,[[["m"]],["d"]]],[11,"vzip","","",97,[[],["v"]]],[11,"clone_box","","",97,[[["self"]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_subset","","",98,[[["self"]],["option"]]],[11,"is_in_subset","","",98,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",98,[[["self"]],["ss"]]],[11,"from_subset","","",98,[[["ss"]],["sp"]]],[11,"try_default","","",98,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",98,[[["m"]],["d"]]],[11,"vzip","","",98,[[],["v"]]],[11,"clone_box","","",98,[[["self"]]]],[11,"from","deathfloor::states","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"to_subset","","",149,[[["self"]],["option"]]],[11,"is_in_subset","","",149,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",149,[[["self"]],["ss"]]],[11,"from_subset","","",149,[[["ss"]],["sp"]]],[11,"try_default","","",149,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",149,[[["m"]],["d"]]],[11,"vzip","","",149,[[],["v"]]],[11,"from","deathfloor::states::ingame","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"to_subset","","",150,[[["self"]],["option"]]],[11,"is_in_subset","","",150,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",150,[[["self"]],["ss"]]],[11,"from_subset","","",150,[[["ss"]],["sp"]]],[11,"try_default","","",150,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",150,[[["m"]],["d"]]],[11,"vzip","","",150,[[],["v"]]],[11,"from","deathfloor::states::load_ingame","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"to_subset","","",151,[[["self"]],["option"]]],[11,"is_in_subset","","",151,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",151,[[["self"]],["ss"]]],[11,"from_subset","","",151,[[["ss"]],["sp"]]],[11,"try_default","","",151,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",151,[[["m"]],["d"]]],[11,"vzip","","",151,[[],["v"]]],[11,"from","deathfloor::states::paused","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"to_subset","","",152,[[["self"]],["option"]]],[11,"is_in_subset","","",152,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",152,[[["self"]],["ss"]]],[11,"from_subset","","",152,[[["ss"]],["sp"]]],[11,"try_default","","",152,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",152,[[["m"]],["d"]]],[11,"vzip","","",152,[[],["v"]]],[11,"from","deathfloor::states::startup","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"to_subset","","",153,[[["self"]],["option"]]],[11,"is_in_subset","","",153,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",153,[[["self"]],["ss"]]],[11,"from_subset","","",153,[[["ss"]],["sp"]]],[11,"try_default","","",153,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",153,[[["m"]],["d"]]],[11,"vzip","","",153,[[],["v"]]],[11,"from","deathfloor::systems::system_prelude","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"load","","",99,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",99,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",99,[[["self"],["p"]],[["result",["configerror"]],["configerror"]]]],[11,"to_subset","","",99,[[["self"]],["option"]]],[11,"is_in_subset","","",99,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",99,[[["self"]],["ss"]]],[11,"from_subset","","",99,[[["ss"]],["sp"]]],[11,"erased_serialize","","",99,[[["serializer"],["self"]],[["ok"],["error"],["result",["ok","error"]]]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",99,[[["m"]],["d"]]],[11,"vzip","","",99,[[],["v"]]],[11,"clone_box","","",99,[[["self"]]]],[11,"from","deathfloor::states::state_prelude","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"to_subset","","",101,[[["self"]],["option"]]],[11,"is_in_subset","","",101,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",101,[[["self"]],["ss"]]],[11,"from_subset","","",101,[[["ss"]],["sp"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",101,[[["m"]],["d"]]],[11,"vzip","","",101,[[],["v"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"to_subset","","",102,[[["self"]],["option"]]],[11,"is_in_subset","","",102,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",102,[[["self"]],["ss"]]],[11,"from_subset","","",102,[[["ss"]],["sp"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",102,[[["m"]],["d"]]],[11,"vzip","","",102,[[],["v"]]],[11,"clone_box","","",102,[[["self"]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"to_subset","","",103,[[["self"]],["option"]]],[11,"is_in_subset","","",103,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",103,[[["self"]],["ss"]]],[11,"from_subset","","",103,[[["ss"]],["sp"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",103,[[["m"]],["d"]]],[11,"vzip","","",103,[[],["v"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"to_subset","","",104,[[["self"]],["option"]]],[11,"is_in_subset","","",104,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",104,[[["self"]],["ss"]]],[11,"from_subset","","",104,[[["ss"]],["sp"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",104,[[["m"]],["d"]]],[11,"vzip","","",104,[[],["v"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"to_subset","","",105,[[["self"]],["option"]]],[11,"is_in_subset","","",105,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",105,[[["self"]],["ss"]]],[11,"from_subset","","",105,[[["ss"]],["sp"]]],[11,"try_default","","",105,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",105,[[["m"]],["d"]]],[11,"vzip","","",105,[[],["v"]]],[11,"from","deathfloor::systems::bullet_hit","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"pausable","","",154,[[["v"]],["pausable"]]],[11,"run_now","","",154,[[["self"],["world"]]]],[11,"setup","","",154,[[["self"],["world"]]]],[11,"dispose","","",154,[[["box"],["world"]]]],[11,"to_subset","","",154,[[["self"]],["option"]]],[11,"is_in_subset","","",154,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",154,[[["self"]],["ss"]]],[11,"from_subset","","",154,[[["ss"]],["sp"]]],[11,"try_default","","",154,[[],[["result",["string"]],["string"]]]],[11,"setup","","",154,[[["self"],["world"]]]],[11,"run","","",154,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",154,[[["self"],["vec"]]]],[11,"writes","","",154,[[["self"],["vec"]]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",154,[[["m"]],["d"]]],[11,"vzip","","",154,[[],["v"]]],[11,"from","deathfloor::systems::control_player","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"pausable","","",155,[[["v"]],["pausable"]]],[11,"run_now","","",155,[[["self"],["world"]]]],[11,"setup","","",155,[[["self"],["world"]]]],[11,"dispose","","",155,[[["box"],["world"]]]],[11,"to_subset","","",155,[[["self"]],["option"]]],[11,"is_in_subset","","",155,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",155,[[["self"]],["ss"]]],[11,"from_subset","","",155,[[["ss"]],["sp"]]],[11,"try_default","","",155,[[],[["result",["string"]],["string"]]]],[11,"setup","","",155,[[["self"],["world"]]]],[11,"run","","",155,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",155,[[["self"],["vec"]]]],[11,"writes","","",155,[[["self"],["vec"]]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",155,[[["m"]],["d"]]],[11,"vzip","","",155,[[],["v"]]],[11,"from","deathfloor::systems::control_player_jump","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"to_subset","","",106,[[["self"]],["option"]]],[11,"is_in_subset","","",106,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",106,[[["self"]],["ss"]]],[11,"from_subset","","",106,[[["ss"]],["sp"]]],[11,"try_default","","",106,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",106,[[["m"]],["d"]]],[11,"vzip","","",106,[[],["v"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"pausable","","",107,[[["v"]],["pausable"]]],[11,"run_now","","",107,[[["self"],["world"]]]],[11,"setup","","",107,[[["self"],["world"]]]],[11,"dispose","","",107,[[["box"],["world"]]]],[11,"to_subset","","",107,[[["self"]],["option"]]],[11,"is_in_subset","","",107,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",107,[[["self"]],["ss"]]],[11,"from_subset","","",107,[[["ss"]],["sp"]]],[11,"try_default","","",107,[[],[["result",["string"]],["string"]]]],[11,"setup","","",107,[[["self"],["world"]]]],[11,"run","","",107,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",107,[[["self"],["vec"]]]],[11,"writes","","",107,[[["self"],["vec"]]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",107,[[["m"]],["d"]]],[11,"vzip","","",107,[[],["v"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"to_subset","","",108,[[["self"]],["option"]]],[11,"is_in_subset","","",108,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",108,[[["self"]],["ss"]]],[11,"from_subset","","",108,[[["ss"]],["sp"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",108,[[["m"]],["d"]]],[11,"vzip","","",108,[[],["v"]]],[11,"from","deathfloor::systems::control_player_shoot","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"pausable","","",156,[[["v"]],["pausable"]]],[11,"run_now","","",156,[[["self"],["world"]]]],[11,"setup","","",156,[[["self"],["world"]]]],[11,"dispose","","",156,[[["box"],["world"]]]],[11,"to_subset","","",156,[[["self"]],["option"]]],[11,"is_in_subset","","",156,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",156,[[["self"]],["ss"]]],[11,"from_subset","","",156,[[["ss"]],["sp"]]],[11,"try_default","","",156,[[],[["result",["string"]],["string"]]]],[11,"setup","","",156,[[["self"],["world"]]]],[11,"run","","",156,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",156,[[["self"],["vec"]]]],[11,"writes","","",156,[[["self"],["vec"]]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",156,[[["m"]],["d"]]],[11,"vzip","","",156,[[],["v"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_subset","","",109,[[["self"]],["option"]]],[11,"is_in_subset","","",109,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",109,[[["self"]],["ss"]]],[11,"from_subset","","",109,[[["ss"]],["sp"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",109,[[["m"]],["d"]]],[11,"vzip","","",109,[[],["v"]]],[11,"from","deathfloor::systems::create_bullets","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"pausable","","",157,[[["v"]],["pausable"]]],[11,"run_now","","",157,[[["self"],["world"]]]],[11,"setup","","",157,[[["self"],["world"]]]],[11,"dispose","","",157,[[["box"],["world"]]]],[11,"to_subset","","",157,[[["self"]],["option"]]],[11,"is_in_subset","","",157,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",157,[[["self"]],["ss"]]],[11,"from_subset","","",157,[[["ss"]],["sp"]]],[11,"try_default","","",157,[[],[["result",["string"]],["string"]]]],[11,"setup","","",157,[[["self"],["world"]]]],[11,"run","","",157,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",157,[[["self"],["vec"]]]],[11,"writes","","",157,[[["self"],["vec"]]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",157,[[["m"]],["d"]]],[11,"vzip","","",157,[[],["v"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"to_subset","","",110,[[["self"]],["option"]]],[11,"is_in_subset","","",110,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",110,[[["self"]],["ss"]]],[11,"from_subset","","",110,[[["ss"]],["sp"]]],[11,"setup","","",110,[[["world"],["staticaccessor"]]]],[11,"fetch","","",110,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",110,[[["m"]],["d"]]],[11,"vzip","","",110,[[],["v"]]],[11,"from","deathfloor::systems::delete_bullets","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"pausable","","",158,[[["v"]],["pausable"]]],[11,"run_now","","",158,[[["self"],["world"]]]],[11,"setup","","",158,[[["self"],["world"]]]],[11,"dispose","","",158,[[["box"],["world"]]]],[11,"to_subset","","",158,[[["self"]],["option"]]],[11,"is_in_subset","","",158,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",158,[[["self"]],["ss"]]],[11,"from_subset","","",158,[[["ss"]],["sp"]]],[11,"try_default","","",158,[[],[["result",["string"]],["string"]]]],[11,"setup","","",158,[[["self"],["world"]]]],[11,"run","","",158,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",158,[[["self"],["vec"]]]],[11,"writes","","",158,[[["self"],["vec"]]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",158,[[["m"]],["d"]]],[11,"vzip","","",158,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::delay","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"to_subset","","",111,[[["self"]],["option"]]],[11,"is_in_subset","","",111,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",111,[[["self"]],["ss"]]],[11,"from_subset","","",111,[[["ss"]],["sp"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",111,[[["m"]],["d"]]],[11,"vzip","","",111,[[],["v"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"pausable","","",112,[[["v"]],["pausable"]]],[11,"run_now","","",112,[[["self"],["world"]]]],[11,"setup","","",112,[[["self"],["world"]]]],[11,"dispose","","",112,[[["box"],["world"]]]],[11,"to_subset","","",112,[[["self"]],["option"]]],[11,"is_in_subset","","",112,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",112,[[["self"]],["ss"]]],[11,"from_subset","","",112,[[["ss"]],["sp"]]],[11,"try_default","","",112,[[],[["result",["string"]],["string"]]]],[11,"setup","","",112,[[["self"],["world"]]]],[11,"run","","",112,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",112,[[["self"],["vec"]]]],[11,"writes","","",112,[[["self"],["vec"]]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",112,[[["m"]],["d"]]],[11,"vzip","","",112,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::echo","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"pausable","","",159,[[["v"]],["pausable"]]],[11,"run_now","","",159,[[["self"],["world"]]]],[11,"setup","","",159,[[["self"],["world"]]]],[11,"dispose","","",159,[[["box"],["world"]]]],[11,"to_subset","","",159,[[["self"]],["option"]]],[11,"is_in_subset","","",159,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",159,[[["self"]],["ss"]]],[11,"from_subset","","",159,[[["ss"]],["sp"]]],[11,"try_default","","",159,[[],[["result",["string"]],["string"]]]],[11,"setup","","",159,[[["self"],["world"]]]],[11,"run","","",159,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",159,[[["self"],["vec"]]]],[11,"writes","","",159,[[["self"],["vec"]]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",159,[[["m"]],["d"]]],[11,"vzip","","",159,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::group","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"pausable","","",160,[[["v"]],["pausable"]]],[11,"run_now","","",160,[[["self"],["world"]]]],[11,"setup","","",160,[[["self"],["world"]]]],[11,"dispose","","",160,[[["box"],["world"]]]],[11,"to_subset","","",160,[[["self"]],["option"]]],[11,"is_in_subset","","",160,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",160,[[["self"]],["ss"]]],[11,"from_subset","","",160,[[["ss"]],["sp"]]],[11,"try_default","","",160,[[],[["result",["string"]],["string"]]]],[11,"setup","","",160,[[["self"],["world"]]]],[11,"run","","",160,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",160,[[["self"],["vec"]]]],[11,"writes","","",160,[[["self"],["vec"]]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",160,[[["m"]],["d"]]],[11,"vzip","","",160,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::insert_components","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"pausable","","",161,[[["v"]],["pausable"]]],[11,"run_now","","",161,[[["self"],["world"]]]],[11,"setup","","",161,[[["self"],["world"]]]],[11,"dispose","","",161,[[["box"],["world"]]]],[11,"to_subset","","",161,[[["self"]],["option"]]],[11,"is_in_subset","","",161,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",161,[[["self"]],["ss"]]],[11,"from_subset","","",161,[[["ss"]],["sp"]]],[11,"try_default","","",161,[[],[["result",["string"]],["string"]]]],[11,"setup","","",161,[[["self"],["world"]]]],[11,"run","","",161,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",161,[[["self"],["vec"]]]],[11,"writes","","",161,[[["self"],["vec"]]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",161,[[["m"]],["d"]]],[11,"vzip","","",161,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::move_action","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"pausable","","",162,[[["v"]],["pausable"]]],[11,"run_now","","",162,[[["self"],["world"]]]],[11,"setup","","",162,[[["self"],["world"]]]],[11,"dispose","","",162,[[["box"],["world"]]]],[11,"to_subset","","",162,[[["self"]],["option"]]],[11,"is_in_subset","","",162,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",162,[[["self"]],["ss"]]],[11,"from_subset","","",162,[[["ss"]],["sp"]]],[11,"try_default","","",162,[[],[["result",["string"]],["string"]]]],[11,"setup","","",162,[[["self"],["world"]]]],[11,"run","","",162,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",162,[[["self"],["vec"]]]],[11,"writes","","",162,[[["self"],["vec"]]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",162,[[["m"]],["d"]]],[11,"vzip","","",162,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::random","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"pausable","","",163,[[["v"]],["pausable"]]],[11,"run_now","","",163,[[["self"],["world"]]]],[11,"setup","","",163,[[["self"],["world"]]]],[11,"dispose","","",163,[[["box"],["world"]]]],[11,"to_subset","","",163,[[["self"]],["option"]]],[11,"is_in_subset","","",163,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",163,[[["self"]],["ss"]]],[11,"from_subset","","",163,[[["ss"]],["sp"]]],[11,"try_default","","",163,[[],[["result",["string"]],["string"]]]],[11,"setup","","",163,[[["self"],["world"]]]],[11,"run","","",163,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",163,[[["self"],["vec"]]]],[11,"writes","","",163,[[["self"],["vec"]]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",163,[[["m"]],["d"]]],[11,"vzip","","",163,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::actions::repeat_delay","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"to_subset","","",113,[[["self"]],["option"]]],[11,"is_in_subset","","",113,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",113,[[["self"]],["ss"]]],[11,"from_subset","","",113,[[["ss"]],["sp"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",113,[[["m"]],["d"]]],[11,"vzip","","",113,[[],["v"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"pausable","","",114,[[["v"]],["pausable"]]],[11,"run_now","","",114,[[["self"],["world"]]]],[11,"setup","","",114,[[["self"],["world"]]]],[11,"dispose","","",114,[[["box"],["world"]]]],[11,"to_subset","","",114,[[["self"]],["option"]]],[11,"is_in_subset","","",114,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",114,[[["self"]],["ss"]]],[11,"from_subset","","",114,[[["ss"]],["sp"]]],[11,"try_default","","",114,[[],[["result",["string"]],["string"]]]],[11,"setup","","",114,[[["self"],["world"]]]],[11,"run","","",114,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",114,[[["self"],["vec"]]]],[11,"writes","","",114,[[["self"],["vec"]]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",114,[[["m"]],["d"]]],[11,"vzip","","",114,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::bundle","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"to_subset","","",115,[[["self"]],["option"]]],[11,"is_in_subset","","",115,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",115,[[["self"]],["ss"]]],[11,"from_subset","","",115,[[["ss"]],["sp"]]],[11,"try_default","","",115,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",115,[[["m"]],["d"]]],[11,"vzip","","",115,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::events::interval","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"pausable","","",116,[[["v"]],["pausable"]]],[11,"run_now","","",116,[[["self"],["world"]]]],[11,"setup","","",116,[[["self"],["world"]]]],[11,"dispose","","",116,[[["box"],["world"]]]],[11,"to_subset","","",116,[[["self"]],["option"]]],[11,"is_in_subset","","",116,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",116,[[["self"]],["ss"]]],[11,"from_subset","","",116,[[["ss"]],["sp"]]],[11,"try_default","","",116,[[],[["result",["string"]],["string"]]]],[11,"setup","","",116,[[["self"],["world"]]]],[11,"run","","",116,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",116,[[["self"],["vec"]]]],[11,"writes","","",116,[[["self"],["vec"]]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",116,[[["m"]],["d"]]],[11,"vzip","","",116,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::events::on_collision","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"pausable","","",164,[[["v"]],["pausable"]]],[11,"run_now","","",164,[[["self"],["world"]]]],[11,"setup","","",164,[[["self"],["world"]]]],[11,"dispose","","",164,[[["box"],["world"]]]],[11,"to_subset","","",164,[[["self"]],["option"]]],[11,"is_in_subset","","",164,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",164,[[["self"]],["ss"]]],[11,"from_subset","","",164,[[["ss"]],["sp"]]],[11,"try_default","","",164,[[],[["result",["string"]],["string"]]]],[11,"setup","","",164,[[["self"],["world"]]]],[11,"run","","",164,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",164,[[["self"],["vec"]]]],[11,"writes","","",164,[[["self"],["vec"]]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",164,[[["m"]],["d"]]],[11,"vzip","","",164,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::events::on_spawn","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"pausable","","",117,[[["v"]],["pausable"]]],[11,"run_now","","",117,[[["self"],["world"]]]],[11,"setup","","",117,[[["self"],["world"]]]],[11,"dispose","","",117,[[["box"],["world"]]]],[11,"to_subset","","",117,[[["self"]],["option"]]],[11,"is_in_subset","","",117,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",117,[[["self"]],["ss"]]],[11,"from_subset","","",117,[[["ss"]],["sp"]]],[11,"try_default","","",117,[[],[["result",["string"]],["string"]]]],[11,"setup","","",117,[[["self"],["world"]]]],[11,"run","","",117,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",117,[[["self"],["vec"]]]],[11,"writes","","",117,[[["self"],["vec"]]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",117,[[["m"]],["d"]]],[11,"vzip","","",117,[[],["v"]]],[11,"from","deathfloor::systems::event_handlers::trigger_actions_from_action_types","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"pausable","","",165,[[["v"]],["pausable"]]],[11,"run_now","","",165,[[["self"],["world"]]]],[11,"setup","","",165,[[["self"],["world"]]]],[11,"dispose","","",165,[[["box"],["world"]]]],[11,"to_subset","","",165,[[["self"]],["option"]]],[11,"is_in_subset","","",165,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",165,[[["self"]],["ss"]]],[11,"from_subset","","",165,[[["ss"]],["sp"]]],[11,"try_default","","",165,[[],[["result",["string"]],["string"]]]],[11,"setup","","",165,[[["self"],["world"]]]],[11,"run","","",165,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",165,[[["self"],["vec"]]]],[11,"writes","","",165,[[["self"],["vec"]]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",165,[[["m"]],["d"]]],[11,"vzip","","",165,[[],["v"]]],[11,"from","deathfloor::systems::handle_animations","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"pausable","","",166,[[["v"]],["pausable"]]],[11,"run_now","","",166,[[["self"],["world"]]]],[11,"setup","","",166,[[["self"],["world"]]]],[11,"dispose","","",166,[[["box"],["world"]]]],[11,"to_subset","","",166,[[["self"]],["option"]]],[11,"is_in_subset","","",166,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",166,[[["self"]],["ss"]]],[11,"from_subset","","",166,[[["ss"]],["sp"]]],[11,"try_default","","",166,[[],[["result",["string"]],["string"]]]],[11,"setup","","",166,[[["self"],["world"]]]],[11,"run","","",166,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",166,[[["self"],["vec"]]]],[11,"writes","","",166,[[["self"],["vec"]]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",166,[[["m"]],["d"]]],[11,"vzip","","",166,[[],["v"]]],[11,"from","deathfloor::systems::handle_jumppad_affected","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"pausable","","",167,[[["v"]],["pausable"]]],[11,"run_now","","",167,[[["self"],["world"]]]],[11,"setup","","",167,[[["self"],["world"]]]],[11,"dispose","","",167,[[["box"],["world"]]]],[11,"to_subset","","",167,[[["self"]],["option"]]],[11,"is_in_subset","","",167,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",167,[[["self"]],["ss"]]],[11,"from_subset","","",167,[[["ss"]],["sp"]]],[11,"try_default","","",167,[[],[["result",["string"]],["string"]]]],[11,"setup","","",167,[[["self"],["world"]]]],[11,"run","","",167,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",167,[[["self"],["vec"]]]],[11,"writes","","",167,[[["self"],["vec"]]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",167,[[["m"]],["d"]]],[11,"vzip","","",167,[[],["v"]]],[11,"from","deathfloor::systems::handle_movables","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"pausable","","",168,[[["v"]],["pausable"]]],[11,"run_now","","",168,[[["self"],["world"]]]],[11,"setup","","",168,[[["self"],["world"]]]],[11,"dispose","","",168,[[["box"],["world"]]]],[11,"to_subset","","",168,[[["self"]],["option"]]],[11,"is_in_subset","","",168,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",168,[[["self"]],["ss"]]],[11,"from_subset","","",168,[[["ss"]],["sp"]]],[11,"try_default","","",168,[[],[["result",["string"]],["string"]]]],[11,"setup","","",168,[[["self"],["world"]]]],[11,"run","","",168,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",168,[[["self"],["vec"]]]],[11,"writes","","",168,[[["self"],["vec"]]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",168,[[["m"]],["d"]]],[11,"vzip","","",168,[[],["v"]]],[11,"from","deathfloor::systems::handle_scales","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"pausable","","",169,[[["v"]],["pausable"]]],[11,"run_now","","",169,[[["self"],["world"]]]],[11,"setup","","",169,[[["self"],["world"]]]],[11,"dispose","","",169,[[["box"],["world"]]]],[11,"to_subset","","",169,[[["self"]],["option"]]],[11,"is_in_subset","","",169,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",169,[[["self"]],["ss"]]],[11,"from_subset","","",169,[[["ss"]],["sp"]]],[11,"try_default","","",169,[[],[["result",["string"]],["string"]]]],[11,"setup","","",169,[[["self"],["world"]]]],[11,"run","","",169,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",169,[[["self"],["vec"]]]],[11,"writes","","",169,[[["self"],["vec"]]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",169,[[["m"]],["d"]]],[11,"vzip","","",169,[[],["v"]]],[11,"from","deathfloor::systems::handle_walkers","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"pausable","","",170,[[["v"]],["pausable"]]],[11,"run_now","","",170,[[["self"],["world"]]]],[11,"setup","","",170,[[["self"],["world"]]]],[11,"dispose","","",170,[[["box"],["world"]]]],[11,"to_subset","","",170,[[["self"]],["option"]]],[11,"is_in_subset","","",170,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",170,[[["self"]],["ss"]]],[11,"from_subset","","",170,[[["ss"]],["sp"]]],[11,"try_default","","",170,[[],[["result",["string"]],["string"]]]],[11,"setup","","",170,[[["self"],["world"]]]],[11,"run","","",170,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",170,[[["self"],["vec"]]]],[11,"writes","","",170,[[["self"],["vec"]]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",170,[[["m"]],["d"]]],[11,"vzip","","",170,[[],["v"]]],[11,"from","deathfloor::systems::prelude","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"pausable","","",171,[[["v"]],["pausable"]]],[11,"run_now","","",171,[[["self"],["world"]]]],[11,"setup","","",171,[[["self"],["world"]]]],[11,"dispose","","",171,[[["box"],["world"]]]],[11,"to_subset","","",171,[[["self"]],["option"]]],[11,"is_in_subset","","",171,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",171,[[["self"]],["ss"]]],[11,"from_subset","","",171,[[["ss"]],["sp"]]],[11,"try_default","","",171,[[],[["result",["string"]],["string"]]]],[11,"setup","","",171,[[["self"],["world"]]]],[11,"run","","",171,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",171,[[["self"],["vec"]]]],[11,"writes","","",171,[[["self"],["vec"]]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",171,[[["m"]],["d"]]],[11,"vzip","","",171,[[],["v"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"pausable","","",172,[[["v"]],["pausable"]]],[11,"run_now","","",172,[[["self"],["world"]]]],[11,"setup","","",172,[[["self"],["world"]]]],[11,"dispose","","",172,[[["box"],["world"]]]],[11,"to_subset","","",172,[[["self"]],["option"]]],[11,"is_in_subset","","",172,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",172,[[["self"]],["ss"]]],[11,"from_subset","","",172,[[["ss"]],["sp"]]],[11,"try_default","","",172,[[],[["result",["string"]],["string"]]]],[11,"setup","","",172,[[["self"],["world"]]]],[11,"run","","",172,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",172,[[["self"],["vec"]]]],[11,"writes","","",172,[[["self"],["vec"]]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",172,[[["m"]],["d"]]],[11,"vzip","","",172,[[],["v"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"pausable","","",118,[[["v"]],["pausable"]]],[11,"run_now","","",118,[[["self"],["world"]]]],[11,"setup","","",118,[[["self"],["world"]]]],[11,"dispose","","",118,[[["box"],["world"]]]],[11,"to_subset","","",118,[[["self"]],["option"]]],[11,"is_in_subset","","",118,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",118,[[["self"]],["ss"]]],[11,"from_subset","","",118,[[["ss"]],["sp"]]],[11,"try_default","","",118,[[],[["result",["string"]],["string"]]]],[11,"setup","","",118,[[["self"],["world"]]]],[11,"run","","",118,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",118,[[["self"],["vec"]]]],[11,"writes","","",118,[[["self"],["vec"]]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",118,[[["m"]],["d"]]],[11,"vzip","","",118,[[],["v"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"pausable","","",173,[[["v"]],["pausable"]]],[11,"run_now","","",173,[[["self"],["world"]]]],[11,"setup","","",173,[[["self"],["world"]]]],[11,"dispose","","",173,[[["box"],["world"]]]],[11,"to_subset","","",173,[[["self"]],["option"]]],[11,"is_in_subset","","",173,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",173,[[["self"]],["ss"]]],[11,"from_subset","","",173,[[["ss"]],["sp"]]],[11,"try_default","","",173,[[],[["result",["string"]],["string"]]]],[11,"setup","","",173,[[["self"],["world"]]]],[11,"run","","",173,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",173,[[["self"],["vec"]]]],[11,"writes","","",173,[[["self"],["vec"]]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",173,[[["m"]],["d"]]],[11,"vzip","","",173,[[],["v"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"pausable","","",119,[[["v"]],["pausable"]]],[11,"run_now","","",119,[[["self"],["world"]]]],[11,"setup","","",119,[[["self"],["world"]]]],[11,"dispose","","",119,[[["box"],["world"]]]],[11,"to_subset","","",119,[[["self"]],["option"]]],[11,"is_in_subset","","",119,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",119,[[["self"]],["ss"]]],[11,"from_subset","","",119,[[["ss"]],["sp"]]],[11,"try_default","","",119,[[],[["result",["string"]],["string"]]]],[11,"setup","","",119,[[["self"],["world"]]]],[11,"run","","",119,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",119,[[["self"],["vec"]]]],[11,"writes","","",119,[[["self"],["vec"]]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",119,[[["m"]],["d"]]],[11,"vzip","","",119,[[],["v"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"pausable","","",174,[[["v"]],["pausable"]]],[11,"run_now","","",174,[[["self"],["world"]]]],[11,"setup","","",174,[[["self"],["world"]]]],[11,"dispose","","",174,[[["box"],["world"]]]],[11,"to_subset","","",174,[[["self"]],["option"]]],[11,"is_in_subset","","",174,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",174,[[["self"]],["ss"]]],[11,"from_subset","","",174,[[["ss"]],["sp"]]],[11,"try_default","","",174,[[],[["result",["string"]],["string"]]]],[11,"setup","","",174,[[["self"],["world"]]]],[11,"run","","",174,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",174,[[["self"],["vec"]]]],[11,"writes","","",174,[[["self"],["vec"]]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",174,[[["m"]],["d"]]],[11,"vzip","","",174,[[],["v"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"pausable","","",120,[[["v"]],["pausable"]]],[11,"run_now","","",120,[[["self"],["world"]]]],[11,"setup","","",120,[[["self"],["world"]]]],[11,"dispose","","",120,[[["box"],["world"]]]],[11,"to_subset","","",120,[[["self"]],["option"]]],[11,"is_in_subset","","",120,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",120,[[["self"]],["ss"]]],[11,"from_subset","","",120,[[["ss"]],["sp"]]],[11,"try_default","","",120,[[],[["result",["string"]],["string"]]]],[11,"setup","","",120,[[["self"],["world"]]]],[11,"run","","",120,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",120,[[["self"],["vec"]]]],[11,"writes","","",120,[[["self"],["vec"]]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",120,[[["m"]],["d"]]],[11,"vzip","","",120,[[],["v"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"pausable","","",175,[[["v"]],["pausable"]]],[11,"run_now","","",175,[[["self"],["world"]]]],[11,"setup","","",175,[[["self"],["world"]]]],[11,"dispose","","",175,[[["box"],["world"]]]],[11,"to_subset","","",175,[[["self"]],["option"]]],[11,"is_in_subset","","",175,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",175,[[["self"]],["ss"]]],[11,"from_subset","","",175,[[["ss"]],["sp"]]],[11,"try_default","","",175,[[],[["result",["string"]],["string"]]]],[11,"setup","","",175,[[["self"],["world"]]]],[11,"run","","",175,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",175,[[["self"],["vec"]]]],[11,"writes","","",175,[[["self"],["vec"]]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",175,[[["m"]],["d"]]],[11,"vzip","","",175,[[],["v"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"pausable","","",176,[[["v"]],["pausable"]]],[11,"run_now","","",176,[[["self"],["world"]]]],[11,"setup","","",176,[[["self"],["world"]]]],[11,"dispose","","",176,[[["box"],["world"]]]],[11,"to_subset","","",176,[[["self"]],["option"]]],[11,"is_in_subset","","",176,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",176,[[["self"]],["ss"]]],[11,"from_subset","","",176,[[["ss"]],["sp"]]],[11,"try_default","","",176,[[],[["result",["string"]],["string"]]]],[11,"setup","","",176,[[["self"],["world"]]]],[11,"run","","",176,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",176,[[["self"],["vec"]]]],[11,"writes","","",176,[[["self"],["vec"]]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",176,[[["m"]],["d"]]],[11,"vzip","","",176,[[],["v"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"pausable","","",177,[[["v"]],["pausable"]]],[11,"run_now","","",177,[[["self"],["world"]]]],[11,"setup","","",177,[[["self"],["world"]]]],[11,"dispose","","",177,[[["box"],["world"]]]],[11,"to_subset","","",177,[[["self"]],["option"]]],[11,"is_in_subset","","",177,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",177,[[["self"]],["ss"]]],[11,"from_subset","","",177,[[["ss"]],["sp"]]],[11,"try_default","","",177,[[],[["result",["string"]],["string"]]]],[11,"setup","","",177,[[["self"],["world"]]]],[11,"run","","",177,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",177,[[["self"],["vec"]]]],[11,"writes","","",177,[[["self"],["vec"]]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",177,[[["m"]],["d"]]],[11,"vzip","","",177,[[],["v"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"pausable","","",121,[[["v"]],["pausable"]]],[11,"run_now","","",121,[[["self"],["world"]]]],[11,"setup","","",121,[[["self"],["world"]]]],[11,"dispose","","",121,[[["box"],["world"]]]],[11,"to_subset","","",121,[[["self"]],["option"]]],[11,"is_in_subset","","",121,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",121,[[["self"]],["ss"]]],[11,"from_subset","","",121,[[["ss"]],["sp"]]],[11,"try_default","","",121,[[],[["result",["string"]],["string"]]]],[11,"setup","","",121,[[["self"],["world"]]]],[11,"run","","",121,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",121,[[["self"],["vec"]]]],[11,"writes","","",121,[[["self"],["vec"]]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",121,[[["m"]],["d"]]],[11,"vzip","","",121,[[],["v"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"pausable","","",122,[[["v"]],["pausable"]]],[11,"run_now","","",122,[[["self"],["world"]]]],[11,"setup","","",122,[[["self"],["world"]]]],[11,"dispose","","",122,[[["box"],["world"]]]],[11,"to_subset","","",122,[[["self"]],["option"]]],[11,"is_in_subset","","",122,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",122,[[["self"]],["ss"]]],[11,"from_subset","","",122,[[["ss"]],["sp"]]],[11,"try_default","","",122,[[],[["result",["string"]],["string"]]]],[11,"setup","","",122,[[["self"],["world"]]]],[11,"run","","",122,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",122,[[["self"],["vec"]]]],[11,"writes","","",122,[[["self"],["vec"]]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",122,[[["m"]],["d"]]],[11,"vzip","","",122,[[],["v"]]],[11,"from","deathfloor::systems::system_prelude","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"to_subset","","",124,[[["self"]],["option"]]],[11,"is_in_subset","","",124,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",124,[[["self"]],["ss"]]],[11,"from_subset","","",124,[[["ss"]],["sp"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",124,[[["m"]],["d"]]],[11,"vzip","","",124,[[],["v"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"to_subset","","",125,[[["self"]],["option"]]],[11,"is_in_subset","","",125,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",125,[[["self"]],["ss"]]],[11,"from_subset","","",125,[[["ss"]],["sp"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",125,[[["m"]],["d"]]],[11,"vzip","","",125,[[],["v"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"to_subset","","",126,[[["self"]],["option"]]],[11,"is_in_subset","","",126,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",126,[[["self"]],["ss"]]],[11,"from_subset","","",126,[[["ss"]],["sp"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",126,[[["m"]],["d"]]],[11,"vzip","","",126,[[],["v"]]],[11,"clone_box","","",126,[[["self"]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"to_subset","","",127,[[["self"]],["option"]]],[11,"is_in_subset","","",127,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",127,[[["self"]],["ss"]]],[11,"from_subset","","",127,[[["ss"]],["sp"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",127,[[["m"]],["d"]]],[11,"vzip","","",127,[[],["v"]]],[11,"clone_box","","",127,[[["self"]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"to_subset","","",128,[[["self"]],["option"]]],[11,"is_in_subset","","",128,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",128,[[["self"]],["ss"]]],[11,"from_subset","","",128,[[["ss"]],["sp"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",128,[[["m"]],["d"]]],[11,"vzip","","",128,[[],["v"]]],[11,"clone_box","","",128,[[["self"]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"to_subset","","",129,[[["self"]],["option"]]],[11,"is_in_subset","","",129,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",129,[[["self"]],["ss"]]],[11,"from_subset","","",129,[[["ss"]],["sp"]]],[11,"try_default","","",129,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",129,[[["m"]],["d"]]],[11,"vzip","","",129,[[],["v"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"to_subset","","",130,[[["self"]],["option"]]],[11,"is_in_subset","","",130,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",130,[[["self"]],["ss"]]],[11,"from_subset","","",130,[[["ss"]],["sp"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",130,[[["m"]],["d"]]],[11,"vzip","","",130,[[],["v"]]],[11,"clone_box","","",130,[[["self"]]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"to_subset","","",131,[[["self"]],["option"]]],[11,"is_in_subset","","",131,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",131,[[["self"]],["ss"]]],[11,"from_subset","","",131,[[["ss"]],["sp"]]],[11,"try_default","","",131,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",131,[[["m"]],["d"]]],[11,"vzip","","",131,[[],["v"]]],[11,"clone_box","","",131,[[["self"]]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"to_subset","","",132,[[["self"]],["option"]]],[11,"is_in_subset","","",132,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",132,[[["self"]],["ss"]]],[11,"from_subset","","",132,[[["ss"]],["sp"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",132,[[["m"]],["d"]]],[11,"vzip","","",132,[[],["v"]]],[11,"clone_box","","",132,[[["self"]]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"to_subset","","",134,[[["self"]],["option"]]],[11,"is_in_subset","","",134,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",134,[[["self"]],["ss"]]],[11,"from_subset","","",134,[[["ss"]],["sp"]]],[11,"setup","","",134,[[["world"],["staticaccessor"]]]],[11,"fetch","","",134,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",134,[[["m"]],["d"]]],[11,"vzip","","",134,[[],["v"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"to_subset","","",136,[[["self"]],["option"]]],[11,"is_in_subset","","",136,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",136,[[["self"]],["ss"]]],[11,"from_subset","","",136,[[["ss"]],["sp"]]],[11,"setup","","",136,[[["world"],["staticaccessor"]]]],[11,"fetch","","",136,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",136,[[["m"]],["d"]]],[11,"vzip","","",136,[[],["v"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"to_subset","","",138,[[["self"]],["option"]]],[11,"is_in_subset","","",138,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",138,[[["self"]],["ss"]]],[11,"from_subset","","",138,[[["ss"]],["sp"]]],[11,"try_default","","",138,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",138,[[["m"]],["d"]]],[11,"vzip","","",138,[[],["v"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"to_subset","","",139,[[["self"]],["option"]]],[11,"is_in_subset","","",139,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",139,[[["self"]],["ss"]]],[11,"from_subset","","",139,[[["ss"]],["sp"]]],[11,"process","","",139,[[],[["processingstate"],["error"],["result",["processingstate","error"]]]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",139,[[["m"]],["d"]]],[11,"vzip","","",139,[[],["v"]]],[11,"clone_box","","",139,[[["self"]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"to_subset","","",140,[[["self"]],["option"]]],[11,"is_in_subset","","",140,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",140,[[["self"]],["ss"]]],[11,"from_subset","","",140,[[["ss"]],["sp"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",140,[[["m"]],["d"]]],[11,"vzip","","",140,[[],["v"]]],[11,"deserialize","deathfloor::components::prelude","",33,[[["__d"]],[["animation"],["result",["animation"]]]]],[11,"deserialize","","",34,[[["__d"]],[["animationscontainer"],["result",["animationscontainer"]]]]],[11,"default","deathfloor::systems::prelude","",118,[[],["switchanimationssystem"]]],[11,"default","","",172,[[],["playanimationssystem"]]],[11,"default","deathfloor::components::prelude","",34,[[],["animationscontainer"]]],[11,"from","","",34,[[["hashmap",["randomstate"]],["randomstate"]],["animationscontainer"]]],[11,"from","","",33,[[["vec"]],["animation"]]],[11,"clone","","",34,[[["self"]],["animationscontainer"]]],[11,"clone","","",33,[[["self"]],["animation"]]],[11,"run","deathfloor::systems::prelude","",172,[[["self"]]]],[11,"run","","",118,[[["self"]]]],[11,"eq","deathfloor::systems::system_prelude","",56,[[["self"],["axis"]],["bool"]]],[11,"eq","","",58,[[["self"],["rect"]],["bool"]]],[11,"ne","","",58,[[["self"],["rect"]],["bool"]]],[11,"eq","","",37,[[["follow"],["self"]],["bool"]]],[11,"ne","","",37,[[["follow"],["self"]],["bool"]]],[11,"run","deathfloor::systems::prelude","",119,[[["self"]]]],[11,"run","","",174,[[["self"]]]],[11,"run","","",175,[[["self"]]]],[11,"run","","",120,[[["self"]]]],[11,"run","","",173,[[["self"]]]],[11,"clone","deathfloor::systems::system_prelude","",56,[[["self"]],["axis"]]],[11,"clone","","",59,[[["self"]],["rectbuilder"]]],[11,"clone","","",40,[[["self"]],["size"]]],[11,"clone","","",58,[[["self"]],["rect"]]],[11,"build","deathfloor::states::state_prelude","",105,[[["world"]],["customgamedata"]]],[11,"fmt","deathfloor::systems::system_prelude","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deserialize","","",145,[[["__d"]],[["loaded"],["result",["loaded"]]]]],[11,"deserialize","","",38,[[["__d"]],[["loadable"],["result",["loadable"]]]]],[11,"deserialize","","",40,[[["__d"]],[["result",["size"]],["size"]]]],[11,"deserialize","","",36,[[["__d"]],[["result",["confined"]],["confined"]]]],[11,"deserialize","","",146,[[["__d"]],[["result",["scaleonce"]],["scaleonce"]]]],[11,"deserialize","","",56,[[["__d"]],[["axis"],["result",["axis"]]]]],[11,"deserialize","","",39,[[["__d"]],[["result",["loader"]],["loader"]]]],[11,"deserialize","","",58,[[["__d"]],[["rect"],["result",["rect"]]]]],[11,"partial_cmp","","",37,[[["follow"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"default","","",57,[[],["iter"]]],[11,"default","","",145,[[],["loaded"]]],[11,"default","","",38,[[],["loadable"]]],[11,"default","","",79,[[],["entitycomponentinserter"]]],[11,"default","","",76,[[],["spritesheethandles"]]],[11,"default","deathfloor::systems::prelude","",174,[[],["followsystem"]]],[11,"default","","",175,[[],["scalespritessystem"]]],[11,"default","","",173,[[],["confineentitiessystem"]]],[11,"default","deathfloor::states::state_prelude","Creates a new builder for `CustomGameData`",105,[[],["customgamedatabuilder"]]],[11,"default","deathfloor::systems::prelude","",120,[[],["inputmanagersystem"]]],[11,"default","deathfloor::systems::system_prelude","",58,[[],["rect"]]],[11,"default","","",80,[[],["inputmanager"]]],[11,"default","","",59,[[],["rectbuilder"]]],[11,"default","","",146,[[],["scaleonce"]]],[11,"default","deathfloor::systems::prelude","",119,[[],["entityloadersystem"]]],[11,"from","deathfloor::systems::system_prelude","",40,[[],["size"]]],[11,"from","","",59,[[["size"]],["rectbuilder"]]],[11,"from","","",40,[[["f32"],["u1"],["u2"],["matrix",["f32","u2","u1"]]],["size"]]],[11,"from","","",58,[[["size"]],["rect"]]],[11,"from","","",39,[[],["loader"]]],[11,"from","","",36,[[["r"]],["confined"]]],[11,"dispose","deathfloor::states::state_prelude","",104,[[["self"],["world"]]]],[11,"next","deathfloor::systems::system_prelude","",57,[[["self"]],["option"]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"clone","deathfloor::states::state_prelude","",102,[[["self"]],["stateevent"]]],[11,"fmt","","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"apply_sample","deathfloor::systems::system_prelude","",32,[[["self"]]]],[11,"current_sample","","",32,[[["self"]]]],[11,"default_primitive","","",32,[[]]],[11,"blend_method","","",32,[[["self"]],[["option",["blendmethod"]],["blendmethod"]]]],[11,"apply_sample","","",35,[[["self"],["samplerprimitive"]]]],[11,"current_sample","","",35,[[["self"]],[["f32"],["samplerprimitive",["f32"]]]]],[11,"default_primitive","","",35,[[]]],[11,"blend_method","","",35,[[["self"]],[["option",["blendmethod"]],["blendmethod"]]]],[11,"eq","","",131,[[["self"],["time"]],["bool"]]],[11,"ne","","",131,[[["self"],["time"]],["bool"]]],[11,"eq","","",35,[[["self"],["transform"]],["bool"]]],[11,"ne","","",35,[[["self"],["transform"]],["bool"]]],[11,"clone","","",143,[[["self"]],["hidden"]]],[11,"clone","","",131,[[["self"]],["time"]]],[11,"clone","","",35,[[["self"]],["transform"]]],[11,"serialize","","",35,[[["self"],["__s"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"into","","",35,[[],["transformvalues"]]],[11,"default","","",131,[[],["time"]]],[11,"default","","The default transform does nothing when used to transform…",35,[[],["transform"]]],[11,"default","","",143,[[],["hidden"]]],[11,"from","","",35,[[["u1"],["matrix",["f64","u3","u1"]],["f64"],["u3"]],["transform"]]],[11,"from","","",35,[[["transformvalues"]],["transform"]]],[11,"from","","",35,[[["f32"],["u1"],["u3"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"named","deathfloor::map_loader::helpers::prelude","",72,[[["s"]],["entitybuilder"]]],[11,"deserialize","deathfloor::systems::system_prelude","",35,[[["__d"]],[["result",["transform"]],["transform"]]]],[11,"setup","","",53,[[["world"]]]],[11,"fetch","","",53,[[["world"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[11,"reads","","",53,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",53,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"setup","","",53,[[["world"]]]],[11,"fetch","","",53,[[["world"]],[["fetchmut",["maskedstorage"]],["storage",["fetchmut"]]]]],[11,"reads","","",53,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",53,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"get_mut","","",53,[[["self"],["entity"]],["option"]]],[11,"get_mut_or_default","","",53,[[["self"],["entity"]],["option"]]],[11,"insert","","",53,[[["self"],["entity"]],[["error"],["result",["option","error"]],["option"]]]],[11,"remove","","",53,[[["self"],["entity"]]]],[11,"_private","","",53,[[],["seal"]]],[11,"partial_cmp","","",50,[[["entity"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",50,[[["entity"],["self"]],["bool"]]],[11,"le","","",50,[[["entity"],["self"]],["bool"]]],[11,"gt","","",50,[[["entity"],["self"]],["bool"]]],[11,"ge","","",50,[[["entity"],["self"]],["bool"]]],[11,"get","","",53,[[["self"],["entity"]],["option"]]],[11,"_private","","",53,[[],["seal"]]],[11,"get","","",53,[[["self"],["entity"]],["option"]]],[11,"_private","","",53,[[],["seal"]]],[11,"with","deathfloor::map_loader::helpers::prelude","Inserts a component for this entity.",72,[[["t"]],["entitybuilder"]]],[11,"build","","Finishes the building and returns the entity. As opposed…",72,[[],["entity"]]],[11,"new","deathfloor::systems::system_prelude","",73,[[],["world"]]],[11,"register","","",73,[[["self"]]]],[11,"register_with_storage","","",73,[[["self"],["f"]]]],[11,"add_resource","","",73,[[["self"],["t"]]]],[11,"read_component","","",73,[[["self"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[11,"write_component","","",73,[[["self"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[11,"read_resource","","",73,[[["self"]],["fetch"]]],[11,"write_resource","","",73,[[["self"]],["fetchmut"]]],[11,"entities","","",73,[[["self"]],[["entitiesres"],["defaultprovider"],["read",["entitiesres","defaultprovider"]]]]],[11,"entities_mut","","",73,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[11,"create_entity","","",73,[[["self"]],["entitybuilder"]]],[11,"create_entity_unchecked","","",73,[[["self"]],["entitybuilder"]]],[11,"create_iter","","",73,[[["self"]],["createiter"]]],[11,"delete_entity","","",73,[[["self"],["entity"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"delete_entities","","",73,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"delete_all","","",73,[[["self"]]]],[11,"is_alive","","",73,[[["self"],["entity"]],["bool"]]],[11,"maintain","","",73,[[["self"]]]],[11,"delete_components","","",73,[[["self"]]]],[11,"drop","deathfloor::map_loader::helpers::prelude","",72,[[["self"]]]],[11,"eq","deathfloor::systems::system_prelude","",50,[[["entity"],["self"]],["bool"]]],[11,"ne","","",50,[[["entity"],["self"]],["bool"]]],[11,"cmp","","",50,[[["entity"],["self"]],["ordering"]]],[11,"clone","","",50,[[["self"]],["entity"]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","deathfloor::components::component_prelude","",54,[[],["vecstorage"]]],[11,"default","","",52,[[],["nullstorage"]]],[11,"default","","",51,[[],["hashmapstorage"]]],[11,"default","","",49,[[],["densevecstorage"]]],[11,"clean","","",49,[[["self"],["b"]]]],[11,"get","","",49,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",49,[[["self"],["u32"]],["t"]]],[11,"insert","","",49,[[["self"],["u32"],["t"]]]],[11,"remove","","",49,[[["self"],["u32"]],["t"]]],[11,"clean","","",51,[[["self"],["b"]]]],[11,"get","","",51,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",51,[[["self"],["u32"]],["t"]]],[11,"insert","","",51,[[["self"],["u32"],["t"]]]],[11,"remove","","",51,[[["self"],["u32"]],["t"]]],[11,"clean","","",54,[[["self"],["b"]]]],[11,"get","","",54,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",54,[[["self"],["u32"]],["t"]]],[11,"insert","","",54,[[["self"],["u32"],["t"]]]],[11,"remove","","",54,[[["self"],["u32"]],["t"]]],[11,"clean","","",52,[[["self"],["b"]]]],[11,"get","","",52,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",52,[[["self"],["u32"]],["t"]]],[11,"insert","","",52,[[["self"],["u32"],["t"]]]],[11,"remove","","",52,[[["self"],["u32"]],["t"]]],[11,"hash","deathfloor::systems::system_prelude","",50,[[["self"],["__h"]]]],[11,"partial_cmp","","",132,[[["resourceid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",132,[[["resourceid"],["self"]],["bool"]]],[11,"le","","",132,[[["resourceid"],["self"]],["bool"]]],[11,"gt","","",132,[[["resourceid"],["self"]],["bool"]]],[11,"ge","","",132,[[["resourceid"],["self"]],["bool"]]],[11,"deref_mut","","",136,[[["self"]],["t"]]],[11,"eq","","",132,[[["resourceid"],["self"]],["bool"]]],[11,"ne","","",132,[[["resourceid"],["self"]],["bool"]]],[11,"cmp","","",132,[[["resourceid"],["self"]],["ordering"]]],[11,"clone","","",132,[[["self"]],["resourceid"]]],[11,"fmt","","",132,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"setup","","",136,[[["world"]]]],[11,"fetch","","",136,[[["world"]],["write"]]],[11,"reads","","",136,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",136,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"setup","","",134,[[["world"]]]],[11,"fetch","","",134,[[["world"]],["read"]]],[11,"reads","","",134,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",134,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"deref","","",134,[[["self"]],["t"]]],[11,"deref","","",136,[[["self"]],["t"]]],[11,"default","","",73,[[],["world"]]],[11,"from","","",136,[[["fetchmut"]],["write"]]],[11,"from","","",134,[[["fetch"]],["read"]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"drop","","",129,[[["self"]]]],[11,"eq","","",130,[[["handle"],["self"]],["bool"]]],[11,"clone","","",130,[[["self"]],["handle"]]],[11,"fmt","","",130,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",129,[[],["assetstorage"]]],[11,"hash","","",130,[[["__ha"],["self"]]]],[11,"add_to_entity","","",35,[[["self"],["entity"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",144,[[["__d"]],[["result",["transparent"]],["transparent"]]]],[11,"deserialize","","",99,[[["__d"]],[["camera"],["result",["camera"]]]]],[11,"eq","","",139,[[["self"],["spritesheet"]],["bool"]]],[11,"ne","","",139,[[["self"],["spritesheet"]],["bool"]]],[11,"eq","","",99,[[["self"],["camera"]],["bool"]]],[11,"ne","","",99,[[["self"],["camera"]],["bool"]]],[11,"eq","","",32,[[["spriterender"],["self"]],["bool"]]],[11,"ne","","",32,[[["spriterender"],["self"]],["bool"]]],[11,"add_to_entity","","",144,[[["entity"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",140,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",144,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",139,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",99,[[["self"]],["camera"]]],[11,"clone","","",32,[[["self"]],["spriterender"]]],[11,"clone","","",144,[[["self"]],["transparent"]]],[11,"clone","","",139,[[["self"]],["spritesheet"]]],[11,"serialize","","",144,[[["self"],["__s"]],["result"]]],[11,"serialize","","",99,[[["self"],["__s"]],["result"]]],[11,"default","","",144,[[],["transparent"]]],[11,"from","","",99,[[["projection"]],["camera"]]],[11,"fmt","","",138,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",138,[[],["inputhandler"]]],[11,"run","deathfloor::systems::prelude","",171,[[["self"]]]],[11,"fmt","","",171,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",171,[[],["cameraorthosystem"]]],[11,"eq","deathfloor::systems::system_prelude","",127,[[["queryvalueside"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["queryvaluestate"]],["bool"]]],[11,"eq","","",126,[[["queryexpression"],["self"]],["bool"]]],[11,"ne","","",126,[[["queryexpression"],["self"]],["bool"]]],[11,"clone","","",126,[[["self"]],["queryexpression"]]],[11,"clone","","",127,[[["self"]],["queryvalueside"]]],[11,"clone","","",128,[[["self"]],["queryvaluestate"]]],[11,"clone","deathfloor::components::prelude","",44,[[["self"]],["gravity"]]],[11,"clone","","",41,[[["self"]],["basefriction"]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deserialize","","",44,[[["__d"]],[["result",["gravity"]],["gravity"]]]],[11,"deserialize","deathfloor::systems::system_prelude","",128,[[["__d"]],[["queryvaluestate"],["result",["queryvaluestate"]]]]],[11,"deserialize","","",126,[[["__d"]],[["result",["queryexpression"]],["queryexpression"]]]],[11,"deserialize","deathfloor::components::prelude","",46,[[["__d"]],[["result",["solid"]],["solid"]]]],[11,"deserialize","","",47,[[["__d"]],[["velocity"],["result",["velocity"]]]]],[11,"deserialize","deathfloor::systems::system_prelude","",127,[[["__d"]],[["queryvalueside"],["result",["queryvalueside"]]]]],[11,"deserialize","deathfloor::components::prelude","",45,[[["__d"]],[["hitbox"],["result",["hitbox"]]]]],[11,"deserialize","","",41,[[["__d"]],[["basefriction"],["result",["basefriction"]]]]],[11,"into","","",45,[[],[["vec",["rect"]],["rect"]]]],[11,"run","deathfloor::systems::prelude","",177,[[["self"]]]],[11,"run","","",176,[[["self"]]]],[11,"run","","",122,[[["self"]]]],[11,"run","","",121,[[["self"]]]],[11,"default","deathfloor::components::prelude","",44,[[],["gravity"]]],[11,"default","","",47,[[],["velocity"]]],[11,"default","deathfloor::systems::prelude","",177,[[],["applygravitysystem"]]],[11,"default","","",122,[[],["updatecollisionssystem"]]],[11,"default","deathfloor::components::prelude","",41,[[],["basefriction"]]],[11,"default","deathfloor::systems::prelude","",121,[[],["moveentitiessystem"]]],[11,"default","","",176,[[],["applybasefrictionsystem"]]],[11,"default","deathfloor::components::prelude","",45,[[],["hitbox"]]],[11,"from","","",41,[[],["basefriction"]]],[11,"from","","",44,[[],["gravity"]]],[11,"from","","",47,[[],["velocity"]]],[11,"from","deathfloor::systems::system_prelude","",124,[[["collider"]],["filterquery"]]],[11,"from","","",125,[[["collider"]],["findquery"]]],[11,"from","deathfloor::components::prelude","",45,[[["vec",["rect"]],["rect"]],["hitbox"]]],[11,"hash","deathfloor::systems::system_prelude","",127,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"run","","",125,[[]]],[11,"run","","",124,[[]]],[11,"props","deathfloor::map_loader::map_data","",69,[[["self"]],["hashmap"]]],[11,"props","","",70,[[["self"]],["hashmap"]]],[11,"from","deathfloor::collision_tag::collision_tag","",2,[[["collisionlabel"]],["self"]]],[11,"from","","",2,[[["vec",["collisionlabel"]],["collisionlabel"]],["self"]]],[11,"from","","",2,[[["collisiontagwrapper"]],["self"]]],[11,"from","deathfloor::components::bullet","",5,[[["shooterbulletdata"]],["self"]]],[11,"from","deathfloor::components::enemy::enemy_type","",7,[[["string"]],["self"]]],[11,"from","","",7,[[["str"]],["self"]]],[11,"from","deathfloor::components::event_listener::actions::echo","",11,[[["string"]],["self"]]],[11,"from","deathfloor::components::event_listener::actions::group","",12,[[["actiontype"],["vec",["actiontype"]]],["self"]]],[11,"from","deathfloor::components::event_listener::actions::insert_components","",13,[[["enemycomponentsdata"]],["self"]]],[11,"from","deathfloor::components::event_listener::actions::move_action","",14,[[["moveactioncomp"]],["self"]]],[11,"from","deathfloor::components::event_listener::events_register","",20,[[["eventtype"],["actiontype"],["hashmap",["eventtype","actiontype"]]],["self"]]],[11,"from","deathfloor::components::shooter","",28,[[["shooterdata"]],["self"]]],[11,"from","deathfloor::input::ingame_bindings","",61,[[["a"]],["self"]]],[11,"from","deathfloor::settings::hitbox_config","",93,[[["hitbox"]],["self"]]],[11,"from","deathfloor::systems::control_player_shoot","",109,[[["transform"]],["self"]]],[11,"into","deathfloor::map_loader::map_data","",65,[[],["transform"]]],[11,"into","","",66,[[],["sizecomp"]]],[11,"into","deathfloor::settings","",84,[[],["sizecomp"]]],[11,"clone","deathfloor::animation_key","",0,[[["self"]],["animationkey"]]],[11,"clone","deathfloor::collision_tag::collision_label","",1,[[["self"]],["collisionlabel"]]],[11,"clone","deathfloor::collision_tag::collision_tag","",2,[[["self"]],["collisiontag"]]],[11,"clone","","",4,[[["self"]],["collisiontagwrapper"]]],[11,"clone","deathfloor::components::enemy::enemy_type","",7,[[["self"]],["enemytype"]]],[11,"clone","deathfloor::components::event_listener::actions::delay","",10,[[["self"]],["delay"]]],[11,"clone","deathfloor::components::event_listener::actions::echo","",11,[[["self"]],["echo"]]],[11,"clone","deathfloor::components::event_listener::actions::group","",12,[[["self"]],["group"]]],[11,"clone","deathfloor::components::event_listener::actions::insert_components","",13,[[["self"]],["insertcomponents"]]],[11,"clone","deathfloor::components::event_listener::actions::move_action","",14,[[["self"]],["moveaction"]]],[11,"clone","deathfloor::components::event_listener::actions::random","",15,[[["self"]],["random"]]],[11,"clone","deathfloor::components::event_listener::actions::repeat_delay","",16,[[["self"]],["repeatdelay"]]],[11,"clone","deathfloor::components::event_listener::actions","",9,[[["self"]],["actiontype"]]],[11,"clone","deathfloor::components::event_listener::action_trigger","",17,[[["self"]],["actiontrigger"]]],[11,"clone","deathfloor::components::event_listener::event_type","",19,[[["self"]],["eventtype"]]],[11,"clone","deathfloor::components::event_listener::events_register","",20,[[["self"]],["eventsregister"]]],[11,"clone","deathfloor::components::jumper","",21,[[["self"]],["jumper"]]],[11,"clone","deathfloor::components::jumppad","",22,[[["self"]],["jumppad"]]],[11,"clone","deathfloor::components::max_movement_velocity","",23,[[["self"]],["maxmovementvelocity"]]],[11,"clone","deathfloor::components::movable::move_action","",26,[[["self"]],["moveaction"]]],[11,"clone","deathfloor::components::physics_data","",27,[[["self"]],["physicsdata"]]],[11,"clone","deathfloor::components::walker","",29,[[["self"]],["walker"]]],[11,"clone","deathfloor::components::wall_jumper","",30,[[["self"]],["walljumper"]]],[11,"clone","deathfloor::components::wall_slider","",31,[[["self"]],["wallslider"]]],[11,"clone","deathfloor::input::ingame_bindings","",61,[[["self"]],["ingameaxisbinding"]]],[11,"clone","","",62,[[["self"]],["ingameactionbinding"]]],[11,"clone","deathfloor::input::paused_bindings","",63,[[["self"]],["pausedaxisbinding"]]],[11,"clone","","",64,[[["self"]],["pausedactionbinding"]]],[11,"clone","deathfloor::map_loader::map_data","",65,[[["self"]],["pos"]]],[11,"clone","","",66,[[["self"]],["size"]]],[11,"clone","deathfloor::map_loader::tiles::tile_type","",78,[[["self"]],["tiletype"]]],[11,"clone","deathfloor::settings::camera_settings","",85,[[["self"]],["camerasettings"]]],[11,"clone","deathfloor::settings::enemies_settings","",86,[[["self"]],["enemiessettings"]]],[11,"clone","","",87,[[["self"]],["enemysettings"]]],[11,"clone","","",88,[[["self"]],["enemycomponentsdata"]]],[11,"clone","deathfloor::settings::general_settings","",90,[[["self"]],["generalsettings"]]],[11,"clone","","",91,[[["self"]],["loadersystemsettings"]]],[11,"clone","","",92,[[["self"]],["debugsettings"]]],[11,"clone","deathfloor::settings::hitbox_config","",93,[[["self"]],["hitboxconfig"]]],[11,"clone","deathfloor::settings::player_settings","",94,[[["self"]],["playersettings"]]],[11,"clone","","",95,[[["self"]],["shooterdata"]]],[11,"clone","","",96,[[["self"]],["shooterbulletdata"]]],[11,"clone","deathfloor::settings::tiles_settings","",97,[[["self"]],["tilessettings"]]],[11,"clone","","",98,[[["self"]],["tilesettings"]]],[11,"clone","deathfloor::settings","",83,[[["self"]],["settings"]]],[11,"clone","","",84,[[["self"]],["sizesettings"]]],[11,"default","deathfloor::animation_key","",0,[[],["self"]]],[11,"default","deathfloor::collision_tag::collision_tag","",3,[[],["collisiontagbuilder"]]],[11,"default","deathfloor::components::bullet","",5,[[],["bullet"]]],[11,"default","deathfloor::components::event_listener::action_trigger","",17,[[],["self"]]],[11,"default","deathfloor::components::event_listener::action_type_trigger","",18,[[],["actiontypetrigger"]]],[11,"default","deathfloor::components::jumppad","",22,[[],["jumppad"]]],[11,"default","deathfloor::components::jumppad_affected","",141,[[],["jumppadaffected"]]],[11,"default","deathfloor::components::max_movement_velocity","",23,[[],["maxmovementvelocity"]]],[11,"default","","",24,[[],["maxmovementvelocitybuilder"]]],[11,"default","deathfloor::components::movable","",25,[[],["movable"]]],[11,"default","deathfloor::components::player","",142,[[],["player"]]],[11,"default","deathfloor::input::ingame_bindings","",147,[[],["ingamebindings"]]],[11,"default","","",61,[[],["self"]]],[11,"default","","",62,[[],["self"]]],[11,"default","deathfloor::input::paused_bindings","",148,[[],["pausedbindings"]]],[11,"default","","",63,[[],["self"]]],[11,"default","","",64,[[],["self"]]],[11,"default","deathfloor::map_loader::tiles::tile_type","",78,[[],["self"]]],[11,"default","deathfloor::resources::bullet_creator","",81,[[],["bulletcreator"]]],[11,"default","deathfloor::settings::tiles_settings","",98,[[],["tilesettings"]]],[11,"default","deathfloor::states::ingame","",150,[[],["ingame"]]],[11,"default","deathfloor::states::load_ingame","",151,[[],["loadingame"]]],[11,"default","deathfloor::states::paused","",152,[[],["paused"]]],[11,"default","deathfloor::states::startup","",153,[[],["startup"]]],[11,"default","deathfloor::states","",149,[[],["customdata"]]],[11,"default","deathfloor::systems::bullet_hit","",154,[[],["bullethitsystem"]]],[11,"default","deathfloor::systems::control_player","",155,[[],["controlplayersystem"]]],[11,"default","deathfloor::systems::control_player_jump","",106,[[],["querymatches"]]],[11,"default","","",107,[[],["controlplayerjumpsystem"]]],[11,"default","deathfloor::systems::control_player_shoot","",156,[[],["controlplayershootsystem"]]],[11,"default","deathfloor::systems::create_bullets","",157,[[],["createbulletssystem"]]],[11,"default","deathfloor::systems::delete_bullets","",158,[[],["deletebulletssystem"]]],[11,"default","deathfloor::systems::event_handlers::actions::delay","",112,[[],["handleactiondelay"]]],[11,"default","deathfloor::systems::event_handlers::actions::echo","",159,[[],["handleactionecho"]]],[11,"default","deathfloor::systems::event_handlers::actions::group","",160,[[],["handleactiongroup"]]],[11,"default","deathfloor::systems::event_handlers::actions::insert_components","",161,[[],["handleactioninsertcomponents"]]],[11,"default","deathfloor::systems::event_handlers::actions::move_action","",162,[[],["handleactionmoveaction"]]],[11,"default","deathfloor::systems::event_handlers::actions::random","",163,[[],["handleactionrandom"]]],[11,"default","deathfloor::systems::event_handlers::actions::repeat_delay","",114,[[],["handleactionrepeatdelay"]]],[11,"default","deathfloor::systems::event_handlers::bundle","",115,[[],["self"]]],[11,"default","deathfloor::systems::event_handlers::events::interval","",116,[[],["handleeventinterval"]]],[11,"default","deathfloor::systems::event_handlers::events::on_collision","",164,[[],["handleeventoncollision"]]],[11,"default","deathfloor::systems::event_handlers::events::on_spawn","",117,[[],["handleeventonspawn"]]],[11,"default","deathfloor::systems::event_handlers::trigger_actions_from_action_types","",165,[[],["triggeractionsfromactiontypessystem"]]],[11,"default","deathfloor::systems::handle_animations","",166,[[],["handleanimationssystem"]]],[11,"default","deathfloor::systems::handle_jumppad_affected","",167,[[],["handlejumppadaffectedsystem"]]],[11,"default","deathfloor::systems::handle_movables","",168,[[],["handlemovablessystem"]]],[11,"default","deathfloor::systems::handle_scales","",169,[[],["handlescalessystem"]]],[11,"default","deathfloor::systems::handle_walkers","",170,[[],["handlewalkerssystem"]]],[11,"eq","deathfloor::animation_key","",0,[[["self"],["animationkey"]],["bool"]]],[11,"eq","deathfloor::collision_tag::collision_label","",1,[[["collisionlabel"],["self"]],["bool"]]],[11,"eq","deathfloor::collision_tag::collision_tag","",2,[[["self"]],["bool"]]],[11,"eq","deathfloor::components::enemy::enemy_type","",7,[[["enemytype"],["self"]],["bool"]]],[11,"ne","","",7,[[["enemytype"],["self"]],["bool"]]],[11,"eq","deathfloor::components::event_listener::event_type","",19,[[["self"],["eventtype"]],["bool"]]],[11,"ne","","",19,[[["self"],["eventtype"]],["bool"]]],[11,"eq","deathfloor::dispatcher_id","",60,[[["dispatcherid"],["self"]],["bool"]]],[11,"eq","deathfloor::input::ingame_bindings","",147,[[["self"],["ingamebindings"]],["bool"]]],[11,"eq","","",61,[[["ingameaxisbinding"],["self"]],["bool"]]],[11,"eq","","",62,[[["self"],["ingameactionbinding"]],["bool"]]],[11,"eq","deathfloor::input::paused_bindings","",148,[[["pausedbindings"],["self"]],["bool"]]],[11,"eq","","",63,[[["pausedaxisbinding"],["self"]],["bool"]]],[11,"eq","","",64,[[["pausedactionbinding"],["self"]],["bool"]]],[11,"eq","deathfloor::map_loader::tiles::tile_type","",78,[[["self"],["tiletype"]],["bool"]]],[11,"eq","deathfloor::systems::control_player_jump","",108,[[["self"],["targetgravity"]],["bool"]]],[11,"fmt","deathfloor::animation_key","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::components::enemy::enemy_type","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::dispatcher_id","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::input::ingame_bindings","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::input::paused_bindings","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::map_loader::map_data","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::map_loader::objects::object_type","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::map_loader::tiles::tile_type","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::systems::control_player_jump","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::components::enemy::enemy_type","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::components::event_listener::actions::echo","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::input::ingame_bindings","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","deathfloor::input::paused_bindings","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"hash","deathfloor::animation_key","",0,[[["self"],["__h"]]]],[11,"hash","deathfloor::collision_tag::collision_label","",1,[[["self"],["__h"]]]],[11,"hash","deathfloor::collision_tag::collision_tag","",2,[[["self"],["__h"]]]],[11,"hash","deathfloor::components::enemy::enemy_type","",7,[[["self"],["__h"]]]],[11,"hash","deathfloor::components::event_listener::event_type","",19,[[["self"],["__h"]]]],[11,"hash","deathfloor::dispatcher_id","",60,[[["self"],["__h"]]]],[11,"hash","deathfloor::input::ingame_bindings","",147,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","deathfloor::input::paused_bindings","",148,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","deathfloor::map_loader::tiles::tile_type","",78,[[["self"],["__h"]]]],[11,"try_from","deathfloor::settings::tiles_settings","",98,[[["hashmap"]],["result"]]],[11,"serialize","deathfloor::input::ingame_bindings","",61,[[["self"],["__s"]],["result"]]],[11,"serialize","","",62,[[["self"],["__s"]],["result"]]],[11,"serialize","deathfloor::input::paused_bindings","",63,[[["self"],["__s"]],["result"]]],[11,"serialize","","",64,[[["self"],["__s"]],["result"]]],[11,"deserialize","deathfloor::animation_key","",0,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::collision_tag::collision_label","",1,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::collision_tag::collision_tag","",2,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::enemy::enemy_type","",7,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::delay","",10,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::echo","",11,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::group","",12,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::insert_components","",13,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::move_action","",14,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::random","",15,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions::repeat_delay","",16,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::actions","",9,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::action_trigger","",17,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::event_type","",19,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::event_listener::events_register","",20,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::jumper","",21,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::jumppad","",22,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::max_movement_velocity","",23,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::movable::move_action","",26,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::physics_data","",27,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::walker","",29,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::wall_jumper","",30,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::components::wall_slider","",31,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::input::ingame_bindings","",61,[[["__d"]],["result"]]],[11,"deserialize","","",62,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::input::paused_bindings","",63,[[["__d"]],["result"]]],[11,"deserialize","","",64,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::map_loader::map_data","",65,[[["__d"]],["result"]]],[11,"deserialize","","",66,[[["__d"]],["result"]]],[11,"deserialize","","",67,[[["__d"]],["result"]]],[11,"deserialize","","",68,[[["__d"]],["result"]]],[11,"deserialize","","",69,[[["__d"]],["result"]]],[11,"deserialize","","",70,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::map_loader::objects::object_type","",77,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::map_loader::tiles::tile_type","",78,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings::camera_settings","",85,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings::enemies_settings","",86,[[["__d"]],["result"]]],[11,"deserialize","","",87,[[["__d"]],["result"]]],[11,"deserialize","","",88,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings::general_settings","",90,[[["__d"]],["result"]]],[11,"deserialize","","",91,[[["__d"]],["result"]]],[11,"deserialize","","",92,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings::hitbox_config","",93,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings::player_settings","",94,[[["__d"]],["result"]]],[11,"deserialize","","",95,[[["__d"]],["result"]]],[11,"deserialize","","",96,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings::tiles_settings","",97,[[["__d"]],["result"]]],[11,"deserialize","","",98,[[["__d"]],["result"]]],[11,"deserialize","deathfloor::settings","",83,[[["__d"]],["result"]]],[11,"deserialize","","",84,[[["__d"]],["result"]]],[11,"build","deathfloor::systems::event_handlers::bundle","",115,[[["world"],["dispatcherbuilder"]],[["result",["error"]],["error"]]]],[11,"on_start","deathfloor::states::ingame","",150,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]]]],[11,"on_stop","","",150,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]]]],[11,"update","","",150,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]],[["trans",["customgamedata","stateevent"]],["stateevent"],["customgamedata",["dispatcherid","customdata"]]]]],[11,"on_start","deathfloor::states::load_ingame","",151,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]]]],[11,"update","","",151,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]],[["trans",["customgamedata","stateevent"]],["stateevent"],["customgamedata",["dispatcherid","customdata"]]]]],[11,"update","deathfloor::states::paused","",152,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]],[["trans",["customgamedata","stateevent"]],["stateevent"],["customgamedata",["dispatcherid","customdata"]]]]],[11,"on_start","deathfloor::states::startup","",153,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]]]],[11,"update","","",153,[[["self"],["customgamedata",["dispatcherid","customdata"]],["statedata",["customgamedata"]]],[["trans",["customgamedata","stateevent"]],["stateevent"],["customgamedata",["dispatcherid","customdata"]]]]],[11,"run","deathfloor::systems::bullet_hit","",154,[[["self"]]]],[11,"run","deathfloor::systems::control_player","",155,[[["self"]]]],[11,"run","deathfloor::systems::control_player_jump","",107,[[["self"]]]],[11,"run","deathfloor::systems::control_player_shoot","",156,[[["self"]]]],[11,"run","deathfloor::systems::create_bullets","",157,[[["self"]]]],[11,"run","deathfloor::systems::delete_bullets","",158,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::delay","",112,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::echo","",159,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::group","",160,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::insert_components","",161,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::move_action","",162,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::random","",163,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::actions::repeat_delay","",114,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::events::interval","",116,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::events::on_collision","",164,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::events::on_spawn","",117,[[["self"]]]],[11,"run","deathfloor::systems::event_handlers::trigger_actions_from_action_types","",165,[[["self"]]]],[11,"run","deathfloor::systems::handle_animations","",166,[[["self"]]]],[11,"run","deathfloor::systems::handle_jumppad_affected","",167,[[["self"]]]],[11,"run","deathfloor::systems::handle_movables","",168,[[["self"]]]],[11,"run","deathfloor::systems::handle_scales","",169,[[["self"]]]],[11,"run","deathfloor::systems::handle_walkers","",170,[[["self"]]]],[11,"setup","deathfloor::components::event_listener::actions","",8,[[["world"]]]],[11,"fetch","","",8,[[["world"]],["self"]]],[11,"reads","","",8,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",8,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"setup","deathfloor::settings::enemies_settings","",89,[[["world"]]]],[11,"fetch","","",89,[[["world"]],["self"]]],[11,"reads","","",89,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",89,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"setup","deathfloor::systems::create_bullets","",110,[[["world"]]]],[11,"fetch","","",110,[[["world"]],["self"]]],[11,"reads","","",110,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",110,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"collides_with","deathfloor::collision_tag::collision_tag","",2,[[["self"]],["bool"]]],[11,"play_cycle","deathfloor::components::prelude","Play the animation endlessly.",33,[[["self"]]]],[11,"play_once","","Play the animation once.",33,[[["self"]]]],[11,"current_sprite_id","","Returns the sprite ID of the current frame of animation,…",33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"builder","","Returns an `AnimationsContainerBuilder`",34,[[],["animationscontainerbuilder"]]],[11,"play","","Play the animation with the given key. Returns an Error if…",34,[[["self"],["k"]],[["result",["string"]],["string"]]]],[11,"current","","Returns the key of the currently active animation, if any.",34,[[["self"]],[["k"],["option"]]]],[11,"animation","","Returns a new `Animation` associated to the given key, if…",34,[[["k"],["self"]],[["option",["animation"]],["animation"]]]],[11,"current_animation","","Returns a new `Animation`, for the current animation key,…",34,[[["self"]],[["option",["animation"]],["animation"]]]],[11,"new","deathfloor::systems::system_prelude","Create a new Transform.",35,[[["matrix",["u3","u1"]],["quaternion"],["unit",["quaternion"]],["u1"],["u3"],["translation",["u3"]]],["transform"]]],[11,"set_scale","","Set the scaling factor of this transform.",35,[[["matrix",["u3","u1"]],["u1"],["self"],["u3"]]]],[11,"face_towards","","Makes the entity point towards `target`.",35,[[["matrix",["u3","u1"]],["u1"],["self"],["u3"]],["transform"]]],[11,"matrix","","Returns the local object matrix for the transform.",35,[[["self"]],[["f32"],["matrix",["f32","u4","u4"]],["u4"]]]],[11,"translation","","Returns a reference to the translation vector.",35,[[["self"]],["matrix"]]],[11,"translation_mut","","Returns a mutable reference to the translation vector.",35,[[["self"]],["matrix"]]],[11,"rotation","","Returns a reference to the rotation quaternion.",35,[[["self"]],["unit"]]],[11,"rotation_mut","","Returns a mutable reference to the rotation quaternion.",35,[[["self"]],["unit"]]],[11,"prepend_translation","","Move relatively to its current position, but the parent's…",35,[[["f32"],["u1"],["self"],["u3"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"append_translation","","Move relatively to its current position and orientation.",35,[[["f32"],["u1"],["self"],["u3"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"prepend_translation_along","","Move a distance along an axis relative to the parent's…",35,[[["f32"],["unit",["matrix"]],["self"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"append_translation_along","","Move a distance along an axis relative to the local…",35,[[["f32"],["unit",["matrix"]],["self"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"move_forward","","Move forward relative to current position and orientation.",35,[[["f32"],["self"]],["transform"]]],[11,"move_backward","","Move backward relative to current position and orientation.",35,[[["f32"],["self"]],["transform"]]],[11,"move_right","","Move right relative to current position and orientation.",35,[[["f32"],["self"]],["transform"]]],[11,"move_left","","Move left relative to current position and orientation.",35,[[["f32"],["self"]],["transform"]]],[11,"move_up","","Move up relative to current position and orientation.",35,[[["f32"],["self"]],["transform"]]],[11,"move_down","","Move down relative to current position and orientation.",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_translation_x","","Adds the specified amount to the translation vector's x…",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_translation_y","","Adds the specified amount to the translation vector's y…",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_translation_z","","Adds the specified amount to the translation vector's z…",35,[[["f32"],["self"]],["transform"]]],[11,"set_translation_x","","Sets the translation vector's x component to the specified…",35,[[["f32"],["self"]],["transform"]]],[11,"set_translation_y","","Sets the translation vector's y component to the specified…",35,[[["f32"],["self"]],["transform"]]],[11,"set_translation_z","","Sets the translation vector's z component to the specified…",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation_x_axis","","Premultiply a rotation about the x axis, i.e. perform a…",35,[[["f32"],["self"]],["transform"]]],[11,"append_rotation_x_axis","","Postmultiply a rotation about the x axis, i.e. perform a…",35,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_x_axis","","Set the rotation about the parent's x axis (or the global…",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation_y_axis","","Premultiply a rotation about the y axis, i.e. perform a…",35,[[["f32"],["self"]],["transform"]]],[11,"append_rotation_y_axis","","Postmultiply a rotation about the y axis, i.e. perform a…",35,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_y_axis","","Set the rotation about the parent's y axis (or the global…",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation_z_axis","","Premultiply a rotation about the z axis, i.e. perform a…",35,[[["f32"],["self"]],["transform"]]],[11,"append_rotation_z_axis","","Postmultiply a rotation about the z axis, i.e. perform a…",35,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_z_axis","","Set the rotation about the parent's z axis (or the global…",35,[[["f32"],["self"]],["transform"]]],[11,"rotate_2d","","Perform a rotation about the axis perpendicular to X and…",35,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_2d","","Set the rotation about the axis perpendicular to X and Y,…",35,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation","","Premultiply a rotation, i.e. rotate relatively to the…",35,[[["f32"],["unit",["matrix"]],["self"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"append_rotation","","Postmultiply a rotation, i.e. rotate relatively to the…",35,[[["f32"],["unit",["matrix"]],["self"],["matrix",["f32","u3","u1"]]],["transform"]]],[11,"set_translation","","Set the position.",35,[[["matrix",["u3","u1"]],["u1"],["self"],["u3"]],["transform"]]],[11,"append_translation_xyz","","Adds the specified amounts to the translation vector.",35,[[["f32"],["self"]],["transform"]]],[11,"set_translation_xyz","","Sets the specified values of the translation vector.",35,[[["f32"],["self"]],["transform"]]],[11,"set_rotation","","Sets the rotation of the transform.",35,[[["self"],["quaternion"],["unit",["quaternion"]]],["transform"]]],[11,"set_rotation_euler","","Set the rotation using x, y, z Euler axes.",35,[[["f32"],["self"]],["transform"]]],[11,"euler_angles","","Get the Euler angles of the current rotation. Returns in a…",35,[[["self"]]]],[11,"concat","","Concatenates another transform onto `self`.",35,[[["self"],["transform"]],["transform"]]],[11,"is_finite","","Verifies that the global `Matrix4` doesn't contain any NaN…",35,[[["self"]],["bool"]]],[11,"view_matrix","","Calculates the inverse of this transform, which is in…",35,[[["self"]],[["f32"],["matrix",["f32","u4","u4"]],["u4"]]]],[11,"global_view_matrix","","Calculates the inverse of this transform, which is in…",35,[[["self"]],[["f32"],["matrix",["f32","u4","u4"]],["u4"]]]],[11,"copy_local_to_global","","This function allows for test cases of copying the local…",35,[[["self"]]]],[11,"isometry_mut","","Translation + rotation value",35,[[["self"]],["isometry"]]],[11,"scale_mut","","Scale vector",35,[[["self"]],["matrix"]]],[11,"set_isometry","","Translation + rotation value",35,[[["f32"],["unit",["quaternion"]],["self"],["u3"],["isometry",["f32","u3","unit"]]],["transform"]]],[11,"isometry","","Translation + rotation value",35,[[["self"]],["isometry"]]],[11,"scale","","Scale vector",35,[[["self"]],["matrix"]]],[11,"global_matrix","","The global transformation matrix.",35,[[["self"]],["matrix"]]],[11,"builder","","",36,[[],["confinedbuilder"]]],[11,"new","","Creates a new `Follow` component, which should follow the…",37,[[["entity"]],["follow"]]],[11,"with_priority","","Set a custom priority for this follower. Entities with…",37,[[["i32"]],["follow"]]],[11,"with_padding","","",38,[[],["loadable"]]],[11,"new","","Create a new `Loader` with the given `x` and `y` loading…",39,[[["f32"]],["loader"]]],[11,"new","","",40,[[["f32"]],["size"]]],[11,"half","","Returns a new `Size` with the width and height fields the…",40,[[["self"]],["size"]]],[11,"builder","deathfloor::components::prelude","Create a new `BaseFrictionBuilder`",41,[[],["basefrictionbuilder"]]],[11,"new","","Create a new `BaseFriction` component with the given…",41,[[["f32"],["option",["f32"]]],["basefriction"]]],[11,"set_enabled","","Set the enabled state for the given `Axis` of this…",41,[[["bool"],["self"],["axis"]]]],[11,"new","","",42,[[["t"]],["collidable"]]],[11,"new","","",43,[[["c"]],["collider"]]],[11,"query","","Returns a `Query` type for this collider.",43,[[["self"]],["q"]]],[11,"builder","","Creates a new `GravityBuilder`.",44,[[],["gravitybuilder"]]],[11,"set","","Set the gravity strength for the given `Axis` to the given…",44,[[["f32"],["self"],["axis"]]]],[11,"get","","Returns the gravity strength of the given `Axis`.",44,[[["self"],["axis"]],[["f32"],["option",["f32"]]]]],[11,"new","","",45,[[],["hitbox"]]],[11,"with_rect","","",45,[[["rect"]],["hitbox"]]],[11,"with_rects","","",45,[[["vec",["rect"]],["rect"]],["hitbox"]]],[11,"add_rect","","",45,[[["self"],["rect"]]]],[11,"new","","",46,[[["c"]],["solid"]]],[11,"new","","Creates a new `Velocity` with the given initial `x` and…",47,[[["f32"]],["velocity"]]],[11,"builder","","Creates a new `VelocityBuilder`.",47,[[],["velocitybuilder"]]],[11,"get","","Get the current velocity for the given `Axis`.",47,[[["self"],["axis"]],["f32"]]],[11,"set","","Set the velocity for the given `Axis` to the given value.",47,[[["f32"],["self"],["axis"]]]],[11,"set_with_max","","Set the velocity for the given `Axis`, to the given value,…",47,[[["f32"],["axis"],["self"]]]],[11,"increase","","Increase the velocity for the given `Axis`, by the given…",47,[[["f32"],["self"],["axis"]]]],[11,"increase_with_max","","Increase the velocity for the given `Axis`, by the given…",47,[[["f32"],["axis"],["self"]]]],[11,"clear","","Clear the velocity of the given axis.",47,[[["self"],["axis"]]]],[11,"clear_all","","Clear both velocity axes.",47,[[["self"]]]],[11,"id","deathfloor::systems::system_prelude","Returns the index of the `Entity`.",50,[[],["u32"]]],[11,"gen","","Returns the `Generation` of the `Entity`.",50,[[],["generation"]]],[11,"entry","","Returns an entry to the component associated to the entity.",53,[[["self"],["entity"]],[["wronggeneration"],["result",["storageentry","wronggeneration"]],["storageentry"]]]],[11,"entries","","Returns a `Join`-able structure that yields all indices,…",53,[[["self"]],["entries"]]],[11,"restrict","","Builds an immutable `RestrictedStorage` out of a…",53,[[["self"]],[["bitset"],["restrictedstorage",["bitset","immutableparallelrestriction"]],["immutableparallelrestriction"]]]],[11,"restrict_mut","","Builds a mutable `RestrictedStorage` out of a `Storage`.…",53,[[["self"]],[["restrictedstorage",["bitset","sequentialrestriction"]],["bitset"],["sequentialrestriction"]]]],[11,"par_restrict_mut","","Builds a mutable, parallel `RestrictedStorage`, does not…",53,[[["self"]],[["bitset"],["mutableparallelrestriction"],["restrictedstorage",["bitset","mutableparallelrestriction"]]]]],[11,"channel","","Returns the event channel tracking modified components.",53,[[["self"]],["eventchannel"]]],[11,"channel_mut","","Returns the event channel for…",53,[[["self"]],["eventchannel"]]],[11,"register_reader","","Starts tracking component events. Note that this reader id…",53,[[["self"]],[["componentevent"],["readerid",["componentevent"]]]]],[11,"flag","","Flags an index with a `ComponentEvent`.",53,[[["componentevent"],["self"]]]],[11,"new","","Creates a new `Storage` from a fetched allocator and a…",53,[[["fetch",["entitiesres"]],["d"],["entitiesres"]],["storage"]]],[11,"unprotected_storage","","Gets the wrapped storage.",53,[[["self"]]]],[11,"fetched_entities","","Returns the `EntitiesRes` resource fetched by this…",53,[[["self"]],["entitiesres"]]],[11,"get","","Tries to read the data associated with an `Entity`.",53,[[["self"],["entity"]],[["t"],["option"]]]],[11,"count","","Computes the number of elements this `Storage` contains by…",53,[[["self"]],["usize"]]],[11,"is_empty","","Checks whether this `Storage` is empty. This operation is…",53,[[["self"]],["bool"]]],[11,"contains","","Returns true if the storage has a component for this…",53,[[["self"],["entity"]],["bool"]]],[11,"mask","","Returns a reference to the bitset of this storage which…",53,[[["self"]],["bitset"]]],[11,"unprotected_storage_mut","","Gets mutable access to the wrapped storage.",53,[[["self"]]]],[11,"get_mut","","Tries to mutate the data associated with an `Entity`.",53,[[["self"],["entity"]],[["option"],["t"]]]],[11,"insert","","Inserts new data for a given `Entity`. Returns the result…",53,[[["self"],["entity"],["t"]],[["error"],["option"],["result",["option","error"]]]]],[11,"remove","","Removes the data associated with an `Entity`.",53,[[["self"],["entity"]],["option"]]],[11,"clear","","Clears the contents of the storage.",53,[[["self"]]]],[11,"drain","","Creates a draining storage wrapper which can be `.join`ed…",53,[[["self"]],["drain"]]],[11,"for_each","","This iterator-like method simply executes the passed…",56,[[["c"]]]],[11,"iter","","Returns an `Iterator` over both axes.",56,[[],["iter"]]],[11,"is_x","","Returns `true` if this is the `X` variant.",56,[[["self"]],["bool"]]],[11,"is_y","","Returns `true` if this is the `Y` variant.",56,[[["self"]],["bool"]]],[11,"builder","","Returns a new `RectBuilder`.",58,[[],["rectbuilder"]]],[11,"with_offset","","Offsets all sides by the given `Point`.",58,[[["point"]],["rect"]]],[11,"with_padding","","Adds a padding to all sides. Subtracts/adds the `Point`'s…",58,[[["point"]],["rect"]]],[11,"top","","",59,[[["f32"]],["rectbuilder"]]],[11,"bottom","","",59,[[["f32"]],["rectbuilder"]]],[11,"left","","",59,[[["f32"]],["rectbuilder"]]],[11,"right","","",59,[[["f32"]],["rectbuilder"]]],[11,"build","","Builds a new `Rect`.",59,[[],[["rect"],["result",["rect","string"]],["string"]]]],[11,"empty","","Creates a new, empty resource container.",73,[[],["world"]]],[11,"insert","","Inserts a resource into this container. If the resource…",73,[[["self"],["r"]]]],[11,"remove","","Removes a resource of type `R` from the `World` and…",73,[[["self"]],["option"]]],[11,"has_value","","Returns true if the specified resource type `R` exists in…",73,[[["self"]],["bool"]]],[11,"has_value_raw","","Returns true if the specified resource type exists in…",73,[[["resourceid"],["self"]],["bool"]]],[11,"entry","","Returns an entry for the resource with type `R`.",73,[[["self"]],["entry"]]],[11,"system_data","","Gets `SystemData` `T` from the `World`. This can be used…",73,[[["self"]],["t"]]],[11,"setup","","Sets up system data `T` for fetching afterwards.",73,[[["self"]]]],[11,"exec","","Executes `f` once, right now and with the specified system…",73,[[["self"],["f"]],["r"]]],[11,"fetch","","Fetches the resource with the specified type `T` or panics…",73,[[["self"]],["fetch"]]],[11,"try_fetch","","Like `fetch`, but returns an `Option` instead of inserting…",73,[[["self"]],[["option",["fetch"]],["fetch"]]]],[11,"try_fetch_by_id","","Like `try_fetch`, but fetches the resource by its…",73,[[["resourceid"],["self"]],[["option",["fetch"]],["fetch"]]]],[11,"fetch_mut","","Fetches the resource with the specified type `T` mutably.",73,[[["self"]],["fetchmut"]]],[11,"try_fetch_mut","","Like `fetch_mut`, but returns an `Option` instead of…",73,[[["self"]],[["option",["fetchmut"]],["fetchmut"]]]],[11,"try_fetch_mut_by_id","","Like `try_fetch_mut`, but fetches the resource by its…",73,[[["resourceid"],["self"]],[["option",["fetchmut"]],["fetchmut"]]]],[11,"insert_by_id","","Internal function for inserting resources, should only be…",73,[[["resourceid"],["self"],["r"]]]],[11,"remove_by_id","","Internal function for removing resources, should only be…",73,[[["resourceid"],["self"]],["option"]]],[11,"try_fetch_internal","","Internal function for fetching resources, should only be…",73,[[["resourceid"],["self"]],[["option",["trustcell"]],["trustcell"]]]],[11,"get_mut","","Retrieves a resource without fetching, which is cheaper,…",73,[[["self"]],[["option"],["t"]]]],[11,"get_mut_raw","","Retrieves a resource without fetching, which is cheaper,…",73,[[["resourceid"],["self"]],[["resource"],["option",["resource"]]]]],[11,"insert","","Insert a new `SpriteSheetHandle` with an identifier name…",76,[[["spritesheet"],["handle",["spritesheet"]],["self"],["k"]]]],[11,"get","","Get the `SpriteSheetHandle` with the given identifier…",76,[[["k"],["self"]],[["option",["handle"]],["handle",["spritesheet"]]]]],[11,"load","","Load a new `SpriteSheet` and `SpriteSheetHandle` into this…",76,[[["world"],["self"],["p"]]]],[11,"get_or_load","","Get a `SpriteSheetHandle` with the given path to the…",76,[[["world"],["self"],["p"]],[["spritesheet"],["handle",["spritesheet"]]]]],[11,"has_finished_loading_all","","Returns `true` if all `SpriteSheetHandle`s' textures have…",76,[[["self"],["world"]],["bool"]]],[11,"with_priority","","Which `InsertionAction` to prioritize. So if the `Insert`…",79,[[["insertionaction"]],["entitycomponentinserter"]]],[11,"with_cache","","If caching logic should be used. The caching is pretty…",79,[[["bool"]],["entitycomponentinserter"]]],[11,"insert","","Stage the given entity for insertion. So on `run`, the…",79,[[["self"],["entity"]]]],[11,"remove","","Stage the given entity for removal. So on `run`, the given…",79,[[["self"],["entity"]]]],[11,"run","","Run all `InsertionAction`s at once. When inserting,…",79,[[["storage"],["self"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new `InputManager`.",80,[[],["inputmanager"]]],[11,"is_down","","Returns `true` if the action with the given name was…",80,[[["self"]],["bool"]]],[11,"is_up","","Returns `true` if the action with the given name was…",80,[[["self"]],["bool"]]],[11,"is_pressed","","Returns `true` if the action with the given name is being…",80,[[["self"]],["bool"]]],[11,"axis_value","","Behaves identically to…",80,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"axis_value_find","","Similar to `axis_value`, but instead of passing a specific…",80,[[["self"],["f"]],[["f32"],["option",["f32"]]]]],[11,"update","","This method is called every frame, by the…",80,[[["self"],["inputhandler"]]]],[11,"standard_2d","","Create a normalized camera for 2D.",99,[[["f32"]],["camera"]]],[11,"standard_3d","","Create a standard camera for 3D.",99,[[["f32"]],["camera"]]],[11,"custom_matrix","","Creates a `Projection::CustomMatrix` with the matrix…",99,[[["f32"],["matrix",["f32","u4","u4"]],["u4"]],["camera"]]],[11,"as_matrix","","Returns a reference to the inner `Projection` matrix of…",99,[[["self"]],["matrix"]]],[11,"as_inverse_matrix","","Returns a reference to the inverted `Projection` matrix of…",99,[[["self"]],["matrix"]]],[11,"projection","","Returns a reference to the inner [Projection] of this…",99,[[["self"]],["projection"]]],[11,"projection_mut","","Returns a mutable reference to the inner [Projection] of…",99,[[["self"]],["projection"]]],[11,"set_projection","","Sets the inner [Projection] of this camera.",99,[[["self"],["projection"]]]],[11,"new","deathfloor::states::state_prelude","Create a new state data",101,[[["t"],["world"]],["statedata"]]],[11,"builder","","Returns a new `CustomGameDataBuilder` instance.",104,[[],["customgamedatabuilder"]]],[11,"update","","",104,[[["self"],["d"],["world"]],[["error"],["result",["error"]]]]],[11,"update_core","","",104,[[["self"],["world"]]]],[11,"dispatcher","","Initialize a new dispatcher with the given name.",105,[[["d"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"custom","","Store some optional custom data.",105,[[["c"]],["customgamedatabuilder"]]],[11,"with_core_bundle","","Register a bundle for the core dispatcher.",105,[[["b"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"with_bundle","","Register a bundle for the given dispatcher.",105,[[["d"],["b"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"with_core","","Register a system for the core dispatcher. Returns `Self`…",105,[[["str"],["s"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"with","","Register a system for the given dispatcher.",105,[[["str"],["d"],["s"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"with_core_desc","","Register a system description for the core dispatcher.",105,[[["str"],["sd"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"with_desc","","Register a system description for the given dispatcher.",105,[[["str"],["d"],["sd"]],[["error"],["result",["customgamedatabuilder","error"]],["customgamedatabuilder"]]]],[11,"with_cache","deathfloor::systems::prelude","",119,[[["bool"]],["entityloadersystem"]]],[11,"exp","deathfloor::systems::system_prelude","Use the given `QueryExpression` to match collisions when…",124,[[["queryexpression"]],["filterquery"]]],[11,"filter_ids","","If given, only match collisions for entities that have one…",124,[[["u32"],["vec",["u32"]]],["filterquery"]]],[11,"exp","","Use the given `QueryExpression` to match collisions when…",125,[[["queryexpression"]],["findquery"]]],[11,"filter_ids","","If given, only match collisions for entities that have one…",125,[[["u32"],["vec",["u32"]]],["findquery"]]],[11,"new","","Creates a new asset storage.",129,[[],["assetstorage"]]],[11,"unload_all","","Remove all data from asset storages, invalidating all…",129,[[["self"]]]],[11,"clone_asset","","When cloning an asset handle, you'll get another handle,…",129,[[["self"],["handle"]],[["handle"],["option",["handle"]]]]],[11,"get","","Get an asset from a given asset handle.",129,[[["handle"],["self"]],[["option"],["a"]]]],[11,"get_version","","Get an asset version from a given asset handle.",129,[[["handle"],["self"]],[["option",["u32"]],["u32"]]]],[11,"get_with_version","","Get an asset and it's version from a given asset handle.",129,[[["handle"],["self"]],["option"]]],[11,"get_by_id","","Get an asset by it's handle id.",129,[[["u32"],["self"]],[["option"],["a"]]]],[11,"replace","","Replace asset under given handle, incrementing the version…",129,[[["a"],["self"],["handle"]],["a"]]],[11,"insert","","Insert preloaded asset into storage synchronously without…",129,[[["a"],["self"]],["handle"]]],[11,"contains","","Check if given handle points to a valid asset in the…",129,[[["handle"],["self"]],["bool"]]],[11,"contains_id","","Check if given asset id points to a valid asset in the…",129,[[["u32"],["self"]],["bool"]]],[11,"get_by_id_unchecked","","Get an asset by it's handle id without checking the…",129,[[["u32"],["self"]],["a"]]],[11,"get_mut","","Get an asset mutably from a given asset handle.",129,[[["self"],["handle"]],[["a"],["option"]]]],[11,"process","","Process finished asset data and maintain the storage.",129,[[["threadpool"],["hotreloadstrategy"],["option",["hotreloadstrategy"]],["self"],["f"],["u64"]]]],[11,"process_custom_drop","","Process finished asset data and maintain the storage. This…",129,[[["u64"],["threadpool"],["hotreloadstrategy"],["option",["hotreloadstrategy"]],["self"],["f"],["d"]]]],[11,"id","","Return the 32 bit id of this handle.",130,[[["self"]],["u32"]]],[11,"downgrade","","Downgrades the handle and creates a `WeakHandle`.",130,[[["self"]],["weakhandle"]]],[11,"delta_seconds","","Gets the time difference between frames in seconds.",131,[[["self"]],["f32"]]],[11,"delta_time","","Gets the time difference between frames.",131,[[["self"]],["duration"]]],[11,"delta_real_seconds","","Gets the time difference between frames in seconds…",131,[[["self"]],["f32"]]],[11,"delta_real_time","","Gets the time difference between frames ignoring the time…",131,[[["self"]],["duration"]]],[11,"fixed_seconds","","Gets the fixed time step in seconds.",131,[[["self"]],["f32"]]],[11,"fixed_time","","Gets the fixed time step.",131,[[["self"]],["duration"]]],[11,"frame_number","","Gets the current frame number. This increments by 1 every…",131,[[["self"]],["u64"]]],[11,"absolute_time","","Gets the time since the start of the game, taking into…",131,[[["self"]],["duration"]]],[11,"absolute_time_seconds","","Gets the time since the start of the game as seconds,…",131,[[["self"]],["f64"]]],[11,"absolute_real_time","","Gets the time since the start of the game, ignoring the…",131,[[["self"]],["duration"]]],[11,"absolute_real_time_seconds","","Gets the time since the start of the game as seconds,…",131,[[["self"]],["f64"]]],[11,"time_scale","","Gets the current time speed multiplier.",131,[[["self"]],["f32"]]],[11,"interpolation_alpha","","Gets the current interpolation alpha factor.",131,[[["self"]],["f32"]]],[11,"set_delta_seconds","","Gets the total number of frames that have been played in…",131,[[["f32"],["self"]]]],[11,"set_delta_time","","Sets both `delta_time` and `delta_seconds` based on the…",131,[[["self"],["duration"]]]],[11,"set_fixed_seconds","","Sets both `fixed_seconds` and `fixed_time` based on the…",131,[[["f32"],["self"]]]],[11,"set_fixed_time","","Sets both `fixed_time` and `fixed_seconds` based on the…",131,[[["self"],["duration"]]]],[11,"increment_frame_number","","Increments the current frame number by 1.",131,[[["self"]]]],[11,"set_time_scale","","Sets the time multiplier that affects how time values are…",131,[[["f32"],["self"]]]],[11,"start_fixed_update","","Restarts the internal fixed update accumulator to the…",131,[[["self"]]]],[11,"step_fixed_update","","Checks to see if we should perform another fixed update…",131,[[["self"]],["bool"]]],[11,"finish_fixed_update","","Updates the interpolation alpha factor given the current…",131,[[["self"]]]],[11,"new","","Creates a new resource id from a given type.",132,[[],["resourceid"]]],[11,"from_type_id","","Create a new resource id from a raw type ID.",132,[[["typeid"]],["resourceid"]]],[11,"new_with_dynamic_id","","Creates a new resource id from a given type and a…",132,[[["u64"]],["resourceid"]]],[11,"from_type_id_and_dynamic_id","","Create a new resource id from a raw type ID and a \"dynamic…",132,[[["u64"],["typeid"]],["resourceid"]]],[11,"new","","Creates a new input handler.",138,[[],["inputhandler"]]],[11,"send_event","","Updates the input handler with a new engine event.",138,[[["f32"],["eventchannel"],["self"],["event"]]]],[11,"send_controller_event","","Updates the input handler with a new controller event.",138,[[["eventchannel"],["self"],["controllerevent"]]]],[11,"send_frame_begin","","This function is to be called whenever a frame begins. It…",138,[[["self"]]]],[11,"keys_that_are_down","","Returns an iterator over all keys that are down.",138,[[["self"]]]],[11,"key_is_down","","Checks if a key is down.",138,[[["self"],["virtualkeycode"]],["bool"]]],[11,"mouse_buttons_that_are_down","","Returns an iterator over all pressed mouse buttons",138,[[["self"]]]],[11,"mouse_button_is_down","","Checks if a mouse button is down.",138,[[["self"],["mousebutton"]],["bool"]]],[11,"mouse_wheel_value","","If the mouse wheel was scrolled this frame this function…",138,[[["self"],["bool"]],["f32"]]],[11,"scan_codes_that_are_down","","Returns an iterator over all pressed scan codes",138,[[["self"]]]],[11,"scan_code_is_down","","Checks if the key corresponding to a scan code is down.",138,[[["u32"],["self"]],["bool"]]],[11,"controller_buttons_that_are_down","","Returns an iterator over all pressed controller buttons on…",138,[[["self"]]]],[11,"controller_button_is_down","","Checks if a controller button is down on specific…",138,[[["controllerbutton"],["u32"],["self"]],["bool"]]],[11,"connected_controllers","","List controller ids of all currently connected…",138,[[["self"]]]],[11,"is_controller_connected","","Returns true if a controller with the given id is connected.",138,[[["u32"],["self"]],["bool"]]],[11,"mouse_position","","Gets the current mouse position.",138,[[["self"]],["option"]]],[11,"buttons_that_are_down","","Returns an iterator over all buttons that are down.",138,[[["self"]]]],[11,"button_is_down","","Checks if a button is down.",138,[[["button"],["self"]],["bool"]]],[11,"axis_value","","Returns the value of an axis by the id, if the id doesn't…",138,[[["self"],["a"]],[["f32"],["option",["f32"]]]]],[11,"action_is_down","","Returns true if any of the actions bindings is down.",138,[[["self"],["a"]],[["option",["bool"]],["bool"]]]]],"p":[[4,"AnimationKey"],[4,"CollisionLabel"],[3,"CollisionTag"],[3,"CollisionTagBuilder"],[3,"CollisionTagWrapper"],[3,"Bullet"],[3,"Enemy"],[3,"EnemyType"],[3,"ActionTriggerStorages"],[4,"ActionType"],[3,"Delay"],[3,"Echo"],[3,"Group"],[3,"InsertComponents"],[3,"MoveAction"],[3,"Random"],[3,"RepeatDelay"],[3,"ActionTrigger"],[3,"ActionTypeTrigger"],[4,"EventType"],[3,"EventsRegister"],[3,"Jumper"],[3,"Jumppad"],[3,"MaxMovementVelocity"],[3,"MaxMovementVelocityBuilder"],[3,"Movable"],[4,"MoveAction"],[3,"PhysicsData"],[3,"Shooter"],[3,"Walker"],[3,"WallJumper"],[3,"WallSlider"],[3,"SpriteRender"],[3,"Animation"],[3,"AnimationsContainer"],[3,"Transform"],[3,"Confined"],[3,"Follow"],[3,"Loadable"],[3,"Loader"],[3,"Size"],[3,"BaseFriction"],[3,"Collidable"],[3,"Collider"],[3,"Gravity"],[3,"Hitbox"],[3,"Solid"],[3,"Velocity"],[8,"Component"],[3,"DenseVecStorage"],[3,"Entity"],[3,"HashMapStorage"],[3,"NullStorage"],[3,"Storage"],[3,"VecStorage"],[8,"ByAxis"],[4,"Axis"],[3,"AxisIter"],[3,"Rect"],[3,"RectBuilder"],[4,"DispatcherId"],[4,"IngameAxisBinding"],[4,"IngameActionBinding"],[4,"PausedAxisBinding"],[4,"PausedActionBinding"],[3,"Pos"],[3,"Size"],[3,"Map"],[3,"Level"],[3,"Tile"],[3,"Object"],[8,"Propful"],[3,"EntityBuilder"],[3,"World"],[8,"WorldExt"],[8,"Builder"],[3,"SpriteSheetHandles"],[4,"ObjectType"],[4,"TileType"],[3,"EntityComponentInserter"],[3,"InputManager"],[3,"BulletCreator"],[3,"BulletComponents"],[3,"Settings"],[3,"SizeSettings"],[3,"CameraSettings"],[3,"EnemiesSettings"],[3,"EnemySettings"],[3,"EnemyComponentsData"],[3,"EnemyComponentsStorages"],[3,"GeneralSettings"],[3,"LoaderSystemSettings"],[3,"DebugSettings"],[4,"HitboxConfig"],[3,"PlayerSettings"],[3,"ShooterData"],[3,"ShooterBulletData"],[3,"TilesSettings"],[3,"TileSettings"],[3,"AmethystCamera"],[8,"State"],[3,"StateData"],[4,"StateEvent"],[4,"Trans"],[3,"CustomGameData"],[3,"CustomGameDataBuilder"],[3,"QueryMatches"],[3,"ControlPlayerJumpSystem"],[4,"TargetGravity"],[4,"Facing"],[3,"BulletCreatorStorages"],[3,"TimedAction"],[3,"HandleActionDelay"],[3,"TimedAction"],[3,"HandleActionRepeatDelay"],[3,"EventHandlersBundle"],[3,"HandleEventInterval"],[3,"HandleEventOnSpawn"],[3,"SwitchAnimationsSystem"],[3,"EntityLoaderSystem"],[3,"InputManagerSystem"],[3,"MoveEntitiesSystem"],[3,"UpdateCollisionsSystem"],[8,"Query"],[3,"FilterQuery"],[3,"FindQuery"],[4,"QueryExpression"],[4,"QueryValueSide"],[4,"QueryValueState"],[3,"AssetStorage"],[3,"Handle"],[3,"Time"],[3,"ResourceId"],[8,"Join"],[3,"Read"],[8,"System"],[3,"Write"],[8,"SystemData"],[3,"InputHandler"],[3,"SpriteSheet"],[4,"Texture"],[3,"JumppadAffected"],[3,"Player"],[3,"Hidden"],[3,"Transparent"],[3,"Loaded"],[3,"ScaleOnce"],[3,"IngameBindings"],[3,"PausedBindings"],[3,"CustomData"],[3,"Ingame"],[3,"LoadIngame"],[3,"Paused"],[3,"Startup"],[3,"BulletHitSystem"],[3,"ControlPlayerSystem"],[3,"ControlPlayerShootSystem"],[3,"CreateBulletsSystem"],[3,"DeleteBulletsSystem"],[3,"HandleActionEcho"],[3,"HandleActionGroup"],[3,"HandleActionInsertComponents"],[3,"HandleActionMoveAction"],[3,"HandleActionRandom"],[3,"HandleEventOnCollision"],[3,"TriggerActionsFromActionTypesSystem"],[3,"HandleAnimationsSystem"],[3,"HandleJumppadAffectedSystem"],[3,"HandleMovablesSystem"],[3,"HandleScalesSystem"],[3,"HandleWalkersSystem"],[3,"CameraOrthoSystem"],[3,"PlayAnimationsSystem"],[3,"ConfineEntitiesSystem"],[3,"FollowSystem"],[3,"ScaleSpritesSystem"],[3,"ApplyBaseFrictionSystem"],[3,"ApplyGravitySystem"]]};
searchIndex["deathframe"] = {"doc":"","i":[[0,"bundles","deathframe","",null,null],[3,"PhysicsBundle","deathframe::bundles","The `PhysicsBundle` registers the following systems: -…",null,null],[3,"AnimationBundle","","The `AnimationBundle` registers the following systems: -…",null,null],[11,"new","","Create new `PhysicsBundle` with no dependencies.",0,[[],["self"]]],[11,"with_deps","","Set system dependencies for all registered systems.",0,[[],["self"]]],[11,"new","","Create new `AnimationBundle` with no dependencies.",1,[[],["self"]]],[11,"with_deps","","Set system dependencies for all registered systems.",1,[[],["self"]]],[0,"components","deathframe","Re-exports components from enabled deathframe crates.",null,null],[0,"component_prelude","deathframe::components","",null,null],[8,"Component","deathframe::components::component_prelude","Abstract component type. Doesn't have to be Copy or even…",null,null],[16,"Storage","","Associated storage type for this component.",2,null],[24,"Component","","Custom derive macro for the `Component` trait.",null,null],[3,"DenseVecStorage","","Dense vector storage. Has a redirection 2-way table…",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[3,"HashMapStorage","","`HashMap`-based storage. Best suited for rare components.",null,null],[3,"NullStorage","","A null storage type, used for cases where the component…",null,null],[3,"Storage","","A wrapper around the masked storage and the generations…",null,null],[3,"VecStorage","","Vector storage. Uses a simple `Vec`. Supposed to have…",null,null],[8,"ByAxis","","Anything implementing the `ByAxis` trait, returns an item…",null,null],[16,"Item","","",3,null],[10,"by_axis","","",3,[[["axis"]]]],[6,"Point","","",null,null],[6,"Vector","","",null,null],[4,"Axis","","Just a plain `Axis` enum with `X` and `Y` variants.",null,null],[13,"X","","",4,null],[13,"Y","","",4,null],[3,"AxisIter","","An iterator over both axes.",null,null],[3,"Rect","","A `Rect` is simply an area. It has positions bounding…",null,null],[12,"top","","",5,null],[12,"bottom","","",5,null],[12,"left","","",5,null],[12,"right","","",5,null],[3,"RectBuilder","","Builder for `Rect`.",null,null],[0,"prelude","deathframe::components","",null,null],[3,"Animation","deathframe::components::prelude","Animates an entity with `SpriteRender` frame-by-frame.…",null,null],[3,"AnimationsContainer","","A component, which can hold multiple `Animation`s. It…",null,null],[3,"Transform","","Local position, rotation, and scale (from parent if it…",null,null],[3,"Hidden","","Hidden mesh component Useful for entities, that should not…",null,null],[3,"Transparent","","Transparent mesh component",null,null],[3,"Confined","","Entities that have `Confined` and at least a `Transform`,…",null,null],[3,"Follow","","The `Follow` component makes an entity with a `Transform`…",null,null],[3,"Loadable","","Entities which have `Loadable` may be loaded or unloaded…",null,null],[3,"Loaded","","Entities which have `Loadable` and `Loaded` will be…",null,null],[3,"Loader","","`Loader` entities can load `Loadable` entities, whose…",null,null],[3,"ScaleOnce","","For entities which have `Transform`, `Size`,…",null,null],[3,"Size","","`Size` is used in multiple places, including collision and…",null,null],[12,"w","","",6,null],[12,"h","","",6,null],[3,"BaseFriction","","Friction that is applied constantly. You can disable it…",null,null],[3,"Collidable","","",null,null],[3,"Collider","","",null,null],[12,"tag","","",7,null],[12,"collisions","","",7,null],[3,"Gravity","","Entities with the `Gravity` component are affected by…",null,null],[12,"x","","",8,null],[12,"y","","",8,null],[3,"Hitbox","","A `Hitbox` has one or more `Rect` rects, which are…",null,null],[3,"Solid","","",null,null],[3,"Velocity","","",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[0,"resources","deathframe","",null,null],[0,"entity_component_inserter","deathframe::resources","",null,null],[4,"InsertionAction","deathframe::resources::entity_component_inserter","",null,null],[13,"Insert","","",10,null],[13,"Remove","","",10,null],[3,"EntityComponentInserter","","This struct accumulates `InsertionAction`s for entities,…",null,null],[0,"input_manager","deathframe::resources","",null,null],[3,"InputManager","deathframe::resources::input_manager","Manages input actions. Stores data about which actions are…",null,null],[0,"sprite_sheet_handles","deathframe::resources","",null,null],[3,"SpriteSheetHandles","deathframe::resources::sprite_sheet_handles","This is a resource wrapper for amethyst's `SpriteSheet`s.…",null,null],[0,"prelude","deathframe::resources","",null,null],[0,"prelude","","",null,null],[3,"EntityComponentInserter","deathframe::resources::prelude","This struct accumulates `InsertionAction`s for entities,…",null,null],[3,"InputManager","","Manages input actions. Stores data about which actions are…",null,null],[3,"SpriteSheetHandles","","This is a resource wrapper for amethyst's `SpriteSheet`s.…",null,null],[0,"systems","deathframe","Re-exports systems from enabled deathframe crates.",null,null],[0,"system_prelude","deathframe::systems","",null,null],[6,"TextureHandle","deathframe::systems::system_prelude","",null,null],[3,"AssetStorage","","An asset storage, storing the actual assets and allocating…",null,null],[3,"Handle","","A handle to an asset. This is usually what the user deals…",null,null],[3,"Time","","Frame timing values.",null,null],[3,"ResourceId","","The id of a [`Resource`], which simply wraps a type id and…",null,null],[6,"Index","","An index is basically the id of an `Entity`.",null,null],[6,"Entities","","A wrapper for a read `Entities` resource. Note that this…",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[8,"Join","","The purpose of the `Join` trait is to provide a way to…",null,null],[16,"Type","","Type of joined components.",11,null],[16,"Value","","Type of joined storages.",11,null],[16,"Mask","","Type of joined bit mask.",11,null],[11,"join","","Create a joined iterator over the contents.",11,[[],["joiniter"]]],[11,"maybe","","Returns a `Join`-able structure that yields all indices,…",11,[[],["maybejoin"]]],[10,"open","","Open this join by returning the mask and the storages.",11,[[]]],[10,"get","","Get a joined component value by a given index.",11,[[["u32"]]]],[11,"is_unconstrained","","If this `Join` typically returns all indices in the mask,…",11,[[],["bool"]]],[3,"Read","","Allows to fetch a resource in a system immutably.",null,null],[6,"ReadExpect","","Allows to fetch a resource in a system immutably. This…",null,null],[6,"ReadStorage","","A storage with read access.",null,null],[3,"Storage","","A wrapper around the masked storage and the generations…",null,null],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",12,null],[10,"run","","Executes the system with the required system data.",12,[[["self"]]]],[11,"running_time","","Returns a hint how long the system needs for running. This…",12,[[["self"]],["runningtime"]]],[11,"accessor","","Return the accessor from the [`SystemData`].",12,[[["self"]],["accessorcow"]]],[11,"setup","","Sets up the `World` using `Self::SystemData::setup`.",12,[[["self"],["world"]]]],[11,"dispose","","Performs clean up that requires resources from the…",12,[[["world"]]]],[3,"Write","","Allows to fetch a resource in a system mutably.",null,null],[6,"WriteExpect","","Allows to fetch a resource in a system mutably. This will…",null,null],[6,"WriteStorage","","A storage with read and write access.",null,null],[8,"SystemData","","A static system data that can specify its dependencies at…",null,null],[10,"setup","","Sets up the system data for fetching it from the `World`.",13,[[["world"]]]],[10,"fetch","","Fetches the system data from `World`. Note that this is…",13,[[["world"]],["self"]]],[10,"reads","","Returns all read dependencies as fetched from `Self::fetch`.",13,[[],[["vec",["resourceid"]],["resourceid"]]]],[10,"writes","","Returns all write dependencies as fetched from…",13,[[],[["vec",["resourceid"]],["resourceid"]]]],[24,"SystemData","","Used to `#[derive]` the trait `SystemData`.",null,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[3,"InputHandler","","This struct holds state information about input devices.",null,null],[12,"bindings","","Maps inputs to actions and axes.",14,null],[3,"SpriteSheet","","Meta data for a sprite sheet texture.",null,null],[12,"texture","","`Texture` handle of the spritesheet texture",15,null],[12,"sprites","","A list of sprites in this sprite sheet.",15,null],[6,"SpriteSheetHandle","","An asset handle to sprite sheet metadata.",null,null],[3,"AmethystCamera","","Camera struct.",null,null],[3,"SpriteRender","","Information for rendering a sprite.",null,null],[12,"sprite_sheet","","Handle to the sprite sheet of the sprite",16,null],[12,"sprite_number","","Index of the sprite on the sprite sheet",16,null],[4,"Texture","","Texture wrapper.",null,null],[13,"Vulkan","","Texture Variant",17,null],[3,"Transform","","Local position, rotation, and scale (from parent if it…",null,null],[3,"Hidden","","Hidden mesh component Useful for entities, that should not…",null,null],[3,"Transparent","","Transparent mesh component",null,null],[5,"is_entity_loaded","","",null,[[["storage"],["entity"],["storage"]],["bool"]]],[8,"ByAxis","","Anything implementing the `ByAxis` trait, returns an item…",null,null],[16,"Item","","",3,null],[10,"by_axis","","",3,[[["axis"]]]],[6,"Point","","",null,null],[6,"Vector","","",null,null],[3,"Confined","","Entities that have `Confined` and at least a `Transform`,…",null,null],[3,"Follow","","The `Follow` component makes an entity with a `Transform`…",null,null],[3,"Loadable","","Entities which have `Loadable` may be loaded or unloaded…",null,null],[3,"Loaded","","Entities which have `Loadable` and `Loaded` will be…",null,null],[3,"Loader","","`Loader` entities can load `Loadable` entities, whose…",null,null],[3,"ScaleOnce","","For entities which have `Transform`, `Size`,…",null,null],[3,"Size","","`Size` is used in multiple places, including collision and…",null,null],[12,"w","","",6,null],[12,"h","","",6,null],[4,"Axis","","Just a plain `Axis` enum with `X` and `Y` variants.",null,null],[13,"X","","",4,null],[13,"Y","","",4,null],[3,"AxisIter","","An iterator over both axes.",null,null],[3,"Rect","","A `Rect` is simply an area. It has positions bounding…",null,null],[12,"top","","",5,null],[12,"bottom","","",5,null],[12,"left","","",5,null],[12,"right","","",5,null],[3,"RectBuilder","","Builder for `Rect`.",null,null],[3,"EntityComponentInserter","","This struct accumulates `InsertionAction`s for entities,…",null,null],[3,"InputManager","","Manages input actions. Stores data about which actions are…",null,null],[3,"SpriteSheetHandles","","This is a resource wrapper for amethyst's `SpriteSheet`s.…",null,null],[0,"prelude","deathframe::systems","",null,null],[3,"PlayAnimationsSystem","deathframe::systems::prelude","Handles the playing of animations for entities with…",null,null],[3,"SwitchAnimationsSystem","","The `SwitchAnimationsSystem` handles entities'…",null,null],[3,"ConfineEntitiesSystem","","This system confines all entities with `Transform` and…",null,null],[3,"EntityLoaderSystem","","The `EntityLoaderSystem` handles the loading and unloading…",null,null],[3,"FollowSystem","","",null,null],[3,"InputManagerSystem","","Handles all the logic for `InputManager`.",null,null],[3,"ScaleSpritesSystem","","This system gets all entities with `Transform`, `Size`,…",null,null],[3,"ApplyBaseFrictionSystem","","Constantly applies friction to entities with…",null,null],[3,"ApplyGravitySystem","","",null,null],[3,"MoveEntitiesSystem","","This system is responsible for moving all entities with…",null,null],[3,"UpdateCollisionsSystem","","The `UpdateCollisionsSystem` is in charge of setting…",null,null],[11,"from","deathframe::bundles","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"try_default","","",0,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"try_default","","",1,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",1,[[["m"]],["d"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","deathframe::components::component_prelude","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_subset","","",18,[[["self"]],["option"]]],[11,"is_in_subset","","",18,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",18,[[["self"]],["ss"]]],[11,"from_subset","","",18,[[["ss"]],["sp"]]],[11,"try_default","","",18,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",18,[[["m"]],["d"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","deathframe::systems::system_prelude","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_subset","","",19,[[["self"]],["option"]]],[11,"is_in_subset","","",19,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",19,[[["self"]],["ss"]]],[11,"from_subset","","",19,[[["ss"]],["sp"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",19,[[["m"]],["d"]]],[11,"vzip","","",19,[[],["v"]]],[11,"clone_box","","",19,[[["self"]]]],[11,"from","deathframe::components::component_prelude","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_subset","","",20,[[["self"]],["option"]]],[11,"is_in_subset","","",20,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",20,[[["self"]],["ss"]]],[11,"from_subset","","",20,[[["ss"]],["sp"]]],[11,"try_default","","",20,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",20,[[["m"]],["d"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_subset","","",21,[[["self"]],["option"]]],[11,"is_in_subset","","",21,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",21,[[["self"]],["ss"]]],[11,"from_subset","","",21,[[["ss"]],["sp"]]],[11,"try_default","","",21,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",21,[[["m"]],["d"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","deathframe::systems::system_prelude","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_subset","","",22,[[["self"]],["option"]]],[11,"is_in_subset","","",22,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",22,[[["self"]],["ss"]]],[11,"from_subset","","",22,[[["ss"]],["sp"]]],[11,"setup","","",22,[[["staticaccessor"],["world"]]]],[11,"fetch","","",22,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",22,[[["m"]],["d"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","deathframe::components::component_prelude","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_subset","","",23,[[["self"]],["option"]]],[11,"is_in_subset","","",23,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",23,[[["self"]],["ss"]]],[11,"from_subset","","",23,[[["ss"]],["sp"]]],[11,"try_default","","",23,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",23,[[["m"]],["d"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","deathframe::systems::system_prelude","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_subset","","",4,[[["self"]],["option"]]],[11,"is_in_subset","","",4,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",4,[[["self"]],["ss"]]],[11,"from_subset","","",4,[[["ss"]],["sp"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",4,[[["m"]],["d"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clone_box","","",4,[[["self"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_subset","","",24,[[["self"]],["option"]]],[11,"is_in_subset","","",24,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",24,[[["self"]],["ss"]]],[11,"from_subset","","",24,[[["ss"]],["sp"]]],[11,"try_default","","",24,[[],[["result",["string"]],["string"]]]],[11,"par_bridge","","",24,[[],["iterbridge"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"tap_count","","",24,[[["t"]],["tapcountiterator"]]],[11,"adapt_into_using","","",24,[[["m"]],["d"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_subset","","",5,[[["self"]],["option"]]],[11,"is_in_subset","","",5,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",5,[[["self"]],["ss"]]],[11,"from_subset","","",5,[[["ss"]],["sp"]]],[11,"try_default","","",5,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",5,[[["m"]],["d"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clone_box","","",5,[[["self"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_subset","","",25,[[["self"]],["option"]]],[11,"is_in_subset","","",25,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",25,[[["self"]],["ss"]]],[11,"from_subset","","",25,[[["ss"]],["sp"]]],[11,"try_default","","",25,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",25,[[["m"]],["d"]]],[11,"vzip","","",25,[[],["v"]]],[11,"clone_box","","",25,[[["self"]]]],[11,"from","deathframe::components::prelude","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_subset","","",26,[[["self"]],["option"]]],[11,"is_in_subset","","",26,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",26,[[["self"]],["ss"]]],[11,"from_subset","","",26,[[["ss"]],["sp"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",26,[[["m"]],["d"]]],[11,"vzip","","",26,[[],["v"]]],[11,"clone_box","","",26,[[["self"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_subset","","",27,[[["self"]],["option"]]],[11,"is_in_subset","","",27,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",27,[[["self"]],["ss"]]],[11,"from_subset","","",27,[[["ss"]],["sp"]]],[11,"try_default","","",27,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",27,[[["m"]],["d"]]],[11,"vzip","","",27,[[],["v"]]],[11,"clone_box","","",27,[[["self"]]]],[11,"from","deathframe::systems::system_prelude","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"load","","",28,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",28,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",28,[[["self"],["p"]],[["configerror"],["result",["configerror"]]]]],[11,"to_subset","","",28,[[["self"]],["option"]]],[11,"is_in_subset","","",28,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",28,[[["self"]],["ss"]]],[11,"from_subset","","",28,[[["ss"]],["sp"]]],[11,"erased_serialize","","",28,[[["serializer"],["self"]],[["error"],["ok"],["result",["ok","error"]]]]],[11,"try_default","","",28,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",28,[[["m"]],["d"]]],[11,"vzip","","",28,[[],["v"]]],[11,"clone_box","","",28,[[["self"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_subset","","",29,[[["self"]],["option"]]],[11,"is_in_subset","","",29,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",29,[[["self"]],["ss"]]],[11,"from_subset","","",29,[[["ss"]],["sp"]]],[11,"try_default","","",29,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",29,[[["m"]],["d"]]],[11,"vzip","","",29,[[],["v"]]],[11,"clone_box","","",29,[[["self"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"load","","",30,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",30,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",30,[[["self"],["p"]],[["configerror"],["result",["configerror"]]]]],[11,"to_subset","","",30,[[["self"]],["option"]]],[11,"is_in_subset","","",30,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",30,[[["self"]],["ss"]]],[11,"from_subset","","",30,[[["ss"]],["sp"]]],[11,"erased_serialize","","",30,[[["serializer"],["self"]],[["error"],["ok"],["result",["ok","error"]]]]],[11,"try_default","","",30,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",30,[[["m"]],["d"]]],[11,"vzip","","",30,[[],["v"]]],[11,"clone_box","","",30,[[["self"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_subset","","",31,[[["self"]],["option"]]],[11,"is_in_subset","","",31,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",31,[[["self"]],["ss"]]],[11,"from_subset","","",31,[[["ss"]],["sp"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",31,[[["m"]],["d"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_subset","","",32,[[["self"]],["option"]]],[11,"is_in_subset","","",32,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",32,[[["self"]],["ss"]]],[11,"from_subset","","",32,[[["ss"]],["sp"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",32,[[["m"]],["d"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_subset","","",33,[[["self"]],["option"]]],[11,"is_in_subset","","",33,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",33,[[["self"]],["ss"]]],[11,"from_subset","","",33,[[["ss"]],["sp"]]],[11,"try_default","","",33,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",33,[[["m"]],["d"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_subset","","",34,[[["self"]],["option"]]],[11,"is_in_subset","","",34,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",34,[[["self"]],["ss"]]],[11,"from_subset","","",34,[[["ss"]],["sp"]]],[11,"try_default","","",34,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",34,[[["m"]],["d"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_subset","","",35,[[["self"]],["option"]]],[11,"is_in_subset","","",35,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",35,[[["self"]],["ss"]]],[11,"from_subset","","",35,[[["ss"]],["sp"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",35,[[["m"]],["d"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_subset","","",36,[[["self"]],["option"]]],[11,"is_in_subset","","",36,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",36,[[["self"]],["ss"]]],[11,"from_subset","","",36,[[["ss"]],["sp"]]],[11,"try_default","","",36,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",36,[[["m"]],["d"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_subset","","",6,[[["self"]],["option"]]],[11,"is_in_subset","","",6,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",6,[[["self"]],["ss"]]],[11,"from_subset","","",6,[[["ss"]],["sp"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",6,[[["m"]],["d"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clone_box","","",6,[[["self"]]]],[11,"from","deathframe::components::prelude","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_subset","","",37,[[["self"]],["option"]]],[11,"is_in_subset","","",37,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",37,[[["self"]],["ss"]]],[11,"from_subset","","",37,[[["ss"]],["sp"]]],[11,"try_default","","",37,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",37,[[["m"]],["d"]]],[11,"vzip","","",37,[[],["v"]]],[11,"clone_box","","",37,[[["self"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_subset","","",38,[[["self"]],["option"]]],[11,"is_in_subset","","",38,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",38,[[["self"]],["ss"]]],[11,"from_subset","","",38,[[["ss"]],["sp"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",38,[[["m"]],["d"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_subset","","",7,[[["self"]],["option"]]],[11,"is_in_subset","","",7,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",7,[[["self"]],["ss"]]],[11,"from_subset","","",7,[[["ss"]],["sp"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",7,[[["m"]],["d"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_subset","","",8,[[["self"]],["option"]]],[11,"is_in_subset","","",8,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",8,[[["self"]],["ss"]]],[11,"from_subset","","",8,[[["ss"]],["sp"]]],[11,"try_default","","",8,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",8,[[["m"]],["d"]]],[11,"vzip","","",8,[[],["v"]]],[11,"clone_box","","",8,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_subset","","",39,[[["self"]],["option"]]],[11,"is_in_subset","","",39,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",39,[[["self"]],["ss"]]],[11,"from_subset","","",39,[[["ss"]],["sp"]]],[11,"try_default","","",39,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",39,[[["m"]],["d"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_subset","","",40,[[["self"]],["option"]]],[11,"is_in_subset","","",40,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",40,[[["self"]],["ss"]]],[11,"from_subset","","",40,[[["ss"]],["sp"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",40,[[["m"]],["d"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_subset","","",9,[[["self"]],["option"]]],[11,"is_in_subset","","",9,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",9,[[["self"]],["ss"]]],[11,"from_subset","","",9,[[["ss"]],["sp"]]],[11,"try_default","","",9,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",9,[[["m"]],["d"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","deathframe::resources::entity_component_inserter","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_subset","","",10,[[["self"]],["option"]]],[11,"is_in_subset","","",10,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",10,[[["self"]],["ss"]]],[11,"from_subset","","",10,[[["ss"]],["sp"]]],[11,"try_default","","",10,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",10,[[["m"]],["d"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","deathframe::systems::system_prelude","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_subset","","",41,[[["self"]],["option"]]],[11,"is_in_subset","","",41,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",41,[[["self"]],["ss"]]],[11,"from_subset","","",41,[[["ss"]],["sp"]]],[11,"try_default","","",41,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",41,[[["m"]],["d"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_subset","","",42,[[["self"]],["option"]]],[11,"is_in_subset","","",42,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",42,[[["self"]],["ss"]]],[11,"from_subset","","",42,[[["ss"]],["sp"]]],[11,"try_default","","",42,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",42,[[["m"]],["d"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_subset","","",43,[[["self"]],["option"]]],[11,"is_in_subset","","",43,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",43,[[["self"]],["ss"]]],[11,"from_subset","","",43,[[["ss"]],["sp"]]],[11,"try_default","","",43,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",43,[[["m"]],["d"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"to_subset","","",44,[[["self"]],["option"]]],[11,"is_in_subset","","",44,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",44,[[["self"]],["ss"]]],[11,"from_subset","","",44,[[["ss"]],["sp"]]],[11,"try_default","","",44,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",44,[[["m"]],["d"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_subset","","",45,[[["self"]],["option"]]],[11,"is_in_subset","","",45,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",45,[[["self"]],["ss"]]],[11,"from_subset","","",45,[[["ss"]],["sp"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",45,[[["m"]],["d"]]],[11,"vzip","","",45,[[],["v"]]],[11,"clone_box","","",45,[[["self"]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_subset","","",46,[[["self"]],["option"]]],[11,"is_in_subset","","",46,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",46,[[["self"]],["ss"]]],[11,"from_subset","","",46,[[["ss"]],["sp"]]],[11,"try_default","","",46,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",46,[[["m"]],["d"]]],[11,"vzip","","",46,[[],["v"]]],[11,"clone_box","","",46,[[["self"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_subset","","",47,[[["self"]],["option"]]],[11,"is_in_subset","","",47,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",47,[[["self"]],["ss"]]],[11,"from_subset","","",47,[[["ss"]],["sp"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",47,[[["m"]],["d"]]],[11,"vzip","","",47,[[],["v"]]],[11,"clone_box","","",47,[[["self"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"to_subset","","",48,[[["self"]],["option"]]],[11,"is_in_subset","","",48,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",48,[[["self"]],["ss"]]],[11,"from_subset","","",48,[[["ss"]],["sp"]]],[11,"setup","","",48,[[["staticaccessor"],["world"]]]],[11,"fetch","","",48,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",48,[[["m"]],["d"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_subset","","",49,[[["self"]],["option"]]],[11,"is_in_subset","","",49,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",49,[[["self"]],["ss"]]],[11,"from_subset","","",49,[[["ss"]],["sp"]]],[11,"setup","","",49,[[["staticaccessor"],["world"]]]],[11,"fetch","","",49,[[["world"],["staticaccessor"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",49,[[["m"]],["d"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_subset","","",50,[[["self"]],["option"]]],[11,"is_in_subset","","",50,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",50,[[["self"]],["ss"]]],[11,"from_subset","","",50,[[["ss"]],["sp"]]],[11,"try_default","","",50,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",50,[[["m"]],["d"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_subset","","",14,[[["self"]],["option"]]],[11,"is_in_subset","","",14,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",14,[[["self"]],["ss"]]],[11,"from_subset","","",14,[[["ss"]],["sp"]]],[11,"try_default","","",14,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",14,[[["m"]],["d"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_subset","","",15,[[["self"]],["option"]]],[11,"is_in_subset","","",15,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",15,[[["self"]],["ss"]]],[11,"from_subset","","",15,[[["ss"]],["sp"]]],[11,"process","","",15,[[],[["result",["processingstate","error"]],["error"],["processingstate"]]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",15,[[["m"]],["d"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clone_box","","",15,[[["self"]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"load","","",51,[[["p"]],[["result",["configerror"]],["configerror"]]]],[11,"load_bytes","","",51,[[],[["result",["configerror"]],["configerror"]]]],[11,"write","","",51,[[["self"],["p"]],[["configerror"],["result",["configerror"]]]]],[11,"to_subset","","",51,[[["self"]],["option"]]],[11,"is_in_subset","","",51,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",51,[[["self"]],["ss"]]],[11,"from_subset","","",51,[[["ss"]],["sp"]]],[11,"erased_serialize","","",51,[[["serializer"],["self"]],[["error"],["ok"],["result",["ok","error"]]]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",51,[[["m"]],["d"]]],[11,"vzip","","",51,[[],["v"]]],[11,"clone_box","","",51,[[["self"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_subset","","",16,[[["self"]],["option"]]],[11,"is_in_subset","","",16,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",16,[[["self"]],["ss"]]],[11,"from_subset","","",16,[[["ss"]],["sp"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",16,[[["m"]],["d"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clone_box","","",16,[[["self"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_subset","","",17,[[["self"]],["option"]]],[11,"is_in_subset","","",17,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",17,[[["self"]],["ss"]]],[11,"from_subset","","",17,[[["ss"]],["sp"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",17,[[["m"]],["d"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","deathframe::systems::prelude","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"pausable","","",52,[[["v"]],["pausable"]]],[11,"to_subset","","",52,[[["self"]],["option"]]],[11,"is_in_subset","","",52,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",52,[[["self"]],["ss"]]],[11,"from_subset","","",52,[[["ss"]],["sp"]]],[11,"run_now","","",52,[[["world"],["self"]]]],[11,"setup","","",52,[[["self"],["world"]]]],[11,"dispose","","",52,[[["box"],["world"]]]],[11,"try_default","","",52,[[],[["result",["string"]],["string"]]]],[11,"setup","","",52,[[["self"],["world"]]]],[11,"run","","",52,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",52,[[["vec"],["self"]]]],[11,"writes","","",52,[[["vec"],["self"]]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",52,[[["m"]],["d"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"pausable","","",53,[[["v"]],["pausable"]]],[11,"to_subset","","",53,[[["self"]],["option"]]],[11,"is_in_subset","","",53,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",53,[[["self"]],["ss"]]],[11,"from_subset","","",53,[[["ss"]],["sp"]]],[11,"run_now","","",53,[[["world"],["self"]]]],[11,"setup","","",53,[[["self"],["world"]]]],[11,"dispose","","",53,[[["box"],["world"]]]],[11,"try_default","","",53,[[],[["result",["string"]],["string"]]]],[11,"setup","","",53,[[["self"],["world"]]]],[11,"run","","",53,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",53,[[["vec"],["self"]]]],[11,"writes","","",53,[[["vec"],["self"]]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",53,[[["m"]],["d"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"pausable","","",54,[[["v"]],["pausable"]]],[11,"to_subset","","",54,[[["self"]],["option"]]],[11,"is_in_subset","","",54,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",54,[[["self"]],["ss"]]],[11,"from_subset","","",54,[[["ss"]],["sp"]]],[11,"run_now","","",54,[[["world"],["self"]]]],[11,"setup","","",54,[[["self"],["world"]]]],[11,"dispose","","",54,[[["box"],["world"]]]],[11,"try_default","","",54,[[],[["result",["string"]],["string"]]]],[11,"setup","","",54,[[["self"],["world"]]]],[11,"run","","",54,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",54,[[["vec"],["self"]]]],[11,"writes","","",54,[[["vec"],["self"]]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",54,[[["m"]],["d"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"pausable","","",55,[[["v"]],["pausable"]]],[11,"to_subset","","",55,[[["self"]],["option"]]],[11,"is_in_subset","","",55,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",55,[[["self"]],["ss"]]],[11,"from_subset","","",55,[[["ss"]],["sp"]]],[11,"run_now","","",55,[[["world"],["self"]]]],[11,"setup","","",55,[[["self"],["world"]]]],[11,"dispose","","",55,[[["box"],["world"]]]],[11,"try_default","","",55,[[],[["result",["string"]],["string"]]]],[11,"setup","","",55,[[["self"],["world"]]]],[11,"run","","",55,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",55,[[["vec"],["self"]]]],[11,"writes","","",55,[[["vec"],["self"]]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",55,[[["m"]],["d"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"pausable","","",56,[[["v"]],["pausable"]]],[11,"to_subset","","",56,[[["self"]],["option"]]],[11,"is_in_subset","","",56,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",56,[[["self"]],["ss"]]],[11,"from_subset","","",56,[[["ss"]],["sp"]]],[11,"run_now","","",56,[[["world"],["self"]]]],[11,"setup","","",56,[[["self"],["world"]]]],[11,"dispose","","",56,[[["box"],["world"]]]],[11,"try_default","","",56,[[],[["result",["string"]],["string"]]]],[11,"setup","","",56,[[["self"],["world"]]]],[11,"run","","",56,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",56,[[["vec"],["self"]]]],[11,"writes","","",56,[[["vec"],["self"]]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",56,[[["m"]],["d"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"pausable","","",57,[[["v"]],["pausable"]]],[11,"to_subset","","",57,[[["self"]],["option"]]],[11,"is_in_subset","","",57,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",57,[[["self"]],["ss"]]],[11,"from_subset","","",57,[[["ss"]],["sp"]]],[11,"run_now","","",57,[[["world"],["self"]]]],[11,"setup","","",57,[[["self"],["world"]]]],[11,"dispose","","",57,[[["box"],["world"]]]],[11,"try_default","","",57,[[],[["result",["string"]],["string"]]]],[11,"setup","","",57,[[["self"],["world"]]]],[11,"run","","",57,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",57,[[["vec"],["self"]]]],[11,"writes","","",57,[[["vec"],["self"]]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",57,[[["m"]],["d"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"pausable","","",58,[[["v"]],["pausable"]]],[11,"to_subset","","",58,[[["self"]],["option"]]],[11,"is_in_subset","","",58,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",58,[[["self"]],["ss"]]],[11,"from_subset","","",58,[[["ss"]],["sp"]]],[11,"run_now","","",58,[[["world"],["self"]]]],[11,"setup","","",58,[[["self"],["world"]]]],[11,"dispose","","",58,[[["box"],["world"]]]],[11,"try_default","","",58,[[],[["result",["string"]],["string"]]]],[11,"setup","","",58,[[["self"],["world"]]]],[11,"run","","",58,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",58,[[["vec"],["self"]]]],[11,"writes","","",58,[[["vec"],["self"]]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",58,[[["m"]],["d"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"pausable","","",59,[[["v"]],["pausable"]]],[11,"to_subset","","",59,[[["self"]],["option"]]],[11,"is_in_subset","","",59,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",59,[[["self"]],["ss"]]],[11,"from_subset","","",59,[[["ss"]],["sp"]]],[11,"run_now","","",59,[[["world"],["self"]]]],[11,"setup","","",59,[[["self"],["world"]]]],[11,"dispose","","",59,[[["box"],["world"]]]],[11,"try_default","","",59,[[],[["result",["string"]],["string"]]]],[11,"setup","","",59,[[["self"],["world"]]]],[11,"run","","",59,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",59,[[["vec"],["self"]]]],[11,"writes","","",59,[[["vec"],["self"]]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",59,[[["m"]],["d"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"pausable","","",60,[[["v"]],["pausable"]]],[11,"to_subset","","",60,[[["self"]],["option"]]],[11,"is_in_subset","","",60,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",60,[[["self"]],["ss"]]],[11,"from_subset","","",60,[[["ss"]],["sp"]]],[11,"run_now","","",60,[[["world"],["self"]]]],[11,"setup","","",60,[[["self"],["world"]]]],[11,"dispose","","",60,[[["box"],["world"]]]],[11,"try_default","","",60,[[],[["result",["string"]],["string"]]]],[11,"setup","","",60,[[["self"],["world"]]]],[11,"run","","",60,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",60,[[["vec"],["self"]]]],[11,"writes","","",60,[[["vec"],["self"]]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",60,[[["m"]],["d"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"pausable","","",61,[[["v"]],["pausable"]]],[11,"to_subset","","",61,[[["self"]],["option"]]],[11,"is_in_subset","","",61,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",61,[[["self"]],["ss"]]],[11,"from_subset","","",61,[[["ss"]],["sp"]]],[11,"run_now","","",61,[[["world"],["self"]]]],[11,"setup","","",61,[[["self"],["world"]]]],[11,"dispose","","",61,[[["box"],["world"]]]],[11,"try_default","","",61,[[],[["result",["string"]],["string"]]]],[11,"setup","","",61,[[["self"],["world"]]]],[11,"run","","",61,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",61,[[["vec"],["self"]]]],[11,"writes","","",61,[[["vec"],["self"]]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",61,[[["m"]],["d"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"pausable","","",62,[[["v"]],["pausable"]]],[11,"to_subset","","",62,[[["self"]],["option"]]],[11,"is_in_subset","","",62,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",62,[[["self"]],["ss"]]],[11,"from_subset","","",62,[[["ss"]],["sp"]]],[11,"run_now","","",62,[[["world"],["self"]]]],[11,"setup","","",62,[[["self"],["world"]]]],[11,"dispose","","",62,[[["box"],["world"]]]],[11,"try_default","","",62,[[],[["result",["string"]],["string"]]]],[11,"setup","","",62,[[["self"],["world"]]]],[11,"run","","",62,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",62,[[["vec"],["self"]]]],[11,"writes","","",62,[[["vec"],["self"]]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",62,[[["m"]],["d"]]],[11,"vzip","","",62,[[],["v"]]],[11,"deserialize","deathframe::components::prelude","",26,[[["__d"]],[["result",["animation"]],["animation"]]]],[11,"deserialize","","",27,[[["__d"]],[["animationscontainer"],["result",["animationscontainer"]]]]],[11,"default","deathframe::systems::prelude","",53,[[],["switchanimationssystem"]]],[11,"default","","",52,[[],["playanimationssystem"]]],[11,"default","deathframe::components::prelude","",27,[[],["animationscontainer"]]],[11,"from","","",27,[[["hashmap",["randomstate"]],["randomstate"]],["animationscontainer"]]],[11,"from","","",26,[[["vec"]],["animation"]]],[11,"clone","","",27,[[["self"]],["animationscontainer"]]],[11,"clone","","",26,[[["self"]],["animation"]]],[11,"run","deathframe::systems::prelude","",52,[[["self"]]]],[11,"run","","",53,[[["self"]]]],[11,"eq","deathframe::systems::system_prelude","",4,[[["axis"],["self"]],["bool"]]],[11,"eq","deathframe::resources::entity_component_inserter","",10,[[["self"],["insertionaction"]],["bool"]]],[11,"eq","deathframe::systems::system_prelude","",5,[[["self"],["rect"]],["bool"]]],[11,"ne","","",5,[[["self"],["rect"]],["bool"]]],[11,"eq","","",32,[[["follow"],["self"]],["bool"]]],[11,"ne","","",32,[[["follow"],["self"]],["bool"]]],[11,"run","deathframe::systems::prelude","",55,[[["self"]]]],[11,"run","","",56,[[["self"]]]],[11,"run","","",58,[[["self"]]]],[11,"run","","",57,[[["self"]]]],[11,"run","","",54,[[["self"]]]],[11,"clone","deathframe::systems::system_prelude","",4,[[["self"]],["axis"]]],[11,"clone","","",25,[[["self"]],["rectbuilder"]]],[11,"clone","","",6,[[["self"]],["size"]]],[11,"clone","","",5,[[["self"]],["rect"]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deserialize","","",34,[[["__d"]],[["loaded"],["result",["loaded"]]]]],[11,"deserialize","","",33,[[["__d"]],[["result",["loadable"]],["loadable"]]]],[11,"deserialize","","",6,[[["__d"]],[["size"],["result",["size"]]]]],[11,"deserialize","","",31,[[["__d"]],[["result",["confined"]],["confined"]]]],[11,"deserialize","","",36,[[["__d"]],[["result",["scaleonce"]],["scaleonce"]]]],[11,"deserialize","","",4,[[["__d"]],[["result",["axis"]],["axis"]]]],[11,"deserialize","","",35,[[["__d"]],[["result",["loader"]],["loader"]]]],[11,"deserialize","","",5,[[["__d"]],[["result",["rect"]],["rect"]]]],[11,"partial_cmp","","",32,[[["follow"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"default","deathframe::resources::entity_component_inserter","",10,[[],["insertionaction"]]],[11,"default","deathframe::systems::system_prelude","",24,[[],["iter"]]],[11,"default","","",34,[[],["loaded"]]],[11,"default","","",33,[[],["loadable"]]],[11,"default","","",41,[[],["entitycomponentinserter"]]],[11,"default","","",43,[[],["spritesheethandles"]]],[11,"default","deathframe::systems::prelude","",56,[[],["followsystem"]]],[11,"default","","",58,[[],["scalespritessystem"]]],[11,"default","","",54,[[],["confineentitiessystem"]]],[11,"default","","",57,[[],["inputmanagersystem"]]],[11,"default","deathframe::systems::system_prelude","",5,[[],["rect"]]],[11,"default","","",42,[[],["inputmanager"]]],[11,"default","","",25,[[],["rectbuilder"]]],[11,"default","","",36,[[],["scaleonce"]]],[11,"default","deathframe::systems::prelude","",55,[[],["entityloadersystem"]]],[11,"from","deathframe::systems::system_prelude","",6,[[],["size"]]],[11,"from","","",25,[[["size"]],["rectbuilder"]]],[11,"from","","",6,[[["f32"],["u2"],["matrix",["f32","u2","u1"]],["u1"]],["size"]]],[11,"from","","",5,[[["size"]],["rect"]]],[11,"from","","",35,[[],["loader"]]],[11,"from","","",31,[[["r"]],["confined"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"apply_sample","","",16,[[["self"]]]],[11,"current_sample","","",16,[[["self"]]]],[11,"default_primitive","","",16,[[]]],[11,"blend_method","","",16,[[["self"]],[["option",["blendmethod"]],["blendmethod"]]]],[11,"apply_sample","","",28,[[["self"],["samplerprimitive"]]]],[11,"current_sample","","",28,[[["self"]],[["f32"],["samplerprimitive",["f32"]]]]],[11,"default_primitive","","",28,[[]]],[11,"blend_method","","",28,[[["self"]],[["option",["blendmethod"]],["blendmethod"]]]],[11,"eq","","",46,[[["self"],["time"]],["bool"]]],[11,"ne","","",46,[[["self"],["time"]],["bool"]]],[11,"eq","","",28,[[["self"],["transform"]],["bool"]]],[11,"ne","","",28,[[["self"],["transform"]],["bool"]]],[11,"clone","","",29,[[["self"]],["hidden"]]],[11,"clone","","",46,[[["self"]],["time"]]],[11,"clone","","",28,[[["self"]],["transform"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"into","","",28,[[],["transformvalues"]]],[11,"default","","",46,[[],["time"]]],[11,"default","","The default transform does nothing when used to transform…",28,[[],["transform"]]],[11,"default","","",29,[[],["hidden"]]],[11,"from","","",28,[[["matrix",["f64","u3","u1"]],["u3"],["f64"],["u1"]],["transform"]]],[11,"from","","",28,[[["transformvalues"]],["transform"]]],[11,"from","","",28,[[["f32"],["u3"],["matrix",["f32","u3","u1"]],["u1"]],["transform"]]],[11,"deserialize","","",28,[[["__d"]],[["result",["transform"]],["transform"]]]],[11,"setup","","",22,[[["world"]]]],[11,"fetch","","",22,[[["world"]],[["storage",["fetch"]],["fetch",["maskedstorage"]]]]],[11,"reads","","",22,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",22,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"setup","","",22,[[["world"]]]],[11,"fetch","","",22,[[["world"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[11,"reads","","",22,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",22,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"get_mut","","",22,[[["self"],["entity"]],["option"]]],[11,"get_mut_or_default","","",22,[[["self"],["entity"]],["option"]]],[11,"insert","","",22,[[["self"],["entity"]],[["result",["option","error"]],["option"],["error"]]]],[11,"remove","","",22,[[["self"],["entity"]]]],[11,"_private","","",22,[[],["seal"]]],[11,"partial_cmp","","",19,[[["self"],["entity"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["self"],["entity"]],["bool"]]],[11,"le","","",19,[[["self"],["entity"]],["bool"]]],[11,"gt","","",19,[[["self"],["entity"]],["bool"]]],[11,"ge","","",19,[[["self"],["entity"]],["bool"]]],[11,"get","","",22,[[["entity"],["self"]],["option"]]],[11,"_private","","",22,[[],["seal"]]],[11,"get","","",22,[[["entity"],["self"]],["option"]]],[11,"_private","","",22,[[],["seal"]]],[11,"new","","",50,[[],["world"]]],[11,"register","","",50,[[["self"]]]],[11,"register_with_storage","","",50,[[["self"],["f"]]]],[11,"add_resource","","",50,[[["self"],["t"]]]],[11,"read_component","","",50,[[["self"]],[["fetch",["maskedstorage"]],["storage",["fetch"]]]]],[11,"write_component","","",50,[[["self"]],[["storage",["fetchmut"]],["fetchmut",["maskedstorage"]]]]],[11,"read_resource","","",50,[[["self"]],["fetch"]]],[11,"write_resource","","",50,[[["self"]],["fetchmut"]]],[11,"entities","","",50,[[["self"]],[["read",["entitiesres","defaultprovider"]],["entitiesres"],["defaultprovider"]]]],[11,"entities_mut","","",50,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[11,"create_entity","","",50,[[["self"]],["entitybuilder"]]],[11,"create_entity_unchecked","","",50,[[["self"]],["entitybuilder"]]],[11,"create_iter","","",50,[[["self"]],["createiter"]]],[11,"delete_entity","","",50,[[["self"],["entity"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"delete_entities","","",50,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"delete_all","","",50,[[["self"]]]],[11,"is_alive","","",50,[[["entity"],["self"]],["bool"]]],[11,"maintain","","",50,[[["self"]]]],[11,"delete_components","","",50,[[["self"]]]],[11,"eq","","",19,[[["self"],["entity"]],["bool"]]],[11,"ne","","",19,[[["self"],["entity"]],["bool"]]],[11,"cmp","","",19,[[["self"],["entity"]],["ordering"]]],[11,"clone","","",19,[[["self"]],["entity"]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","deathframe::components::component_prelude","",23,[[],["vecstorage"]]],[11,"default","","",21,[[],["nullstorage"]]],[11,"default","","",20,[[],["hashmapstorage"]]],[11,"default","","",18,[[],["densevecstorage"]]],[11,"clean","","",18,[[["self"],["b"]]]],[11,"get","","",18,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",18,[[["self"],["u32"]],["t"]]],[11,"insert","","",18,[[["self"],["u32"],["t"]]]],[11,"remove","","",18,[[["self"],["u32"]],["t"]]],[11,"clean","","",20,[[["self"],["b"]]]],[11,"get","","",20,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",20,[[["self"],["u32"]],["t"]]],[11,"insert","","",20,[[["self"],["u32"],["t"]]]],[11,"remove","","",20,[[["self"],["u32"]],["t"]]],[11,"clean","","",23,[[["self"],["b"]]]],[11,"get","","",23,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",23,[[["self"],["u32"]],["t"]]],[11,"insert","","",23,[[["self"],["u32"],["t"]]]],[11,"remove","","",23,[[["self"],["u32"]],["t"]]],[11,"clean","","",21,[[["self"],["b"]]]],[11,"get","","",21,[[["u32"],["self"]],["t"]]],[11,"get_mut","","",21,[[["self"],["u32"]],["t"]]],[11,"insert","","",21,[[["self"],["u32"],["t"]]]],[11,"remove","","",21,[[["self"],["u32"]],["t"]]],[11,"hash","deathframe::systems::system_prelude","",19,[[["self"],["__h"]]]],[11,"partial_cmp","","",47,[[["resourceid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",47,[[["resourceid"],["self"]],["bool"]]],[11,"le","","",47,[[["resourceid"],["self"]],["bool"]]],[11,"gt","","",47,[[["resourceid"],["self"]],["bool"]]],[11,"ge","","",47,[[["resourceid"],["self"]],["bool"]]],[11,"deref_mut","","",49,[[["self"]],["t"]]],[11,"eq","","",47,[[["resourceid"],["self"]],["bool"]]],[11,"ne","","",47,[[["resourceid"],["self"]],["bool"]]],[11,"cmp","","",47,[[["resourceid"],["self"]],["ordering"]]],[11,"clone","","",47,[[["self"]],["resourceid"]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"setup","","",49,[[["world"]]]],[11,"fetch","","",49,[[["world"]],["write"]]],[11,"reads","","",49,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",49,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"setup","","",48,[[["world"]]]],[11,"fetch","","",48,[[["world"]],["read"]]],[11,"reads","","",48,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",48,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"deref","","",48,[[["self"]],["t"]]],[11,"deref","","",49,[[["self"]],["t"]]],[11,"default","","",50,[[],["world"]]],[11,"from","","",49,[[["fetchmut"]],["write"]]],[11,"from","","",48,[[["fetch"]],["read"]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"drop","","",44,[[["self"]]]],[11,"eq","","",45,[[["self"],["handle"]],["bool"]]],[11,"clone","","",45,[[["self"]],["handle"]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",44,[[],["assetstorage"]]],[11,"hash","","",45,[[["__ha"],["self"]]]],[11,"add_to_entity","","",28,[[["entity"],["self"]],[["result",["error"]],["error"]]]],[11,"deserialize","","",30,[[["__d"]],[["result",["transparent"]],["transparent"]]]],[11,"deserialize","","",51,[[["__d"]],[["camera"],["result",["camera"]]]]],[11,"eq","","",15,[[["spritesheet"],["self"]],["bool"]]],[11,"ne","","",15,[[["spritesheet"],["self"]],["bool"]]],[11,"eq","","",51,[[["camera"],["self"]],["bool"]]],[11,"ne","","",51,[[["camera"],["self"]],["bool"]]],[11,"eq","","",16,[[["spriterender"],["self"]],["bool"]]],[11,"ne","","",16,[[["spriterender"],["self"]],["bool"]]],[11,"add_to_entity","","",30,[[["entity"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",51,[[["self"]],["camera"]]],[11,"clone","","",16,[[["self"]],["spriterender"]]],[11,"clone","","",30,[[["self"]],["transparent"]]],[11,"clone","","",15,[[["self"]],["spritesheet"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"serialize","","",51,[[["self"],["__s"]],["result"]]],[11,"default","","",30,[[],["transparent"]]],[11,"from","","",51,[[["projection"]],["camera"]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",14,[[],["inputhandler"]]],[11,"clone","deathframe::components::prelude","",8,[[["self"]],["gravity"]]],[11,"clone","","",37,[[["self"]],["basefriction"]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deserialize","","",8,[[["__d"]],[["result",["gravity"]],["gravity"]]]],[11,"deserialize","","",40,[[["__d"]],[["result",["solid"]],["solid"]]]],[11,"deserialize","","",9,[[["__d"]],[["result",["velocity"]],["velocity"]]]],[11,"deserialize","","",39,[[["__d"]],[["result",["hitbox"]],["hitbox"]]]],[11,"deserialize","","",37,[[["__d"]],[["basefriction"],["result",["basefriction"]]]]],[11,"into","","",39,[[],[["rect"],["vec",["rect"]]]]],[11,"run","deathframe::systems::prelude","",60,[[["self"]]]],[11,"run","","",59,[[["self"]]]],[11,"run","","",62,[[["self"]]]],[11,"run","","",61,[[["self"]]]],[11,"default","deathframe::components::prelude","",8,[[],["gravity"]]],[11,"default","","",9,[[],["velocity"]]],[11,"default","deathframe::systems::prelude","",60,[[],["applygravitysystem"]]],[11,"default","","",62,[[],["updatecollisionssystem"]]],[11,"default","deathframe::components::prelude","",37,[[],["basefriction"]]],[11,"default","deathframe::systems::prelude","",61,[[],["moveentitiessystem"]]],[11,"default","","",59,[[],["applybasefrictionsystem"]]],[11,"default","deathframe::components::prelude","",39,[[],["hitbox"]]],[11,"from","","",37,[[],["basefriction"]]],[11,"from","","",8,[[],["gravity"]]],[11,"from","","",9,[[],["velocity"]]],[11,"from","","",39,[[["rect"],["vec",["rect"]]],["hitbox"]]],[11,"default","deathframe::bundles","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"build","","",0,[[["dispatcherbuilder"],["world"]],[["result",["error"]],["error"]]]],[11,"build","","",1,[[["dispatcherbuilder"],["world"]],[["result",["error"]],["error"]]]],[11,"id","deathframe::systems::system_prelude","Returns the index of the `Entity`.",19,[[],["u32"]]],[11,"gen","","Returns the `Generation` of the `Entity`.",19,[[],["generation"]]],[11,"entry","","Returns an entry to the component associated to the entity.",22,[[["self"],["entity"]],[["result",["storageentry","wronggeneration"]],["wronggeneration"],["storageentry"]]]],[11,"entries","","Returns a `Join`-able structure that yields all indices,…",22,[[["self"]],["entries"]]],[11,"restrict","","Builds an immutable `RestrictedStorage` out of a…",22,[[["self"]],[["immutableparallelrestriction"],["restrictedstorage",["bitset","immutableparallelrestriction"]],["bitset"]]]],[11,"restrict_mut","","Builds a mutable `RestrictedStorage` out of a `Storage`.…",22,[[["self"]],[["restrictedstorage",["bitset","sequentialrestriction"]],["sequentialrestriction"],["bitset"]]]],[11,"par_restrict_mut","","Builds a mutable, parallel `RestrictedStorage`, does not…",22,[[["self"]],[["restrictedstorage",["bitset","mutableparallelrestriction"]],["mutableparallelrestriction"],["bitset"]]]],[11,"channel","","Returns the event channel tracking modified components.",22,[[["self"]],["eventchannel"]]],[11,"channel_mut","","Returns the event channel for…",22,[[["self"]],["eventchannel"]]],[11,"register_reader","","Starts tracking component events. Note that this reader id…",22,[[["self"]],[["readerid",["componentevent"]],["componentevent"]]]],[11,"flag","","Flags an index with a `ComponentEvent`.",22,[[["self"],["componentevent"]]]],[11,"new","","Creates a new `Storage` from a fetched allocator and a…",22,[[["entitiesres"],["fetch",["entitiesres"]],["d"]],["storage"]]],[11,"unprotected_storage","","Gets the wrapped storage.",22,[[["self"]]]],[11,"fetched_entities","","Returns the `EntitiesRes` resource fetched by this…",22,[[["self"]],["entitiesres"]]],[11,"get","","Tries to read the data associated with an `Entity`.",22,[[["entity"],["self"]],[["t"],["option"]]]],[11,"count","","Computes the number of elements this `Storage` contains by…",22,[[["self"]],["usize"]]],[11,"is_empty","","Checks whether this `Storage` is empty. This operation is…",22,[[["self"]],["bool"]]],[11,"contains","","Returns true if the storage has a component for this…",22,[[["entity"],["self"]],["bool"]]],[11,"mask","","Returns a reference to the bitset of this storage which…",22,[[["self"]],["bitset"]]],[11,"unprotected_storage_mut","","Gets mutable access to the wrapped storage.",22,[[["self"]]]],[11,"get_mut","","Tries to mutate the data associated with an `Entity`.",22,[[["self"],["entity"]],[["option"],["t"]]]],[11,"insert","","Inserts new data for a given `Entity`. Returns the result…",22,[[["self"],["entity"],["t"]],[["result",["option","error"]],["option"],["error"]]]],[11,"remove","","Removes the data associated with an `Entity`.",22,[[["self"],["entity"]],["option"]]],[11,"clear","","Clears the contents of the storage.",22,[[["self"]]]],[11,"drain","","Creates a draining storage wrapper which can be `.join`ed…",22,[[["self"]],["drain"]]],[11,"for_each","","This iterator-like method simply executes the passed…",4,[[["c"]]]],[11,"iter","","Returns an `Iterator` over both axes.",4,[[],["iter"]]],[11,"is_x","","Returns `true` if this is the `X` variant.",4,[[["self"]],["bool"]]],[11,"is_y","","Returns `true` if this is the `Y` variant.",4,[[["self"]],["bool"]]],[11,"builder","","Returns a new `RectBuilder`.",5,[[],["rectbuilder"]]],[11,"with_offset","","Offsets all sides by the given `Point`.",5,[[["point"]],["rect"]]],[11,"with_padding","","Adds a padding to all sides. Subtracts/adds the `Point`'s…",5,[[["point"]],["rect"]]],[11,"top","","",25,[[["f32"]],["rectbuilder"]]],[11,"bottom","","",25,[[["f32"]],["rectbuilder"]]],[11,"left","","",25,[[["f32"]],["rectbuilder"]]],[11,"right","","",25,[[["f32"]],["rectbuilder"]]],[11,"build","","Builds a new `Rect`.",25,[[],[["result",["rect","string"]],["rect"],["string"]]]],[11,"play_cycle","deathframe::components::prelude","Play the animation endlessly.",26,[[["self"]]]],[11,"play_once","","Play the animation once.",26,[[["self"]]]],[11,"current_sprite_id","","Returns the sprite ID of the current frame of animation,…",26,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"builder","","Returns an `AnimationsContainerBuilder`",27,[[],["animationscontainerbuilder"]]],[11,"play","","Play the animation with the given key. Returns an Error if…",27,[[["self"],["k"]],[["result",["string"]],["string"]]]],[11,"current","","Returns the key of the currently active animation, if any.",27,[[["self"]],[["k"],["option"]]]],[11,"animation","","Returns a new `Animation` associated to the given key, if…",27,[[["k"],["self"]],[["animation"],["option",["animation"]]]]],[11,"current_animation","","Returns a new `Animation`, for the current animation key,…",27,[[["self"]],[["animation"],["option",["animation"]]]]],[11,"new","deathframe::systems::system_prelude","Create a new Transform.",28,[[["matrix",["u3","u1"]],["u3"],["u1"],["unit",["quaternion"]],["translation",["u3"]],["quaternion"]],["transform"]]],[11,"set_scale","","Set the scaling factor of this transform.",28,[[["u3"],["self"],["matrix",["u3","u1"]],["u1"]]]],[11,"face_towards","","Makes the entity point towards `target`.",28,[[["u3"],["self"],["matrix",["u3","u1"]],["u1"]],["transform"]]],[11,"matrix","","Returns the local object matrix for the transform.",28,[[["self"]],[["f32"],["u4"],["matrix",["f32","u4","u4"]]]]],[11,"translation","","Returns a reference to the translation vector.",28,[[["self"]],["matrix"]]],[11,"translation_mut","","Returns a mutable reference to the translation vector.",28,[[["self"]],["matrix"]]],[11,"rotation","","Returns a reference to the rotation quaternion.",28,[[["self"]],["unit"]]],[11,"rotation_mut","","Returns a mutable reference to the rotation quaternion.",28,[[["self"]],["unit"]]],[11,"prepend_translation","","Move relatively to its current position, but the parent's…",28,[[["f32"],["u3"],["matrix",["f32","u3","u1"]],["self"],["u1"]],["transform"]]],[11,"append_translation","","Move relatively to its current position and orientation.",28,[[["f32"],["u3"],["matrix",["f32","u3","u1"]],["self"],["u1"]],["transform"]]],[11,"prepend_translation_along","","Move a distance along an axis relative to the parent's…",28,[[["f32"],["unit",["matrix"]],["matrix",["f32","u3","u1"]],["self"]],["transform"]]],[11,"append_translation_along","","Move a distance along an axis relative to the local…",28,[[["f32"],["unit",["matrix"]],["matrix",["f32","u3","u1"]],["self"]],["transform"]]],[11,"move_forward","","Move forward relative to current position and orientation.",28,[[["f32"],["self"]],["transform"]]],[11,"move_backward","","Move backward relative to current position and orientation.",28,[[["f32"],["self"]],["transform"]]],[11,"move_right","","Move right relative to current position and orientation.",28,[[["f32"],["self"]],["transform"]]],[11,"move_left","","Move left relative to current position and orientation.",28,[[["f32"],["self"]],["transform"]]],[11,"move_up","","Move up relative to current position and orientation.",28,[[["f32"],["self"]],["transform"]]],[11,"move_down","","Move down relative to current position and orientation.",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_translation_x","","Adds the specified amount to the translation vector's x…",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_translation_y","","Adds the specified amount to the translation vector's y…",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_translation_z","","Adds the specified amount to the translation vector's z…",28,[[["f32"],["self"]],["transform"]]],[11,"set_translation_x","","Sets the translation vector's x component to the specified…",28,[[["f32"],["self"]],["transform"]]],[11,"set_translation_y","","Sets the translation vector's y component to the specified…",28,[[["f32"],["self"]],["transform"]]],[11,"set_translation_z","","Sets the translation vector's z component to the specified…",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation_x_axis","","Premultiply a rotation about the x axis, i.e. perform a…",28,[[["f32"],["self"]],["transform"]]],[11,"append_rotation_x_axis","","Postmultiply a rotation about the x axis, i.e. perform a…",28,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_x_axis","","Set the rotation about the parent's x axis (or the global…",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation_y_axis","","Premultiply a rotation about the y axis, i.e. perform a…",28,[[["f32"],["self"]],["transform"]]],[11,"append_rotation_y_axis","","Postmultiply a rotation about the y axis, i.e. perform a…",28,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_y_axis","","Set the rotation about the parent's y axis (or the global…",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation_z_axis","","Premultiply a rotation about the z axis, i.e. perform a…",28,[[["f32"],["self"]],["transform"]]],[11,"append_rotation_z_axis","","Postmultiply a rotation about the z axis, i.e. perform a…",28,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_z_axis","","Set the rotation about the parent's z axis (or the global…",28,[[["f32"],["self"]],["transform"]]],[11,"rotate_2d","","Perform a rotation about the axis perpendicular to X and…",28,[[["f32"],["self"]],["transform"]]],[11,"set_rotation_2d","","Set the rotation about the axis perpendicular to X and Y,…",28,[[["f32"],["self"]],["transform"]]],[11,"prepend_rotation","","Premultiply a rotation, i.e. rotate relatively to the…",28,[[["f32"],["unit",["matrix"]],["matrix",["f32","u3","u1"]],["self"]],["transform"]]],[11,"append_rotation","","Postmultiply a rotation, i.e. rotate relatively to the…",28,[[["f32"],["unit",["matrix"]],["matrix",["f32","u3","u1"]],["self"]],["transform"]]],[11,"set_translation","","Set the position.",28,[[["u3"],["self"],["matrix",["u3","u1"]],["u1"]],["transform"]]],[11,"append_translation_xyz","","Adds the specified amounts to the translation vector.",28,[[["f32"],["self"]],["transform"]]],[11,"set_translation_xyz","","Sets the specified values of the translation vector.",28,[[["f32"],["self"]],["transform"]]],[11,"set_rotation","","Sets the rotation of the transform.",28,[[["self"],["unit",["quaternion"]],["quaternion"]],["transform"]]],[11,"set_rotation_euler","","Set the rotation using x, y, z Euler axes.",28,[[["f32"],["self"]],["transform"]]],[11,"euler_angles","","Get the Euler angles of the current rotation. Returns in a…",28,[[["self"]]]],[11,"concat","","Concatenates another transform onto `self`.",28,[[["self"],["transform"]],["transform"]]],[11,"is_finite","","Verifies that the global `Matrix4` doesn't contain any NaN…",28,[[["self"]],["bool"]]],[11,"view_matrix","","Calculates the inverse of this transform, which is in…",28,[[["self"]],[["f32"],["u4"],["matrix",["f32","u4","u4"]]]]],[11,"global_view_matrix","","Calculates the inverse of this transform, which is in…",28,[[["self"]],[["f32"],["u4"],["matrix",["f32","u4","u4"]]]]],[11,"copy_local_to_global","","This function allows for test cases of copying the local…",28,[[["self"]]]],[11,"isometry_mut","","Translation + rotation value",28,[[["self"]],["isometry"]]],[11,"scale_mut","","Scale vector",28,[[["self"]],["matrix"]]],[11,"set_isometry","","Translation + rotation value",28,[[["f32"],["u3"],["self"],["isometry",["f32","u3","unit"]],["unit",["quaternion"]]],["transform"]]],[11,"isometry","","Translation + rotation value",28,[[["self"]],["isometry"]]],[11,"scale","","Scale vector",28,[[["self"]],["matrix"]]],[11,"global_matrix","","The global transformation matrix.",28,[[["self"]],["matrix"]]],[11,"builder","","",31,[[],["confinedbuilder"]]],[11,"new","","Creates a new `Follow` component, which should follow the…",32,[[["entity"]],["follow"]]],[11,"with_priority","","Set a custom priority for this follower. Entities with…",32,[[["i32"]],["follow"]]],[11,"with_padding","","",33,[[],["loadable"]]],[11,"new","","Create a new `Loader` with the given `x` and `y` loading…",35,[[["f32"]],["loader"]]],[11,"new","","",6,[[["f32"]],["size"]]],[11,"half","","Returns a new `Size` with the width and height fields the…",6,[[["self"]],["size"]]],[11,"builder","deathframe::components::prelude","Create a new `BaseFrictionBuilder`",37,[[],["basefrictionbuilder"]]],[11,"new","","Create a new `BaseFriction` component with the given…",37,[[["f32"],["option",["f32"]]],["basefriction"]]],[11,"set_enabled","","Set the enabled state for the given `Axis` of this…",37,[[["self"],["axis"],["bool"]]]],[11,"new","","",38,[[["t"]],["collidable"]]],[11,"new","","",7,[[["c"]],["collider"]]],[11,"query","","Returns a `Query` type for this collider.",7,[[["self"]],["q"]]],[11,"builder","","Creates a new `GravityBuilder`.",8,[[],["gravitybuilder"]]],[11,"set","","Set the gravity strength for the given `Axis` to the given…",8,[[["f32"],["self"],["axis"]]]],[11,"get","","Returns the gravity strength of the given `Axis`.",8,[[["axis"],["self"]],[["f32"],["option",["f32"]]]]],[11,"new","","",39,[[],["hitbox"]]],[11,"with_rect","","",39,[[["rect"]],["hitbox"]]],[11,"with_rects","","",39,[[["rect"],["vec",["rect"]]],["hitbox"]]],[11,"add_rect","","",39,[[["self"],["rect"]]]],[11,"new","","",40,[[["c"]],["solid"]]],[11,"new","","Creates a new `Velocity` with the given initial `x` and…",9,[[["f32"]],["velocity"]]],[11,"builder","","Creates a new `VelocityBuilder`.",9,[[],["velocitybuilder"]]],[11,"get","","Get the current velocity for the given `Axis`.",9,[[["axis"],["self"]],["f32"]]],[11,"set","","Set the velocity for the given `Axis` to the given value.",9,[[["f32"],["self"],["axis"]]]],[11,"set_with_max","","Set the velocity for the given `Axis`, to the given value,…",9,[[["f32"],["self"],["axis"]]]],[11,"increase","","Increase the velocity for the given `Axis`, by the given…",9,[[["f32"],["self"],["axis"]]]],[11,"increase_with_max","","Increase the velocity for the given `Axis`, by the given…",9,[[["f32"],["self"],["axis"]]]],[11,"clear","","Clear the velocity of the given axis.",9,[[["self"],["axis"]]]],[11,"clear_all","","Clear both velocity axes.",9,[[["self"]]]],[11,"with_priority","deathframe::systems::system_prelude","Which `InsertionAction` to prioritize. So if the `Insert`…",41,[[["insertionaction"]],["entitycomponentinserter"]]],[11,"with_cache","","If caching logic should be used. The caching is pretty…",41,[[["bool"]],["entitycomponentinserter"]]],[11,"insert","","Stage the given entity for insertion. So on `run`, the…",41,[[["self"],["entity"]]]],[11,"remove","","Stage the given entity for removal. So on `run`, the given…",41,[[["self"],["entity"]]]],[11,"run","","Run all `InsertionAction`s at once. When inserting,…",41,[[["storage"],["self"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new `InputManager`.",42,[[],["inputmanager"]]],[11,"is_down","","Returns `true` if the action with the given name was…",42,[[["self"]],["bool"]]],[11,"is_up","","Returns `true` if the action with the given name was…",42,[[["self"]],["bool"]]],[11,"is_pressed","","Returns `true` if the action with the given name is being…",42,[[["self"]],["bool"]]],[11,"axis_value","","Behaves identically to…",42,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"axis_value_find","","Similar to `axis_value`, but instead of passing a specific…",42,[[["self"],["f"]],[["f32"],["option",["f32"]]]]],[11,"update","","This method is called every frame, by the…",42,[[["self"],["inputhandler"]]]],[11,"insert","","Insert a new `SpriteSheetHandle` with an identifier name…",43,[[["handle",["spritesheet"]],["self"],["k"],["spritesheet"]]]],[11,"get","","Get the `SpriteSheetHandle` with the given identifier…",43,[[["k"],["self"]],[["handle",["spritesheet"]],["option",["handle"]]]]],[11,"load","","Load a new `SpriteSheet` and `SpriteSheetHandle` into this…",43,[[["self"],["world"],["p"]]]],[11,"get_or_load","","Get a `SpriteSheetHandle` with the given path to the…",43,[[["self"],["world"],["p"]],[["handle",["spritesheet"]],["spritesheet"]]]],[11,"has_finished_loading_all","","Returns `true` if all `SpriteSheetHandle`s' textures have…",43,[[["self"],["world"]],["bool"]]],[11,"new","","Creates a new asset storage.",44,[[],["assetstorage"]]],[11,"unload_all","","Remove all data from asset storages, invalidating all…",44,[[["self"]]]],[11,"clone_asset","","When cloning an asset handle, you'll get another handle,…",44,[[["self"],["handle"]],[["handle"],["option",["handle"]]]]],[11,"get","","Get an asset from a given asset handle.",44,[[["self"],["handle"]],[["option"],["a"]]]],[11,"get_version","","Get an asset version from a given asset handle.",44,[[["self"],["handle"]],[["option",["u32"]],["u32"]]]],[11,"get_with_version","","Get an asset and it's version from a given asset handle.",44,[[["self"],["handle"]],["option"]]],[11,"get_by_id","","Get an asset by it's handle id.",44,[[["u32"],["self"]],[["option"],["a"]]]],[11,"replace","","Replace asset under given handle, incrementing the version…",44,[[["a"],["self"],["handle"]],["a"]]],[11,"insert","","Insert preloaded asset into storage synchronously without…",44,[[["a"],["self"]],["handle"]]],[11,"contains","","Check if given handle points to a valid asset in the…",44,[[["self"],["handle"]],["bool"]]],[11,"contains_id","","Check if given asset id points to a valid asset in the…",44,[[["u32"],["self"]],["bool"]]],[11,"get_by_id_unchecked","","Get an asset by it's handle id without checking the…",44,[[["u32"],["self"]],["a"]]],[11,"get_mut","","Get an asset mutably from a given asset handle.",44,[[["self"],["handle"]],[["a"],["option"]]]],[11,"process","","Process finished asset data and maintain the storage.",44,[[["option",["hotreloadstrategy"]],["hotreloadstrategy"],["threadpool"],["self"],["f"],["u64"]]]],[11,"process_custom_drop","","Process finished asset data and maintain the storage. This…",44,[[["u64"],["option",["hotreloadstrategy"]],["hotreloadstrategy"],["threadpool"],["self"],["f"],["d"]]]],[11,"id","","Return the 32 bit id of this handle.",45,[[["self"]],["u32"]]],[11,"downgrade","","Downgrades the handle and creates a `WeakHandle`.",45,[[["self"]],["weakhandle"]]],[11,"delta_seconds","","Gets the time difference between frames in seconds.",46,[[["self"]],["f32"]]],[11,"delta_time","","Gets the time difference between frames.",46,[[["self"]],["duration"]]],[11,"delta_real_seconds","","Gets the time difference between frames in seconds…",46,[[["self"]],["f32"]]],[11,"delta_real_time","","Gets the time difference between frames ignoring the time…",46,[[["self"]],["duration"]]],[11,"fixed_seconds","","Gets the fixed time step in seconds.",46,[[["self"]],["f32"]]],[11,"fixed_time","","Gets the fixed time step.",46,[[["self"]],["duration"]]],[11,"frame_number","","Gets the current frame number. This increments by 1 every…",46,[[["self"]],["u64"]]],[11,"absolute_time","","Gets the time since the start of the game, taking into…",46,[[["self"]],["duration"]]],[11,"absolute_time_seconds","","Gets the time since the start of the game as seconds,…",46,[[["self"]],["f64"]]],[11,"absolute_real_time","","Gets the time since the start of the game, ignoring the…",46,[[["self"]],["duration"]]],[11,"absolute_real_time_seconds","","Gets the time since the start of the game as seconds,…",46,[[["self"]],["f64"]]],[11,"time_scale","","Gets the current time speed multiplier.",46,[[["self"]],["f32"]]],[11,"interpolation_alpha","","Gets the current interpolation alpha factor.",46,[[["self"]],["f32"]]],[11,"set_delta_seconds","","Gets the total number of frames that have been played in…",46,[[["f32"],["self"]]]],[11,"set_delta_time","","Sets both `delta_time` and `delta_seconds` based on the…",46,[[["self"],["duration"]]]],[11,"set_fixed_seconds","","Sets both `fixed_seconds` and `fixed_time` based on the…",46,[[["f32"],["self"]]]],[11,"set_fixed_time","","Sets both `fixed_time` and `fixed_seconds` based on the…",46,[[["self"],["duration"]]]],[11,"increment_frame_number","","Increments the current frame number by 1.",46,[[["self"]]]],[11,"set_time_scale","","Sets the time multiplier that affects how time values are…",46,[[["f32"],["self"]]]],[11,"start_fixed_update","","Restarts the internal fixed update accumulator to the…",46,[[["self"]]]],[11,"step_fixed_update","","Checks to see if we should perform another fixed update…",46,[[["self"]],["bool"]]],[11,"finish_fixed_update","","Updates the interpolation alpha factor given the current…",46,[[["self"]]]],[11,"new","","Creates a new resource id from a given type.",47,[[],["resourceid"]]],[11,"from_type_id","","Create a new resource id from a raw type ID.",47,[[["typeid"]],["resourceid"]]],[11,"new_with_dynamic_id","","Creates a new resource id from a given type and a…",47,[[["u64"]],["resourceid"]]],[11,"from_type_id_and_dynamic_id","","Create a new resource id from a raw type ID and a \"dynamic…",47,[[["u64"],["typeid"]],["resourceid"]]],[11,"empty","","Creates a new, empty resource container.",50,[[],["world"]]],[11,"insert","","Inserts a resource into this container. If the resource…",50,[[["self"],["r"]]]],[11,"remove","","Removes a resource of type `R` from the `World` and…",50,[[["self"]],["option"]]],[11,"has_value","","Returns true if the specified resource type `R` exists in…",50,[[["self"]],["bool"]]],[11,"has_value_raw","","Returns true if the specified resource type exists in…",50,[[["resourceid"],["self"]],["bool"]]],[11,"entry","","Returns an entry for the resource with type `R`.",50,[[["self"]],["entry"]]],[11,"system_data","","Gets `SystemData` `T` from the `World`. This can be used…",50,[[["self"]],["t"]]],[11,"setup","","Sets up system data `T` for fetching afterwards.",50,[[["self"]]]],[11,"exec","","Executes `f` once, right now and with the specified system…",50,[[["self"],["f"]],["r"]]],[11,"fetch","","Fetches the resource with the specified type `T` or panics…",50,[[["self"]],["fetch"]]],[11,"try_fetch","","Like `fetch`, but returns an `Option` instead of inserting…",50,[[["self"]],[["option",["fetch"]],["fetch"]]]],[11,"try_fetch_by_id","","Like `try_fetch`, but fetches the resource by its…",50,[[["resourceid"],["self"]],[["option",["fetch"]],["fetch"]]]],[11,"fetch_mut","","Fetches the resource with the specified type `T` mutably.",50,[[["self"]],["fetchmut"]]],[11,"try_fetch_mut","","Like `fetch_mut`, but returns an `Option` instead of…",50,[[["self"]],[["option",["fetchmut"]],["fetchmut"]]]],[11,"try_fetch_mut_by_id","","Like `try_fetch_mut`, but fetches the resource by its…",50,[[["resourceid"],["self"]],[["option",["fetchmut"]],["fetchmut"]]]],[11,"insert_by_id","","Internal function for inserting resources, should only be…",50,[[["self"],["resourceid"],["r"]]]],[11,"remove_by_id","","Internal function for removing resources, should only be…",50,[[["self"],["resourceid"]],["option"]]],[11,"try_fetch_internal","","Internal function for fetching resources, should only be…",50,[[["resourceid"],["self"]],[["trustcell"],["option",["trustcell"]]]]],[11,"get_mut","","Retrieves a resource without fetching, which is cheaper,…",50,[[["self"]],[["option"],["t"]]]],[11,"get_mut_raw","","Retrieves a resource without fetching, which is cheaper,…",50,[[["self"],["resourceid"]],[["option",["resource"]],["resource"]]]],[11,"new","","Creates a new input handler.",14,[[],["inputhandler"]]],[11,"send_event","","Updates the input handler with a new engine event.",14,[[["eventchannel"],["f32"],["event"],["self"]]]],[11,"send_controller_event","","Updates the input handler with a new controller event.",14,[[["eventchannel"],["self"],["controllerevent"]]]],[11,"send_frame_begin","","This function is to be called whenever a frame begins. It…",14,[[["self"]]]],[11,"keys_that_are_down","","Returns an iterator over all keys that are down.",14,[[["self"]]]],[11,"key_is_down","","Checks if a key is down.",14,[[["virtualkeycode"],["self"]],["bool"]]],[11,"mouse_buttons_that_are_down","","Returns an iterator over all pressed mouse buttons",14,[[["self"]]]],[11,"mouse_button_is_down","","Checks if a mouse button is down.",14,[[["self"],["mousebutton"]],["bool"]]],[11,"mouse_wheel_value","","If the mouse wheel was scrolled this frame this function…",14,[[["self"],["bool"]],["f32"]]],[11,"scan_codes_that_are_down","","Returns an iterator over all pressed scan codes",14,[[["self"]]]],[11,"scan_code_is_down","","Checks if the key corresponding to a scan code is down.",14,[[["u32"],["self"]],["bool"]]],[11,"controller_buttons_that_are_down","","Returns an iterator over all pressed controller buttons on…",14,[[["self"]]]],[11,"controller_button_is_down","","Checks if a controller button is down on specific…",14,[[["u32"],["self"],["controllerbutton"]],["bool"]]],[11,"connected_controllers","","List controller ids of all currently connected…",14,[[["self"]]]],[11,"is_controller_connected","","Returns true if a controller with the given id is connected.",14,[[["u32"],["self"]],["bool"]]],[11,"mouse_position","","Gets the current mouse position.",14,[[["self"]],["option"]]],[11,"buttons_that_are_down","","Returns an iterator over all buttons that are down.",14,[[["self"]]]],[11,"button_is_down","","Checks if a button is down.",14,[[["self"],["button"]],["bool"]]],[11,"axis_value","","Returns the value of an axis by the id, if the id doesn't…",14,[[["self"],["a"]],[["f32"],["option",["f32"]]]]],[11,"action_is_down","","Returns true if any of the actions bindings is down.",14,[[["self"],["a"]],[["option",["bool"]],["bool"]]]],[11,"standard_2d","","Create a normalized camera for 2D.",51,[[["f32"]],["camera"]]],[11,"standard_3d","","Create a standard camera for 3D.",51,[[["f32"]],["camera"]]],[11,"custom_matrix","","Creates a `Projection::CustomMatrix` with the matrix…",51,[[["f32"],["u4"],["matrix",["f32","u4","u4"]]],["camera"]]],[11,"as_matrix","","Returns a reference to the inner `Projection` matrix of…",51,[[["self"]],["matrix"]]],[11,"as_inverse_matrix","","Returns a reference to the inverted `Projection` matrix of…",51,[[["self"]],["matrix"]]],[11,"projection","","Returns a reference to the inner [Projection] of this…",51,[[["self"]],["projection"]]],[11,"projection_mut","","Returns a mutable reference to the inner [Projection] of…",51,[[["self"]],["projection"]]],[11,"set_projection","","Sets the inner [Projection] of this camera.",51,[[["self"],["projection"]]]],[11,"with_cache","deathframe::systems::prelude","",55,[[["bool"]],["entityloadersystem"]]]],"p":[[3,"PhysicsBundle"],[3,"AnimationBundle"],[8,"Component"],[8,"ByAxis"],[4,"Axis"],[3,"Rect"],[3,"Size"],[3,"Collider"],[3,"Gravity"],[3,"Velocity"],[4,"InsertionAction"],[8,"Join"],[8,"System"],[8,"SystemData"],[3,"InputHandler"],[3,"SpriteSheet"],[3,"SpriteRender"],[4,"Texture"],[3,"DenseVecStorage"],[3,"Entity"],[3,"HashMapStorage"],[3,"NullStorage"],[3,"Storage"],[3,"VecStorage"],[3,"AxisIter"],[3,"RectBuilder"],[3,"Animation"],[3,"AnimationsContainer"],[3,"Transform"],[3,"Hidden"],[3,"Transparent"],[3,"Confined"],[3,"Follow"],[3,"Loadable"],[3,"Loaded"],[3,"Loader"],[3,"ScaleOnce"],[3,"BaseFriction"],[3,"Collidable"],[3,"Hitbox"],[3,"Solid"],[3,"EntityComponentInserter"],[3,"InputManager"],[3,"SpriteSheetHandles"],[3,"AssetStorage"],[3,"Handle"],[3,"Time"],[3,"ResourceId"],[3,"Read"],[3,"Write"],[3,"World"],[3,"AmethystCamera"],[3,"PlayAnimationsSystem"],[3,"SwitchAnimationsSystem"],[3,"ConfineEntitiesSystem"],[3,"EntityLoaderSystem"],[3,"FollowSystem"],[3,"InputManagerSystem"],[3,"ScaleSpritesSystem"],[3,"ApplyBaseFrictionSystem"],[3,"ApplyGravitySystem"],[3,"MoveEntitiesSystem"],[3,"UpdateCollisionsSystem"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);