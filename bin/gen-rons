#!/bin/bash
# Generate spritesheet RON config files using `sprongen`.
# Any arguments are passed to the underlying `sprongen` command.

# shellcheck source=./util.sh disable=SC2155
function _dl_util_sh {
    local UTIL_VERSION="v2.2.4"
    local dir="$( dirname "$( realpath "$1" )" )"
    [ -f "${dir}/util.sh" ] || bash "${dir}/download-util.sh" "$UTIL_VERSION" || exit 1
    source "${dir}/util.sh"
}; _dl_util_sh "$0"

SPRITESHEETS_DIR="${ROOT}/resources/spritesheets/tiles"
TILE_SIZE="8x8"
MIN_SPRONGEN_VERSION="0.0.2"

check "cargo"

# https://stackoverflow.com/a/4024263/10927893
version_ge() {
    [  "$1" = "$( echo -e "$1\n$2" | sort -Vr | head -n1 )" ]
}

function main {
    check_dir "$SPRITESHEETS_DIR"
    check_installed_sprongen

    local args
    args=( \
        --amethyst-version "master" \
        --tile-size "$TILE_SIZE" \
        "$@" \
    )

    msg "Generating RON config files for PNG spritesheets in
    $(clr "${CLR_CODE[@]}")${SPRITESHEETS_DIR}$(clrrs)"
    try_run \
        sprongen \
        "${SPRITESHEETS_DIR}"/*.png \
        "${args[@]}"
}

function check_installed_sprongen {
    (is_available "sprongen" \
        && version_ge \
            "$( sprongen --version | cut -d" " -f2 )" \
            "$MIN_SPRONGEN_VERSION" ) \
        || err_sprongen_not_installed
}

function err_sprongen_not_installed {
    local clrrs="$( clrrs )"
    local clrcode="$( clr "${CLR_CODE[@]}" )"
    local clrerr="$( clr "${CLR_ERR[@]}" )"
    local sprongen_display="${clrcode}sprongen${clrrs}"

    local input=
    local prompt_message=
    prompt_message="\
${clrerr}Error: ${sprongen_display} CLI app is not installed or is out-dated.
Install automatically with ${clrcode}cargo${clrrs}? [y|N] "

    if prompt_question "$prompt_message"; then
        try_run \
            cargo \
            --color always \
            install sprongen \
            --version "$MIN_SPRONGEN_VERSION" \
            --force
    else
        err "Cannot continue without ${sprongen_display}."
    fi
}

main "$@"
